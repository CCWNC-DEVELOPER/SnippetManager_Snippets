<?xml version="1.0" encoding="utf-8"?>
<dictionary>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ARRAYLIST</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>ReadFileInLineByLineIntoAnArrayList</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ARRAYLIST</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>ReadFileInLineByLineIntoAnArrayList</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>

Imports System.IO               'For StreamReader


Private Sub ReadFileInLineByLineIntoAnArrayList(ByVal strPathFileInput As String, ByRef arrlstToPopulate As ArrayList)
        'Imports System.IO               'For StreamReader
        ' The StreamReader must be defined outside of the Try-Catch block
        '   in order to reference it in the Finally block.
        Dim myStreamReader As StreamReader
        Dim myInputString As String
        Dim rowCount As Integer = 0

        ' Ensure that the creation of the new StreamReader is wrapped in a 
        '   Try-Catch block, since an invalid filename could have been used.
        Try
            ' Create a StreamReader using a Shared (static) File class.
            myStreamReader = File.OpenText(strPathFileInput)


            ' Begin by reading a single line
            arrlstToPopulate.Clear()
            myInputString = myStreamReader.ReadLine()
            gig.TraceMe("First Line: " &amp; myInputString)
            ' Continue reading while there are still lines to be read
            While Not myInputString Is Nothing
                arrlstToPopulate.Add(myInputString)
                rowCount += 1
                gig.TraceMe(rowCount.ToString() &amp; "] " &amp; myInputString)
                ' Read the next line.
                myInputString = myStreamReader.ReadLine()
            End While
        Catch exc As Exception
            ' Show the error to the user.
            gig.TraceMe("File could not be opened or read." + VbCrLf + _
                "Please verify that the filename is correct, " + _
                "and that you have read permissions for the desired " + _
                "directory." + VbCrLf + VbCrLf + "Exception: " + exc.Message)
        Finally
            ' Close the object if it has been created.
            If Not myStreamReader Is Nothing Then
                myStreamReader.Close()
            End If
        End Try
    End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Error</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>SqlClient_Error</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Error</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>SqlClient_Error</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'SqlClient_Error


Imports System
Imports System.Data
Imports System.Data.SqlClient


Public Class MainClass
   Shared Sub Main()
      Dim SqlConnection1 As New SqlConnection("server=(local)\SQLEXPRESS;" &amp; _
          "integrated security=sspi;database=MyDatabase")

      Dim thisCommand As SqlCommand = SqlConnection1.CreateCommand()
      thisCommand.CommandText = "Select nonExistColumn from Employee"

      Try
         ' Open connection
         SqlConnection1.Open()

         ' Run stored procedure
         thisCommand.ExecuteNonQuery()

      Catch ex As System.Data.SqlClient.SqlException
         Dim str As String
         str = "Source : " &amp; ex.Source &amp; ControlChars.NewLine
         str &amp;= "Number : " &amp; ex.Number &amp; ControlChars.NewLine
         str &amp;= "Message : " &amp; ex.Message &amp; ControlChars.NewLine
         str &amp;= "Class : " &amp; ex.Class.ToString() &amp; ControlChars.NewLine
         str &amp;= "Procedure : " &amp; ex.Procedure &amp; ControlChars.NewLine
         str &amp;= "Line number : " &amp; ex.LineNumber.ToString() &amp; ControlChars.NewLine
         str &amp;= "Server : " &amp; ex.Server
         Console.WriteLine("Database Exception" &amp; str)

      Catch ex As System.Exception
         Dim str As String
         str = "Source : " &amp; ex.Source
         str &amp;= ControlChars.NewLine
         str &amp;= "Exception Message : " &amp; ex.Message
         Console.WriteLine("General Exception" &amp; str)

      Finally
         If SqlConnection1.State = ConnectionState.Open Then
            Console.WriteLine("Finally block closing the connection")
            SqlConnection1.Close()
         End If
      End Try
   End Sub
End Class</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Transaction</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name> StoredProcedure_With_Transaction</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Transaction</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name> StoredProcedure_With_Transaction</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>--StoredProcedure_With_Transaction



CREATE PROCEDURE up_parmins_employer_information (
	@Current_Employer_ID INT,
	@Current_Employer_Name VARCHAR(30), 
	@Current_Employer_Area_Code SMALLINT, 
	@Current_Employer_Phone_Number INT, 
	@Years_At_Current_Employer TINYINT,
	@Job_Title VARCHAR(30), 
	@Previous_Employer_ID INT, 
	@Previous_Employer_Name VARCHAR(30), 
	@Previous_Employer_Area_Code SMALLINT,
	@Previous_Employer_Phone_Number INT, 
	@Years_At_Previous_Employer TINYINT,
	@Customer_Information_ID INT OUTPUT, 
	@Message VARCHAR(300) OUTPUT
	) 
	AS

-- ****************************************************************************************
-- Declare variables
-- ****************************************************************************************
DECLARE @Continue				BIT,
	@Name_Required				BIT,
	@Current_Employer_Phone_Number_ID	INT,
	@Previous_Employer_Phone_Number_ID	INT,

--
-- Turn on default value to continue
--
SELECT @Continue = 1

--
-- Set default values
--
SELECT @Customer_Information_ID = 0
SELECT @Message = ''

-- ****************************************************************************************
-- Validate Current Employer ID or Current Employer Name exists
-- ****************************************************************************************
--
-- Check Current Employer ID first
--
IF @Current_Employer_ID IS NULL OR @Current_Employer_ID = 0
	BEGIN
	--
	-- Current Employer Name is required
	--
	SELECT @Name_Required = 1
	END
ELSE
	BEGIN
	--
	-- Current employer name is not required
	--
	SELECT @Name_Required = 0
	END

--
-- If @Name_Required = 1 then the Current Employer Name is required
--
IF @Name_Required = 1
	BEGIN
	--
	-- Ensure Current Employer Name is not null or empty
	--
	IF @Current_Employer_Name IS NULL OR 
		DATALENGTH(LTRIM(@Current_Employer_Name)) = 0
		BEGIN
		SELECT @Message = 'Current Employer Name or ID is required. '
		SELECT @Continue = 0
		END
	END

-- ****************************************************************************************
-- Validate current employer area code and phone number
-- ****************************************************************************************
--
-- Validate area code is not null or zero
--
IF @Current_Employer_Area_Code IS NULL OR @Current_Employer_Area_Code = 0
	BEGIN
	SELECT @Message = @Message + 'Current employer area code is a required field. '
	SELECT @Continue = 0
	END
--
-- Validate area code is three digits (as US area codes are always 3 digits)
--
IF DATALENGTH(CAST(@Current_Employer_Area_Code AS VARCHAR(5))) &lt;&gt; 3
	BEGIN
	SELECT @Message = @Message + 'Current employer area code is not valid. '
	SELECT @Continue = 0
	END
--
-- Validate phone number is not null or zero
--
IF @Current_Employer_Phone_Number IS NULL OR @Current_Employer_Phone_Number = 0
	BEGIN
	SELECT @Message = @Message + 'Current employer phone number is a required field. 
'
	SELECT @Continue = 0
	END
--
-- Validate phone number is seven digits
--
IF DATALENGTH(CAST(@Current_Employer_Phone_Number AS VARCHAR(10))) &lt;&gt; 7
	BEGIN
	SELECT @Message = @Message + 'Current employer phone number is not valid. '
	SELECT @Continue = 0
	END

-- ****************************************************************************************
-- Validate current employer years of employment
-- ****************************************************************************************
--
-- Validate years is not null or zero
--
IF @Years_At_Current_Employer IS NULL OR @Years_At_Current_Employer = 0
	BEGIN 
	SELECT @Message = @Message + 'Years at current employer is required. '
	SELECT @Continue = 0
	END
--
-- Validate years is within an acceptable range
--
IF @Years_At_Current_Employer &gt; 50
	BEGIN
	SELECT @Message = @Message + 'Years at current employer is invalid. '
	SELECT @Continue = 0
	END

-- ****************************************************************************************
-- Validate job title
-- ****************************************************************************************
IF @Job_Title IS NULL OR DATALENGTH(LTRIM(@Job_Title)) = 0
	BEGIN
	SELECT @Message = @Message + 'Job title is required. '
	SELECT @Continue = 0
	END

-- ****************************************************************************************
-- Validate Previous Employer ID or Previous Employer Name exists
-- ****************************************************************************************
--
-- If either Previous Employer ID or name exists, perform the validations
--
IF @Previous_Employer_ID  &gt; 0 OR DATALENGTH(LTRIM(@Previous_Employer_Name)) &gt; 0

	BEGIN
	--
	-- Check Previous Employer ID first
	--
	IF @Previous_Employer_ID IS NULL OR @Previous_Employer_ID = 0
		BEGIN
		--
		-- Previous employer name is required
		--
		SELECT @Name_Required = 1
		END
	ELSE
		BEGIN
		--
		-- Previous employer name is not required
		--
		SELECT @Name_Required = 0
		END

	--
	-- If @Name_Required = 1 then the previous employer name is required
	--
	IF @Name_Required = 1
		BEGIN
		--
		-- Ensure previous employer name is not null or empty
		--
		IF @Previous_Employer_Name IS NULL OR 
			DATALENGTH(LTRIM(@Previous_Employer_Name)) = 0
			BEGIN
			SELECT @Message = @Message +
				'Previous employer name or ID has been specified but ' +
				'is not valid. '
			SELECT @Continue = 0
			END
		END
	
	-- ********************************************************************************
	-- Validate previous employer area code and phone number
	-- ********************************************************************************
	--
	-- Validate area code is not null or zero
	--
	IF @Previous_Employer_Area_Code IS NULL OR @Previous_Employer_Area_Code = 
0
		BEGIN
		SELECT @Message = @Message + 'Previous employer area code is a required ' 
+
			'field when a previous employer has been specified. '
		SELECT @Continue = 0
		END
	--
	-- Validate area code is three digits
	--
	IF DATALENGTH(CAST(@Previous_Employer_Area_Code AS VARCHAR(5))) &lt;&gt; 3
		BEGIN
		SELECT @Message = @Message + 'Previous employer area code is not valid. '
		SELECT @Continue = 0
		END
	--
	-- Validate phone number is not null or zero
	--
	IF @Previous_Employer_Phone_Number IS NULL OR 
@Previous_Employer_Phone_number = 0
		BEGIN
		SELECT @Message = @Message + 'Previous employer phone number is a ' +
			'required field when a previous employer has been specified. '
		SELECT @Continue = 0
		END
	--
	-- Validate phone number is seven digits
	--
	IF DATALENGTH(CAST(@Previous_Employer_Phone_Number AS VARCHAR(10))) &lt;&gt; 
7
		BEGIN
		SELECT @Message = @Message + 'Previous employer phone number is not 
valid. '
		SELECT @Continue = 0
		END
	
	-- ********************************************************************************
	-- Validate previous employer years of employment
	-- ********************************************************************************
	--
	-- Validate years is not null or zero
	--
	IF @Years_At_Previous_Employer IS NULL OR @Years_At_Previous_Employer = 0
		BEGIN 
		SELECT @Message = @Message + 'Years at previous employer is required ' +
			'when a previous employer has been specified. '
		SELECT @Continue = 0
		END
	--
	-- Validate years is within an acceptable range
	--
	IF @Years_At_Previous_Employer &gt; 50
		BEGIN
		SELECT @Message = @Message + 'Years at previous employer is invalid. '
		SELECT @Continue = 0
		END
	END

-- ****************************************************************************************
-- All data has been validated, either return to the caller with a bad return and messages
-- or continue on and insert the values
-- ****************************************************************************************
IF @Continue = 0
	BEGIN
	-- 
	-- Return to the caller with a bad return code
	-- the messages are in the @Message output parameter
	--
	RETURN 1
	END
ELSE
	BEGIN
	-- ********************************************************************************
	-- Start a transaction, if any code fails then we back out everything
	-- ********************************************************************************
	BEGIN TRANSACTION Employer_Information

	-- ********************************************************************************
	-- Determine if we are using an existing employer or inserting a new one
	-- ********************************************************************************
	IF @Current_Employer_ID IS NULL OR @Current_Employer_ID = 0
		BEGIN
		--
		-- We are inserting a new current employer
		--
		-- ************************************************************************
		-- Insert the current employer phone number
		-- ************************************************************************
		INSERT INTO Phone_Number_T
			(Area_Code_SI, Phone_Number_IN, Last_Update_DT)
			VALUES(@Current_Employer_Area_Code, 
@Current_Employer_Phone_Number,
				GETDATE())

		--
		-- Check for errors
		--
		IF @@ERROR &lt;&gt; 0
			BEGIN
			--
			-- Rollback the transaction and return to the caller
			--
			ROLLBACK TRANSACTION Employer_Information
			RAISERROR('Insert for current employer phone number failed.',18,1)
			RETURN 99
			END

		--
		-- Get the Phone Number ID just inserted
		--
		SELECT @Current_Employer_Phone_Number_ID = @@IDENTITY

		-- ************************************************************************
		-- Insert the current employer
		-- ************************************************************************
		INSERT INTO Employer_T
			(Phone_Number_ID, Company_Name_VC, Last_Update_DT)
			VALUES(@Current_Employer_Phone_Number_ID, 
@Current_Employer_Name,
				GETDATE())

		--
		-- Check for errors
		--
		IF @@ERROR &lt;&gt; 0
			BEGIN
			--
			-- Rollback the transaction and return to the caller
			--
			ROLLBACK TRANSACTION Employer_Information
			RAISERROR('Insert for current employer failed.',18,1)
			RETURN 99
			END

		--
		-- Get the Employer ID just inserted
		--
		SELECT @Current_Employer_ID = @@IDENTITY
		END

	-- ********************************************************************************
	-- Determine if previous employer information exists
	-- ********************************************************************************
	--
	-- If either Previous Employer ID is null or zero check the Previous Employer Name
	--
	IF @Previous_Employer_ID IS NULL OR @Previous_Employer_ID = 0

		BEGIN
		-- ************************************************************************
		-- Determine if data exists to insert a new employer
		-- ************************************************************************
		IF DATALENGTH(LTRIM(@Previous_Employer_Name)) &gt; 0
			BEGIN
			-- ****************************************************************
			-- Insert the previous employer phone number
			-- ****************************************************************
			INSERT INTO Phone_Number_T
				(Area_Code_SI, Phone_Number_IN, Last_Update_DT)
				VALUES(@Previous_Employer_Area_Code, 
					@Previous_Employer_Phone_Number, GETDATE())

			--
			-- Check for errors
			--
			IF @@ERROR &lt;&gt; 0
				BEGIN
				--
				-- Rollback the transaction and return to the caller
				--
				ROLLBACK TRANSACTION Employer_Information
				RAISERROR('Insert for previous employer phone number 
failed.',
					18,1)
				RETURN 99
				END

			--
			-- Get the Phone Number ID just inserted
			--
			SELECT @Previous_Employer_Phone_Number_ID = @@IDENTITY

			-- ****************************************************************
			-- Insert the previous employer
			-- ****************************************************************
			INSERT INTO Employer_T
				(Phone_Number_ID, Company_Name_VC, Last_Update_DT)
				VALUES(@Previous_Employer_Phone_Number_ID, 
					@Previous_Employer_Name, GETDATE())

			--
			-- Check for errors
			--
			IF @@ERROR &lt;&gt; 0
				BEGIN
				--
				-- Rollback the transaction and return to the caller
				--
				ROLLBACK TRANSACTION Employer_Information
				RAISERROR('Insert for previous employer failed.',18,1)
				RETURN 99
				END

			--
			-- Get the Employer ID just inserted
			--
			SELECT @Previous_Employer_ID = @@IDENTITY
			END

		ELSE

			BEGIN
			--
			-- No previous employment exists, ensure all values are null
			--
			SELECT @Previous_Employer_ID = NULL
			SELECT @Years_At_Previous_Employer = NULL
			END
		END

	-- ********************************************************************************
	-- Now insert the all employment data into the customer information table
	-- ********************************************************************************
	INSERT INTO Customer_Information_T
		(Employer_ID, Years_At_This_Employer_TI, Previous_Employer_ID, 
			Years_At_Previous_Employer_TI, Job_Title_VC, Last_Update_DT)
		VALUES(@Current_Employer_ID, @Years_At_Current_Employer, 
			@Previous_Employer_ID, @Years_At_Previous_Employer, @Job_Title, 
			GETDATE())

	--
	-- Check for errors
	--
	IF @@ERROR &lt;&gt; 0
		BEGIN
		--
		-- Rollback the transaction and return to the caller
		--
		ROLLBACK TRANSACTION Employer_Information
		RAISERROR('Insert of all employment information failed.',18,1)
		RETURN 99
		END

	--
	-- Get the Employer ID just inserted
	--
	SELECT @Customer_Information_ID = @@IDENTITY

	-- ********************************************************************************
	-- We made it to the end so commit the transaction
	-- ********************************************************************************
	COMMIT TRANSACTION Employer_Information

	--
	-- End If statement block
	--
	END

--
-- Return to the caller with a successful return code
--
RETURN 0
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_ACCESS</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>ACCESS_SQL_CompareAndContrast</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_ACCESS</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>ACCESS_SQL_CompareAndContrast</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>

'http://sqlserver2000.databases.aspfaq.com/what-are-the-main-differences-between-access-and-sql-server.html

'TRUE/False ===========================

-- DETERMINING TRUE 
 
-- Access: 
[...] WHERE ynColumn = TRUE 
[...] WHERE ynColumn = -1 
 
-- SQL Server: 
[...] WHERE ynColumn &lt;&gt; 0 
 
'------------------------------ 
 
'-- DETERMINING FALSE 
 
'-- Access: 
[...] WHERE ynColumn = FALSE 
[...] WHERE ynColumn = 0 
 
'-- SQL Server: 
[...] WHERE ynColumn = 0


'Switching from Date/Time to DATETIME  ============

'When passing dates into Access from ASP or an application, you use pound signs (#) for surrounding dates. SQL Server, on the other hand, uses apostrophes ('). So the following query conversion would be required: 

'-- Access: 
[...] WHERE dtColumn &gt;= #2001-11-05# 
 
'-- SQL Server: 
[...] WHERE dtColumn &gt;= '20011105' 

'--------------------------------------------------

'In addition, Access allows you to store date and time independently. SQL Server, including SQL Server 2005 ("Yukon"), 
'does not allow this (see Article #2206 for more info). To see if a date equals 2001-11-05 in SQL Server, you would have to convert the stored value 
'(which includes time) to a date only. Here is how a typical query would have to change: 

'-- Access: 
[...] WHERE dtColumn = #11/05/2001# 
 
'-- SQL Server: 
[...] WHERE CONVERT(CHAR(8), dtColumn, 112) = '20011105' 
 
-- if dtColumn has an index, this will be more efficient: 
[...] WHERE dtColumn &gt;= '20011105' 
    AND dtColumn &lt; '20011106'

'If you want to retrieve the current date and time, the syntax is slightly different: 

'-- Access: 
SELECT Now() 
SELECT Date() &amp; " " &amp; Time() 
 
'-- SQL Server: 
SELECT GETDATE() 
SELECT CURRENT_TIMESTAMP 

'If you want just the time: 

'-- Access: 
SELECT Time() 
 
'-- SQL Server: 
SELECT CONVERT(CHAR(8), GETDATE(), 108) 
SELECT LTRIM(STUFF(RIGHT(CONVERT(CHAR(19), GETDATE(), 0), 7), 6, 0, ' ')) 

'If you want just today's date, there are other options: 

'-- Access: 
SELECT Date() 
 
'-- SQL Server: 
SELECT GETDATE() - {fn CURRENT_TIME} 
SELECT {fn CURDATE()} -- not friendly with certain languages 
SELECT CONVERT(CHAR(8), GETDATE(), 112)

'To get tomorrow's date, here is how your queries would look: 

'-- Access: 
SELECT DateAdd("d",1,date()) 
 
'-- SQL Server: 
SELECT CONVERT(CHAR(8), GETDATE()+1, 112) 
'--or 
SELECT DATEADD(DAY, 1, CONVERT(CHAR(8), GETDATE(), 112)) 

'To get the date and time 24 hours from now: 
 
'-- Access: 
SELECT cstr(DateAdd("d",1,date())) &amp; " " &amp; cstr(time()) 
 
'-- SQL Server: 
SELECT DATEADD(day, 1, GETDATE()) 
 
'To get the first day of the current month: 
 
'-- Access: 
SELECT DateAdd("d",1-day(date()),date()) 
 
'-- SQL Server: 
SELECT CONVERT(CHAR(10),GETDATE()+1-DAY(GETDATE()),101) 
 
'To get the number of days in the current month: 
 
'-- Access: 
SELECT DAY(DATEADD("m", 1, 1-DAY(date()) &amp; date())-1) 
 
'-- SQL Server: 
SELECT DAY(DATEADD(MONTH, 1, 1-DAY(GETDATE())+GETDATE())-1) 
 
'To get the current millisecond: 
 
'-- This is impossible in Access, but just for fun: 
SELECT "Pick a number between 1 and 1000" :-) 
 
'-- SQL Server: 
SELECT DATEPART(millisecond, GETDATE()) 
 
'To get the current weekday: 
 
'-- Access: 
SELECT weekdayname(weekday(date())) 
 
'-- SQL Server: 
SELECT DATENAME(WEEKDAY, GETDATE()) 

'==================


'This function converts NUMERIC data that may be stored in string format to INTEGER format for comparison and computation.
 Remember that SQL Server is much more strongly typed than VBA in Access, so you may find yourself using CAST a lot more than you expected. 
 
'-- Access: 
SELECT CINT(column) 
 
'-- SQL Server: 
SELECT CAST(column AS INT) 
 
'INSTR(data, expression) -&gt; CHARINDEX(expression, data) 
'This function returns an integer representing the character where the search expression is found within the data parameter. Note that the order of these parameters is reversed! 
 
'-- Access: 
SELECT INSTR("franky goes to hollywood","goes") 
 
'-- SQL Server: 
SELECT CHARINDEX('goes','franky goes to hollywood') 
 
'ISDATE(data) 
This function returns 1 if the supplied parameter is a valid date, and 0 if it is not. Aside from delimiters, the syntax is identical. 
 
'-- Access: 
SELECT ISDATE(#12/01/2001#) 
 
'-- SQL Server: 
SELECT ISDATE('12/01/2001') 
 
'ISNULL(data) 
This function works a bit differently in the two products. In Access, it returns 1 if the supplied parameter is NULL, and 0 if it is not. In SQL Server, there are two parameters, and the function works more like a CASE statement. The first parameter is the data you are checking; the second is what you want returned IF the first parameter is NULL (many applications outside the database haven't been designed to deal with NULL values very gracefully). The following example will return a 1 or 0 to Access, depending on whether 'column' is NULL or not; the code in SQL Server will return the column's value if it is not NULL, and will return 1 if it is NULL. The second parameter usually matches the datatype of the column you are checking. 
 
'-- Access: 
SELECT ISNULL(column) FROM tbl 
 
'-- SQL Server: 
SELECT ISNULL(column,1) FROM tbl 
 
'A more intuitive function to use in SQL Server is the ANSI standard COALESCE() function. Not only does it allow you to substitute a value when a NULL is found, it will allow you to step through a series of possible values, and stop at the first non-NULL. 
 
SELECT COALESCE(NULL, DateUpdated, DateAdded, GETDATE()) FROM tbl 
 
ISNUMERIC(data) 
'This function returns 1 if the supplied parameter is numeric, and 0 if it is not. The syntax is identical. 
 
SELECT ISNUMERIC(column) 
 
LEFT(data, n) 
'This function returns the leftmost n characters of data. The syntax is identical. 
 
SELECT LEFT(column,5) 
 
LEN(data) 
'This function returns the number of characters in data. The syntax is identical. 
 
SELECT LEN(column) 
 
LCASE(data) -&gt; LOWER(data) 
'This function converts data to lower case. 
 
'-- Access: 
SELECT LCASE(column) 
 
'-- SQL Server: 
SELECT LOWER(column) 
 
LTRIM(data) 
'This function removes white space from the left of data. The syntax is identical. 
 
SELECT LTRIM(column) 
 
REPLACE(data, expression1, expression2) 
'This function scans through data, replacing all instances of expression1 with expression2. 
 
SELECT REPLACE(column, 'bob', 'frank') 
 
RIGHT(data, n) 
'This function returns the rightmost n characters of data. The syntax is identical. 
 
SELECT RIGHT(column,8) 
 
RTRIM(data) 
'This function removes white space from the right of data. The syntax is identical. 
 
SELECT RTRIM(column) 
 
CSTR(data) -&gt; STR(data) 
'This function converts data to string format. 
 
'-- Access: 
SELECT CSTR(column) 
 
'-- SQL Server: 
'-- if column is NUMERIC: 
SELECT STR(column) 
'-- if column is not NUMERIC: 
SELECT CAST(column AS VARCHAR(n)) 
 
MID(data, start, length) -&gt; SUBSTRING(data, start, length) 
'This function returns 'length' characters, starting at 'start'. 
 
'-- Access: 
SELECT MID("franky goes to hollywood",1,6) 
 
'-- SQL Server: 
SELECT SUBSTRING('franky goes to hollywood',1,6) 
 
UCASE(data) -&gt; UPPER(data) 
'This function converts data to upper case. 
 
'-- Access: 
SELECT UCASE(column) 
 
'-- SQL Server: 
SELECT UPPER(column) 
 
'StrConv 
'This function converts a string into 'proper' case (but does not deal with names like O'Hallaran or vanDerNeuts). There is no direct equivalent for StrConv in SQL Server, but you can do it per word manually: 
 
'-- Access: 
SELECT StrConv("aaron bertrand",3) 
 
'-- SQL Server: 
SELECT LEFT(UPPER('aaron'),1) 
+ LOWER(RIGHT('aaron',LEN('aaron')-1)) 
+ ' ' 
+ LEFT(UPPER('bertrand'),1) 
+ LOWER(RIGHT('bertrand',LEN('bertrand')-1)) 
 
'There is a thread stored at Google dealing with proper casing an entire block of text; you could likely implement something like that in both Access and SQL Server. 
 
TRIM(data) 
'This function combines both LTRIM() and LTRIM(); there is no equivalent in SQL Server. To mimic the functionality, you would combine the two functions: 
 
'-- Access:  
SELECT TRIM(column) 
SELECT LTRIM(RTRIM(column)) 
 
'-- SQL Server: 
SELECT LTRIM(RTRIM(column)) 

































</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>MISC</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>Char_nChar_VarChar</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>MISC</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>Char_nChar_VarChar</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Char_nChar_VarChar   and Unicode


-- unicode characters like $, @

--If the data-type is VARiable like an address field or a description text block: 
--	you would use a varchar (up to 8,000 characters) or nvarchar (up to 4,000 characters of unicode).

--If the data-type is static or at least fairly constrained like social security numbers, phone numbers, part numbers: 
--	you would use char (up to 8,000 characters) or nchar (up to 4,000 characters unicode)

--If you have a huge data field like an entire document in HTML or an archived report:  you would use text or ntex


------------------------------


--Difference between varchar and char:

--    varchar are variable length strings with a maximum length specified.  
--    If a string is less than the maximum length, then it is stored verbatim without any extra characters.
--    char are fixed length strings with a set length specified.  
--    If a string is less than the set length, then it is padded with extra characters so that it's length is the set length.


--Use varchar when your strings do not have a fixed length (e.g. names, cities, etc.)

--Use char when your strings are always going to be the same length (e.g. phone numbers, zip codes, etc).

--The addition of the "n" in front of either varchar or char designates that the column can hold non-unicode characters.  
--Without the "n" means that the strings can only hold unicode character


-------------------------------



--The main use of unicode is when you have to store foreign characters such as Japanese or Chinese.

--If the strings you are storing in your database are strictly U.S. characters, 
--	then it makes little difference as to whether you use nvarchar/nchar or varchar/char.  
--	If you have to store foreign characters, then use varchar/char data typ


-----------------------------

--You want to try and use Varchar and Char when possible.  
--	They will require less space on disk, saving you space, and allowing for faster reads when searching or returning data.  
--	Varchar and Char will only hold ANSI Characters, where NVarchar and NChar will hold Unicode or EBDIC Characters.  
--	If you're not creating a DB that needs to use EBDIC character then stick with VarChar and Char!

 

--I trimmed 15 gigs off a database after converting some fields from NVarchar to VarChar. 
--	Plus the speed increase was amazin</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>VBA_LOOPs</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>IF_THEN_ELSE</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>VBA_LOOPs</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>IF_THEN_ELSE</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>If condition1 Then
[statementblock-1]
[ElseIf condition2 Then
[statementblock-2]] ...
[Else
[statementblock-n]]

End If
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Validation</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>ValidateData_and_CheckForPresnenceOfDataInControls</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Validation</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>ValidateData_and_CheckForPresnenceOfDataInControls</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'ValidateData_and_CheckForPresnenceOfDataInControls


    Private Sub btn_BACK_Click(sender As System.Object, e As System.EventArgs) Handles btn_BACK.Click
        Try
            If IsValidData(eState_CalledByParentForm.Add) Then

                Me.DialogResult = DialogResult.OK
            Else
                MsgBox(_sValidationMessageForUser)
                If MsgBox("Would you like to fix the issue now?", MsgBoxStyle.YesNo) &lt;&gt; MsgBoxResult.Yes Then

                    Me.DialogResult = DialogResult.OK
                Else
                    'Just drop the user right back to the form
                End If

            End If

        Catch ex As Exception
            UnhandledExceptionHandler(ex, "btn_BackToEmployeeLIST_Click", k_NameOfClass)
        End Try
    End Sub

'This routine calls the "IsValidData" routine which then checks all the controls
    Private Sub SaveWhatever_Click(
            ByVal sender As System.Object, ByVal e As System.EventArgs) _
            Handles VendorsBindingNavigatorSaveItem.Click



        '  Following code is optional - validates and catches errors
        If IsValidData() Then
            Try
               'Stuff to do......
               
               
            Catch ex As ArgumentException
                ' This block catches exceptions such as a value that's beyond
                ' the maximum length for a column in a dataset.
                MessageBox.Show(ex.Message, "Argument Exception")
                VendorsBindingSource.CancelEdit()
            Catch ex As DBConcurrencyException
                MessageBox.Show("A concurrency error occurred. " &amp;
                    "The row was not updated.", "Concurrency Exception")
                Me.VendorsTableAdapter.Fill(Me.PayablesDataSet.Vendors)
            Catch ex As DataException
                MessageBox.Show(ex.Message, ex.GetType.ToString)
                VendorsBindingSource.CancelEdit()
            Catch ex As SqlException
                MessageBox.Show("SQL Server error # " &amp; ex.Number &amp;
                    ": " &amp; ex.Message, ex.GetType.ToString)
            End Try
        End If
    End Sub





    Private Function IsValidData() As Boolean
    
    	'First check to see if there is any data in the DataSet, otherwise no need to validate
        If VendorsBindingSource.Count &gt; 0 Then
        
        	'List of Controls, and Data Field names to check
            Return IsPresent(NameTextBox, "Name") AndAlso
                IsPresent(Address1TextBox, "Address1") AndAlso
                IsPresent(CityTextBox, "City") AndAlso
                IsPresent(StateComboBox, "State") AndAlso
                IsPresent(ZipCodeTextBox, "Zip code")
                
        Else
            Return True
        End If
    End Function

    Private Function IsPresent(ByVal control As Control,
            ByVal name As String) As Boolean
            
        'TEXT boxs
        If control.GetType.ToString = "System.Windows.Forms.TextBox" Then
            Dim textBox As TextBox = CType(control, TextBox)
            If textBox.Text = "" Then
                MessageBox.Show(name &amp; " is a required field.", "Entry Error")
                
                'Moves the focus to the control, if not valid
                textBox.Select()
                Return False
                
            Else
                Return True
            End If
            
        'Combo boxs    
        ElseIf control.GetType.ToString = "System.Windows.Forms.ComboBox" Then
            Dim comboBox As ComboBox = CType(control, ComboBox)
            If comboBox.SelectedIndex = -1 Then
                MessageBox.Show(name &amp; " is a required field.", "Entry Error")
                
                'Moves the focus to the control, if not valid
                comboBox.Select()
                Return False
                
            Else
                Return True
            End If
        End If
    End Function</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Error</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>Some_More_Exceptions</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Error</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>Some_More_Exceptions</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'Some_More_Exceptions




            Try
               'Stuff to do......
               
               
            Catch ex As ArgumentException
                ' This block catches exceptions such as a value that's beyond
                ' the maximum length for a column in a dataset.
                MessageBox.Show(ex.Message, "Argument Exception")
                VendorsBindingSource.CancelEdit()
            Catch ex As DBConcurrencyException
                MessageBox.Show("A concurrency error occurred. " &amp;
                    "The row was not updated.", "Concurrency Exception")
                Me.VendorsTableAdapter.Fill(Me.PayablesDataSet.Vendors)
            Catch ex As DataException
                MessageBox.Show(ex.Message, ex.GetType.ToString)
                VendorsBindingSource.CancelEdit()
            Catch ex As SqlException
                MessageBox.Show("SQL Server error # " &amp; ex.Number &amp;
                    ": " &amp; ex.Message, ex.GetType.ToString)
            End Try</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>SQLBulkCopy</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>MSDN_example</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>SQLBulkCopy</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>MSDN_example</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
'SqlBulkCopy will FAIL when bulk loading a DataTable column of type SqlDateTime 
'	into a SQL Server column whose Type Is one of the Date/time types added In SQL Server 2008. 


'1] VB.Net Code:

Imports System.Data.SqlClient
  
  Module Module1
      Sub Main()
          Dim connectionString As String = GetConnectionString()
  
          ' Open a connection to the AdventureWorks database.
          Using sourceConnection As SqlConnection = _
             New SqlConnection(connectionString)
              sourceConnection.Open()
  
              ' Perform an initial count on the destination table.
              Dim commandRowCount As New SqlCommand( _
              "SELECT COUNT(*) FROM dbo.BulkCopyDemoMatchingColumns;", _
                  sourceConnection)
              Dim countStart As Long = _
                 System.Convert.ToInt32(commandRowCount.ExecuteScalar())
              Console.WriteLine("Starting row count = {0}", countStart)
  
              ' Get data from the source table as a SqlDataReader.
              Dim commandSourceData As SqlCommand = New SqlCommand( _
                 "SELECT ProductID, Name, ProductNumber " &amp; _
                 "FROM Production.Product;", sourceConnection)
              Dim reader As SqlDataReader = commandSourceData.ExecuteReader
  
              ' Open the destination connection. In the real world you would 
              ' not use SqlBulkCopy to move data from one table to the other   
              ' in the same database. This is for demonstration purposes only.
              Using destinationConnection As SqlConnection = _
                  New SqlConnection(connectionString)
                  destinationConnection.Open()
  
                  ' Set up the bulk copy object. 
                  ' The column positions in the source data reader 
                  ' match the column positions in the destination table, 
                  ' so there is no need to map columns.
                  Using bulkCopy As SqlBulkCopy = _
                    New SqlBulkCopy(destinationConnection)
                      bulkCopy.DestinationTableName = _
                      "dbo.BulkCopyDemoMatchingColumns"
  
                      Try
                          ' Write from the source to the destination.
                          bulkCopy.WriteToServer(reader)
  
                      Catch ex As Exception
                          Console.WriteLine(ex.Message)
  
                      Finally
                          ' Close the SqlDataReader. The SqlBulkCopy
                          ' object is automatically closed at the end
                          ' of the Using block.
                          reader.Close()
                      End Try
                  End Using
  
                  ' Perform a final count on the destination table
                  ' to see how many rows were added.
                  Dim countEnd As Long = _
                      System.Convert.ToInt32(commandRowCount.ExecuteScalar())
                  Console.WriteLine("Ending row count = {0}", countEnd)
                  Console.WriteLine("{0} rows were added.", countEnd - countStart)
  
                  Console.WriteLine("Press Enter to finish.")
                  Console.ReadLine()
              End Using
          End Using
      End Sub
  
      Private Function GetConnectionString() As String
          ' To avoid storing the sourceConnection string in your code, 
          ' you can retrieve it from a configuration file. 
          Return "Data Source=(local);" &amp; _
              "Integrated Security=true;" &amp; _
              "Initial Catalog=AdventureWorks;"
      End Function
  End Module






'2] T-SQL to set up table for SQLBulkCopy  example:

USE AdventureWorks
  
  If EXISTS (Select * FROM dbo.sysobjects 
   WHERE id = object_id(N'[dbo].[BulkCopyDemoMatchingColumns]') 
   And OBJECTPROPERTY(id, N'IsUserTable') = 1)
      DROP TABLE [dbo].[BulkCopyDemoMatchingColumns]
  
  CREATE TABLE [dbo].[BulkCopyDemoMatchingColumns](
      [ProductID] [int] IDENTITY(1,1) Not NULL,
      [Name] [nvarchar](50) Not NULL,
      [ProductNumber] [nvarchar](25) Not NULL,
   CONSTRAINT [PK_ProductID] PRIMARY KEY CLUSTERED 
  (
      [ProductID] ASC
  ) On [PRIMARY]
  ) On [PRIMARY]
  
  If EXISTS (Select * FROM dbo.sysobjects 
   WHERE id = object_id(N'[dbo].[BulkCopyDemoDifferentColumns]') 
   And OBJECTPROPERTY(id, N'IsUserTable') = 1)
      DROP TABLE [dbo].[BulkCopyDemoDifferentColumns]
  
  CREATE TABLE [dbo].[BulkCopyDemoDifferentColumns](
      [ProdID] [int] IDENTITY(1,1) Not NULL,
      [ProdNum] [nvarchar](25) Not NULL,
      [ProdName] [nvarchar](50) Not NULL,
   CONSTRAINT [PK_ProdID] PRIMARY KEY CLUSTERED 
  (
      [ProdID] ASC
  ) On [PRIMARY]
  ) On [PRIMARY]
  
  If EXISTS (Select * FROM dbo.sysobjects 
   WHERE id = object_id(N'[dbo].[BulkCopyDemoOrderHeader]') 
   And OBJECTPROPERTY(id, N'IsUserTable') = 1)
      DROP TABLE [dbo].[BulkCopyDemoOrderHeader]
  
  CREATE TABLE [dbo].[BulkCopyDemoOrderHeader](
      [SalesOrderID] [int] IDENTITY(1,1) Not NULL,
      [OrderDate] [datetime] Not NULL,
      [AccountNumber] [nvarchar](15) NULL,
   CONSTRAINT [PK_SalesOrderID] PRIMARY KEY CLUSTERED 
  (
      [SalesOrderID] ASC
  ) On [PRIMARY]
  ) On [PRIMARY]
  
  If EXISTS (Select * FROM dbo.sysobjects 
   WHERE id = object_id(N'[dbo].[BulkCopyDemoOrderDetail]') 
   And OBJECTPROPERTY(id, N'IsUserTable') = 1)
      DROP TABLE [dbo].[BulkCopyDemoOrderDetail]
  
  CREATE TABLE [dbo].[BulkCopyDemoOrderDetail](
      [SalesOrderID] [int] Not NULL,
      [SalesOrderDetailID] [int] Not NULL,
      [OrderQty] [smallint] Not NULL,
      [ProductID] [int] Not NULL,
      [UnitPrice] [money] Not NULL,
   CONSTRAINT [PK_LineNumber] PRIMARY KEY CLUSTERED 
  (
      [SalesOrderID] ASC,
      [SalesOrderDetailID] ASC
  ) On [PRIMARY]
  ) On [PRIMARY]


</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Error</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>ReadMe</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Error</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>ReadMe</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'But in VB.NET, both catch and finally blocks are optional. 
'The try block can exist either with one or more catch blocks or a finally block or with both catch and finally blocks.

'If there is no exception occurred inside the try block, the control directly transfers to finally block. We can say 
' that the statements inside the finally block is executed always. 
'Note that it is an error to transfer control out of a finally block by using break, continue, return or goto. 

'Standard Exceptions

'There are two types of exceptions: exceptions generated by an executing program and exceptions generated by the common language runtime. System.Exception is the base class for all exceptions in VB.NET. Several exception classes inherit from this class including ApplicationException and SystemException. These two classes form the basis for most other runtime exceptions. Other exceptions that derive directly from System.Exception include IOException, WebException etc.

'The common language runtime throws SystemException. A user program rather than the runtime throws the ApplicationException. The SystemException includes the ExecutionEngineException, StaclOverFlowException etc. It is not recommended that we catch SystemExceptions nor is it good programming practice to throw SystemExceptions in our applications. 

'System.OutOfMemoryException 
'System.NullReferenceException 
'Syste.InvalidCastException 
'Syste.ArrayTypeMismatchException 
'System.IndexOutOfRangeException 
'System.ArithmeticException 
'System.DevideByZeroException 
'System.OverFlowException </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Error</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>GOOD_Examples_and_Notes</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Error</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>GOOD_Examples_and_Notes</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>        Try
' Statement which can cause an exception.
        Catch x As Type
' Statements for handling the exception
        Finally
        End Try 'Any cleanup code

'======================================

'======================================
'Any uncaught exceptions in the current context propagate to a higher context and looks for an appropriate catch block to handle it.
' If it can't find any suitable catch blocks, the default mechanism of the .NET runtime will terminate the execution of the entire program.

'//VB.NET: Exception Handling 
Imports System
Class MyClient
    Public Shared Sub Main()
        Dim x As Integer = 0
        Dim div As Integer = 100 / x
        Console.WriteLine(div)
    End Sub 'Main
End Class 'MyClient

'======================================


'The modified form of the above program with exception handling mechanism is as follows. Here we are using the object of the standard exception class DivideByZeroException to handle the exception caused by division by zero.

'//VB.NET: Exception Handling
Imports System
Class MyClient
    Public Shared Sub Main()
        Dim x As Integer = 0
        Dim div As Integer = 0
        Try
            div = 100 / x
            Console.WriteLine("This line in not executed")
        Catch de As DivideByZeroException
            onsole.WriteLine("Exception occured")
        End Try
        Console.WriteLine("Result is {0}", div)
    End Sub 'Main
End Class 'MyClient 

'======================================

'If a finally block is present, the code inside the finally block will get also be executed.

'//VB.NET: Exception Handling
Imports System
Class MyClient
    Public Shared Sub Main()
        Dim x As Integer = 0
        Dim div As Integer = 0
        Try
            div = 100 / x
            Console.WriteLine("Not executed line")
        Catch de As DivideByZeroException
            Console.WriteLine("Exception occured")
        Finally
            Console.WriteLine("Finally Block")
        End Try
        Console.WriteLine("Result is {0}", div)
    End Sub 'Main
End Class 'MyClient 

'======================================

'Remember that in VB.NET, the catch block is optional. The following program is perfectly legal in VB.NET.

'//VB.NET: Exception Handling
Imports System
Class MyClient
    Public Shared Sub Main()
        Dim x As Integer = 0
        Dim div As Integer = 0
        Try
            div = 100 / x
            Console.WriteLine("Not executed line")
        Finally
            Console.WriteLine("Finally Block")
        End Try
        Console.WriteLine("Result is {0}", div)
    End Sub 'Main
End Class 'MyClient 

'But in this case, since there is no exception handling catch block, the execution will get terminated. 
'But before the termination of the program statements inside the finally block will get executed. In VB.NET, a try block must be followed by either a catch or finally block.  



'=================================================================

'Multiple Catch Blocks 

'A try block can throw multiple exceptions, which can handle by using multiple catch blocks. Remember that more specialized catch block should come before a generalized one. Otherwise the compiler will show a compilation error.

'//VB.NET: Exception Handling: Multiple catch
Imports System
Class MyClient
    Public Shared Sub Main()
        Dim x As Integer = 0
        Dim div As Integer = 0
        Try
            div = 100 / x
            Console.WriteLine("Not executed line")
        Catch de As DivideByZeroException
            Console.WriteLine("DivideByZeroException")
        Catch ee As Exception
            Console.WriteLine("Exception")
        Finally
            Console.WriteLine("Finally Block")
        End Try
        Console.WriteLine("Result is {0}", div)
    End Sub 'Main
End Class 'MyClient
'======================================

'Catching all Exceptions

'By providing a catch block without a brackets or arguments, we can catch all exceptions occurred inside a try block.
'Even we can use a catch block with an Exception type parameter to catch all exceptions happened inside the try block since in VB.NET, 
'all exceptions are directly or indirectly inherited from the Exception class. 

'//VB.NET: Exception Handling: Handling all exceptions
Imports System
Class MyClient
    Public Shared Sub Main()
        Dim x As Integer = 0
        Dim div As Integer = 0
        Try
            div = 100 / x
            Console.WriteLine("Not executed line")
        Catch
        End Try
        Console.WriteLine("Result is {0}", div)
    End Sub 'Main
End Class 'MyClient 

'======================================

'The following program handles all exception with Exception object. 

'//VB.NET: Exception Handling: Handling all exceptions
Imports System
Class MyClient
    Public Shared Sub Main()
        Dim x As Integer = 0
        Dim div As Integer = 0
        Try
            div = 100 / x
            Console.WriteLine("Not executed line")
        Catch e As Exception
            Console.WriteLine("oException")
        End Try
        Console.WriteLine("Result is {0}", div)
    End Sub 'Main
End Class 'MyClient

'======================================

Throwing an Exception

'In VB.NET, it is possible to throw an exception programmatically. The 'throw' keyword is used for this purpose. The general form of throwing an exception is as follows. 



Throw exception_obj

'For example the following statement throw an ArgumentException explicitly. 

Throw New ArgumentException("Exception") 

'//VB.NET: Exception Handling:
Imports System
Class MyClient
    Public Shared Sub Main()
        Try
            Throw New DivideByZeroException("Invalid Division")
        Catch e As DivideByZeroException
            Console.WriteLine("Exception")
        End Try
        Console.WriteLine("LAST STATEMENT")
    End Sub 'Main
End Class 'MyClient 

'======================================

''
'Re-throwing an Exception

'The exceptions, which we caught inside a catch block, can re-throw to a higher context by using the
'keyword throw inside the catch block. The following program shows how to do this. 

'//VB.NET: Exception Handling: Handling all exceptions
Imports System
Class [MyClass]
    Public Sub Method()
        Try
            Dim x As Integer = 0
            Dim sum As Integer = 100 / x
        Catch e As DivideByZeroException
            Throw
        End Try
    End Sub 'Method
End Class '[MyClass]
Class MyClient
    Public Shared Sub Main()
        Dim mc As New [MyClass]
        Try
            mc.Method()
        Catch e As Exception
            Console.WriteLine("Exception caught here")
        End Try
        Console.WriteLine("LAST STATEMENT")
    End Sub 'Main
End Class 'MyClient 

'======================================

'User-defined Exceptions

'In VB.NET, it is possible to create our own exception class. But Exception must be the ultimate base 
'class for all exceptions in VB.NET. So the user-defined exception classes must inherit from either Exception 
'class or one of its standard derived classes. 

'//VB.NET: Exception Handling: User defined exceptions
Imports System
Class MyException
    Inherits Exception
    Public Sub New(ByVal str As String)
        Console.WriteLine("User defined exception")
    End Sub 'New
End Class 'MyException
Class MyClient
    Public Shared Sub Main()
        Try
            Throw New MyException("RAJESH")
        Catch e As Exception
            Console.WriteLine(("Exception caught here" + e.ToString()))
        End Try
        Console.WriteLine("LAST STATEMENT")
    End Sub 'Main
End Class 'MyClient 

'======================================

</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Error</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>Class_Solution_Integrated_Into_Subroutines_and_Global</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Error</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>Class_Solution_Integrated_Into_Subroutines_and_Global</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'see the globals and other requirements at the bottom
'============================================
'In calling Subs:

Private Const k_sModule As String = "{f_ADE_Main}"      '&lt;==== in Module
Const k_sSub As String = "{btn_StartDataEntry_Click}"   '&lt;==== in Sub
'============================================
'Example of Sub using the error routine:

Friend Sub UsingTheErrorHandler()

    Try
        '.... The code to test goes here

        '...Sometimes you might want to Throw an excpetion up to the user
        If (bWhatever = True) Then
            DebugPrint("bWhatever = True, THROWING EXCEPTION NOW!")
            Throw New ApplicationException("Message for user when bWhatever = True")
        End If


    Catch ex As ApplicationException
        DebugPrint(ex.Message)
        Throw
    Catch ex As Exception
        UnhandledExceptionHandler(k_sModule, k_sSub, ex)
    Finally
    End Try
End Sub








' ERROR STUFF
'============================================
'============================================
Option Explicit On
Option Strict On
Imports System.IO 'for writing to file

Module mod_gigErrorStuff


    Friend Sub DebugPrint(ByVal sX As String)

        If k_DebugModeOn Then
            Debug.Print(sX)
        End If
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        If k_IfDebugModeIsOn_ThenWriteToTextFile = True Then

            Dim myStreamWriter As StreamWriter


            ' Ensure that the creation of the new StreamWriter is wrapped in a 
            '   Try-Catch block, since an invalid filename could have been used.
            Try
                '=======================================
                'If the Log file does not exist:
                If (c_gigFileManager.fn_b_TheFileExists(g_sAppPath &amp; k_NameOfDebugLogFile) = False) Then
                    myStreamWriter = File.CreateText(g_sAppPath &amp; k_NameOfDebugLogFile)
                    myStreamWriter.Write(sX)
                    myStreamWriter.Flush()
                Else
                    myStreamWriter = File.AppendText(g_sAppPath &amp; k_NameOfDebugLogFile)

                    ' Write the entire contents of the txtFileText text box
                    '   to the StreamWriter in one shot.
                    myStreamWriter.Write(sX)
                    ' Flush the stream to ensure everything is flushed
                    myStreamWriter.Flush()
                End If

                '====================================
            Catch
                Debug.Print("ERROR IN DebugPrint #########################################")
                Debug.Print("ERROR IN DebugPrint #########################################")
                Debug.Print("ERROR IN DebugPrint #########################################")
                Debug.Print("ERROR IN DebugPrint #########################################")
            Finally
                ' Close the object if it has been created.
                If Not myStreamWriter Is Nothing Then
                    myStreamWriter.Close()
                End If
            End Try
            '====================================

        End If
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
    End Sub

    Friend Sub UnhandledExceptionHandler_WithMessageBox()

        'display an error to the user
        ' 
        Debug.Print(ControlChars.Cr &amp; "==========" &amp; ControlChars.Cr)
        Debug.Print("An error occurred. Error Number: " &amp; Err.Number &amp; _
              " Description: " &amp; Err.Description &amp; " Source: " &amp; Err.Source)

        MsgBox("An error occurred. Error Number: " &amp; Err.Number &amp; _
              " Description: " &amp; Err.Description &amp; " Source: " &amp; Err.Source)
        Debug.Print(ControlChars.Cr &amp; "==========" &amp; ControlChars.Cr)
    End Sub

    Friend Sub UnhandledExceptionHandler(ByVal sThisSubName As String, ByVal sThisModuleName As String, ByVal exX As Exception)
        'Examples for Mod and sub
        'Private Const k_sModule As String = "{c_gigReflection}"
        'Const k_sSub As String = "{End_and_Close_Session}"
        Dim sX As String
        sX = ControlChars.Cr &amp; "===== Error raised in Sub: " &amp; sThisSubName &amp; "===== Module: " &amp; sThisModuleName
        sX = sX &amp; VbCrLf
        sX = sX &amp; "Error Number: " &amp; err.Number &amp; " Description: " &amp; err.Description &amp; " Source: " &amp; err.Source
        sX = sX &amp; VbCrLf
        sX = sX &amp; "=============ERROR============================================"
        sX = sX &amp; VbCrLf
        sX = sX &amp; "Exception To String: " &amp; exX.ToString
        sX = sX &amp; VbCrLf &amp; "===================================================================="

        DebugPrint(sX)

        'Debug.Print(ControlChars.Cr &amp; "===== Error raised in Sub: " &amp; sThisSubName &amp; "===== Module: " &amp; sThisModuleName &amp; ControlChars.Cr)
        'Debug.Print("Error Number: " &amp; Err.Number &amp; " Description: " &amp; Err.Description &amp; " Source: " &amp; Err.Source)
        'Debug.Print(ControlChars.Cr &amp; "====================================================================" &amp; ControlChars.Cr)

        MsgBox("Check Debug Log for Error")

        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        If k_IfDebugModeIsOn_ThenWriteToTextFile = True Then

            Dim myStreamWriter As StreamWriter


            ' Ensure that the creation of the new StreamWriter is wrapped in a 
            '   Try-Catch block, since an invalid filename could have been used.
            Try
                '=======================================
                'If the Log file does not exist:
                If (c_gigFileManager.fn_b_TheFileExists(g_sAppPath &amp; k_NameOfDebugLogFile) = False) Then
                    myStreamWriter = File.CreateText(g_sAppPath &amp; k_NameOfDebugLogFile)
                    myStreamWriter.Write(sX)
                    myStreamWriter.Flush()
                Else
                    myStreamWriter = File.AppendText(g_sAppPath &amp; k_NameOfDebugLogFile)

                    ' Write the entire contents of the txtFileText text box
                    '   to the StreamWriter in one shot.
                    myStreamWriter.Write(sX)
                    ' Flush the stream to ensure everything is flushed
                    myStreamWriter.Flush()
                End If

                '====================================
            Catch
                Debug.Print("ERROR IN UnhandledExceptionHandler #########################################")
                Debug.Print("ERROR IN UnhandledExceptionHandler #########################################")
                Debug.Print("ERROR IN UnhandledExceptionHandler #########################################")
                Debug.Print("ERROR IN UnhandledExceptionHandler #########################################")
            Finally
                ' Close the object if it has been created.
                If Not myStreamWriter Is Nothing Then
                    myStreamWriter.Close()
                End If
            End Try
            '====================================

        End If
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

    End Sub

End Module


'In globals:

Friend Const k_DebugModeOn As Boolean = True
Friend Const k_IfDebugModeIsOn_ThenWriteToTextFile As Boolean = True
Friend Const k_NameOfDebugLogFile As String = "ADE_DebugLog.txt"
Friend g_sAppPath As String = c_gigFileManager.fn_DirectoryOfThisApplication

'-------------------------------------------------
'File Manager Class:
'-------------------------------------------------
Imports System.IO   'For FileInfo
Imports System.IO.File

Public Class c_gigFileManager

    Dim _AppFileInfo As New FileInfo(Application.ExecutablePath)
    Dim _sAppFolderName As String = _AppFileInfo.DirectoryName

    Friend Shared Function fn_b_TheFileExists(ByVal PathFile As String) As Boolean

        Dim bX As Boolean
        If File.Exists(PathFile) Then
            bX = True
        Else
            bX = False
        End If
        fn_b_TheFileExists = bX

    End Function


    Friend Shared Function fn_DirectoryOfThisApplication() As String

        Dim sX As String
        Dim AppFileInfo As New FileInfo(Application.ExecutablePath)
        Dim sAppFolderName As String = AppFileInfo.DirectoryName
        sX = sAppFolderName
        If Right(sX, 1) &lt;&gt; "\" Then
            sX = sX &amp; "\"
        End If
        fn_DirectoryOfThisApplication = sX

    End Function

End Class
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Error</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>Debug2SQL_Using_CINIFile</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Error</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>Debug2SQL_Using_CINIFile</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'see the globals and other requirements at the bottom
'============================================
'In calling Subs:

    Private Const k_sModule As String = "{f_ADE_Main}"      '&lt;==== in Module
   Const k_sSub As String = "{btn_StartDataEntry_Click}"   '&lt;==== in Sub
'============================================
'Example of Sub using the error routine:

Friend Sub UsingTheErrorHandler()

        Try
            '.... The code to test goes here

            '...Sometimes you might want to Throw an excpetion up to the user
                If (bWhatever = True) Then
                    DebugPrint("bWhatever = True, THROWING EXCEPTION NOW!")
                    Throw New ApplicationException("Message for user when bWhatever = True")
                End If


        Catch ex As ApplicationException
                DebugPrint(ex.Message)
                Throw
        Catch ex As Exception
            UnhandledExceptionHandler(k_sModule, k_sSub,ex)
        Finally
        End Try
    End Sub








' ERROR STUFF
'============================================
'============================================
Option Explicit On
Option Strict On
Imports System.IO 'for writing to file

Module mod_gigErrorStuff


    Friend Sub DebugPrint(ByVal sX As String)

        If k_DebugModeOn Then
            Debug.Print(sX)
        End If
'$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        If k_IfDebugModeIsOn_ThenWriteToTextFile = True Then

            Dim myStreamWriter As StreamWriter


            ' Ensure that the creation of the new StreamWriter is wrapped in a 
            '   Try-Catch block, since an invalid filename could have been used.
            Try
    '=======================================
                'If the Log file does not exist:
                If (c_gigFileManager.fn_b_TheFileExists(g_sAppPath &amp; k_NameOfDebugLogFile) = False) Then
                    myStreamWriter = File.CreateText(g_sAppPath &amp; k_NameOfDebugLogFile)
                    myStreamWriter.Write(sX)
                    myStreamWriter.Flush()
                Else
                    myStreamWriter = File.AppendText(g_sAppPath &amp; k_NameOfDebugLogFile)

                    ' Write the entire contents of the txtFileText text box
                    '   to the StreamWriter in one shot.
                    myStreamWriter.Write(sX)
                    ' Flush the stream to ensure everything is flushed
                    myStreamWriter.Flush()
                End If

    '====================================
            Catch
                Debug.Print("ERROR IN DebugPrint #########################################")
                Debug.Print("ERROR IN DebugPrint #########################################")
                Debug.Print("ERROR IN DebugPrint #########################################")
                Debug.Print("ERROR IN DebugPrint #########################################")
            Finally
                ' Close the object if it has been created.
                If Not myStreamWriter Is Nothing Then
                    myStreamWriter.Close()
                End If
            End Try
    '====================================

        End If
'$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
    End Sub

    Friend Sub UnhandledExceptionHandler_WithMessageBox()

        'display an error to the user
        ' 
        Debug.Print(ControlChars.Cr &amp; "==========" &amp; ControlChars.Cr)
        Debug.Print("An error occurred. Error Number: " &amp; Err.Number &amp; _
              " Description: " &amp; Err.Description &amp; " Source: " &amp; Err.Source)

        MsgBox("An error occurred. Error Number: " &amp; Err.Number &amp; _
              " Description: " &amp; Err.Description &amp; " Source: " &amp; Err.Source)
        Debug.Print(ControlChars.Cr &amp; "==========" &amp; ControlChars.Cr)
    End Sub

 Friend Sub UnhandledExceptionHandler(ByVal sThisSubName As String, ByVal sThisModuleName As String, ByVal exX As Exception)
            'Examples for Mod and sub
            'Private Const k_sModule As String = "{c_gigReflection}"
            'Const k_sSub As String = "{End_and_Close_Session}"
            Dim sX As String
            sX = ControlChars.Cr &amp; "===== Error raised in Sub: " &amp; sThisSubName &amp; "===== Module: " &amp; sThisModuleName
            sX = sX &amp; VbCrLf
            sX = sX &amp; "Error Number: " &amp; err.Number &amp; " Description: " &amp; err.Description &amp; " Source: " &amp; err.Source
            sX = sX &amp; VbCrLf
            sX = sX &amp; "=============ERROR============================================"
            sX = sX &amp; VbCrLf
            sX = sX &amp; "Exception To String: " &amp; exX.ToString
            sX = sX &amp; VbCrLf &amp; "===================================================================="

        DebugPrint(sX)

        'Debug.Print(ControlChars.Cr &amp; "===== Error raised in Sub: " &amp; sThisSubName &amp; "===== Module: " &amp; sThisModuleName &amp; ControlChars.Cr)
        'Debug.Print("Error Number: " &amp; Err.Number &amp; " Description: " &amp; Err.Description &amp; " Source: " &amp; Err.Source)
        'Debug.Print(ControlChars.Cr &amp; "====================================================================" &amp; ControlChars.Cr)

        MsgBox("Check Debug Log for Error")

'$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        If k_IfDebugModeIsOn_ThenWriteToTextFile = True Then

            Dim myStreamWriter As StreamWriter


            ' Ensure that the creation of the new StreamWriter is wrapped in a 
            '   Try-Catch block, since an invalid filename could have been used.
            Try
    '=======================================
                'If the Log file does not exist:
                If (c_gigFileManager.fn_b_TheFileExists(g_sAppPath &amp; k_NameOfDebugLogFile) = False) Then
                    myStreamWriter = File.CreateText(g_sAppPath &amp; k_NameOfDebugLogFile)
                    myStreamWriter.Write(sX)
                    myStreamWriter.Flush()
                Else
                    myStreamWriter = File.AppendText(g_sAppPath &amp; k_NameOfDebugLogFile)

                    ' Write the entire contents of the txtFileText text box
                    '   to the StreamWriter in one shot.
                    myStreamWriter.Write(sX)
                    ' Flush the stream to ensure everything is flushed
                    myStreamWriter.Flush()
                End If

    '====================================
            Catch
                Debug.Print("ERROR IN UnhandledExceptionHandler #########################################")
                Debug.Print("ERROR IN UnhandledExceptionHandler #########################################")
                Debug.Print("ERROR IN UnhandledExceptionHandler #########################################")
                Debug.Print("ERROR IN UnhandledExceptionHandler #########################################")
            Finally
                ' Close the object if it has been created.
                If Not myStreamWriter Is Nothing Then
                    myStreamWriter.Close()
                End If
            End Try
    '====================================

        End If
'$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

    End Sub

End Module


'In globals:

    Friend Const k_DebugModeOn As Boolean = True
    Friend Const k_IfDebugModeIsOn_ThenWriteToTextFile As Boolean = True
    Friend Const k_NameOfDebugLogFile As String = "ADE_DebugLog.txt"
    Friend g_sAppPath As String = c_gigFileManager.fn_DirectoryOfThisApplication

'-------------------------------------------------
'File Manager Class:
'-------------------------------------------------
Imports System.IO   'For FileInfo
Imports System.IO.File

Public Class c_gigFileManager

    Dim _AppFileInfo As New FileInfo(Application.ExecutablePath)
    Dim _sAppFolderName As String = _AppFileInfo.DirectoryName

    Friend Shared Function fn_b_TheFileExists(ByVal PathFile As String) As Boolean

        Dim bX As Boolean
        If File.Exists(PathFile) Then
            bX = True
        Else
            bX = False
        End If
        fn_b_TheFileExists = bX

    End Function


    Friend Shared Function fn_DirectoryOfThisApplication() As String

        Dim sX As String
        Dim AppFileInfo As New FileInfo(Application.ExecutablePath)
        Dim sAppFolderName As String = AppFileInfo.DirectoryName
        sX = sAppFolderName
        If Right(sX, 1) &lt;&gt; "\" Then
            sX = sX &amp; "\"
        End If
        fn_DirectoryOfThisApplication = sX

    End Function

End Class
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Error</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>Class_WriteToFile_Custom_And_Regular_exception</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Error</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>Class_WriteToFile_Custom_And_Regular_exception</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'see the globals and other requirements at the bottom
'============================================
'In calling Subs:

Private Const k_sModule As String = "{f_ADE_Main}"      '&lt;==== in Module
Const k_sSub As String = "{btn_StartDataEntry_Click}"   '&lt;==== in Sub
'============================================
'Example of Sub using the error routine:

Friend Sub UsingTheErrorHandler()

    Try
        '.... The code to test goes here

        '...Sometimes you might want to Throw an excpetion up to the user
        If (bWhatever = True) Then
            DebugPrint("bWhatever = True, THROWING EXCEPTION NOW!")
            Throw New ApplicationException("Message for user when bWhatever = True")
        End If


    Catch ex As ApplicationException
        DebugPrint(ex.Message)
        Throw
    Catch ex As Exception
        UnhandledExceptionHandler(k_sModule, k_sSub, ex)
    Finally
    End Try
End Sub








' ERROR STUFF
'============================================
'============================================
Option Explicit On
Option Strict On
Imports System.IO 'for writing to file

Module mod_gigErrorStuff


    Friend Sub DebugPrint(ByVal sX As String)

        If k_DebugModeOn Then
            Debug.Print(sX)
        End If
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        If k_IfDebugModeIsOn_ThenWriteToTextFile = True Then

            Dim myStreamWriter As StreamWriter


            ' Ensure that the creation of the new StreamWriter is wrapped in a 
            '   Try-Catch block, since an invalid filename could have been used.
            Try
                '=======================================
                'If the Log file does not exist:
                If (c_gigFileManager.fn_b_TheFileExists(g_sAppPath &amp; k_NameOfDebugLogFile) = False) Then
                    myStreamWriter = File.CreateText(g_sAppPath &amp; k_NameOfDebugLogFile)
                    myStreamWriter.Write(sX)
                    myStreamWriter.Flush()
                Else
                    myStreamWriter = File.AppendText(g_sAppPath &amp; k_NameOfDebugLogFile)

                    ' Write the entire contents of the txtFileText text box
                    '   to the StreamWriter in one shot.
                    myStreamWriter.Write(sX)
                    ' Flush the stream to ensure everything is flushed
                    myStreamWriter.Flush()
                End If

                '====================================
            Catch
                Debug.Print("ERROR IN DebugPrint #########################################")
                Debug.Print("ERROR IN DebugPrint #########################################")
                Debug.Print("ERROR IN DebugPrint #########################################")
                Debug.Print("ERROR IN DebugPrint #########################################")
            Finally
                ' Close the object if it has been created.
                If Not myStreamWriter Is Nothing Then
                    myStreamWriter.Close()
                End If
            End Try
            '====================================

        End If
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
    End Sub

    Friend Sub UnhandledExceptionHandler_WithMessageBox()

        'display an error to the user
        ' 
        Debug.Print(ControlChars.Cr &amp; "==========" &amp; ControlChars.Cr)
        Debug.Print("An error occurred. Error Number: " &amp; Err.Number &amp; _
              " Description: " &amp; Err.Description &amp; " Source: " &amp; Err.Source)

        MsgBox("An error occurred. Error Number: " &amp; Err.Number &amp; _
              " Description: " &amp; Err.Description &amp; " Source: " &amp; Err.Source)
        Debug.Print(ControlChars.Cr &amp; "==========" &amp; ControlChars.Cr)
    End Sub

    Friend Sub UnhandledExceptionHandler(ByVal sThisSubName As String, ByVal sThisModuleName As String, ByVal exX As Exception)
        'Examples for Mod and sub
        'Private Const k_sModule As String = "{c_gigReflection}"
        'Const k_sSub As String = "{End_and_Close_Session}"
        Dim sX As String
        sX = ControlChars.Cr &amp; "===== Error raised in Sub: " &amp; sThisSubName &amp; "===== Module: " &amp; sThisModuleName
        sX = sX &amp; VbCrLf
        sX = sX &amp; "Error Number: " &amp; err.Number &amp; " Description: " &amp; err.Description &amp; " Source: " &amp; err.Source
        sX = sX &amp; VbCrLf
        sX = sX &amp; "=============ERROR============================================"
        sX = sX &amp; VbCrLf
        sX = sX &amp; "Exception To String: " &amp; exX.ToString
        sX = sX &amp; VbCrLf &amp; "===================================================================="

        DebugPrint(sX)

        'Debug.Print(ControlChars.Cr &amp; "===== Error raised in Sub: " &amp; sThisSubName &amp; "===== Module: " &amp; sThisModuleName &amp; ControlChars.Cr)
        'Debug.Print("Error Number: " &amp; Err.Number &amp; " Description: " &amp; Err.Description &amp; " Source: " &amp; Err.Source)
        'Debug.Print(ControlChars.Cr &amp; "====================================================================" &amp; ControlChars.Cr)

        MsgBox("Check Debug Log for Error")

        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
        If k_IfDebugModeIsOn_ThenWriteToTextFile = True Then

            Dim myStreamWriter As StreamWriter


            ' Ensure that the creation of the new StreamWriter is wrapped in a 
            '   Try-Catch block, since an invalid filename could have been used.
            Try
                '=======================================
                'If the Log file does not exist:
                If (c_gigFileManager.fn_b_TheFileExists(g_sAppPath &amp; k_NameOfDebugLogFile) = False) Then
                    myStreamWriter = File.CreateText(g_sAppPath &amp; k_NameOfDebugLogFile)
                    myStreamWriter.Write(sX)
                    myStreamWriter.Flush()
                Else
                    myStreamWriter = File.AppendText(g_sAppPath &amp; k_NameOfDebugLogFile)

                    ' Write the entire contents of the txtFileText text box
                    '   to the StreamWriter in one shot.
                    myStreamWriter.Write(sX)
                    ' Flush the stream to ensure everything is flushed
                    myStreamWriter.Flush()
                End If

                '====================================
            Catch
                Debug.Print("ERROR IN UnhandledExceptionHandler #########################################")
                Debug.Print("ERROR IN UnhandledExceptionHandler #########################################")
                Debug.Print("ERROR IN UnhandledExceptionHandler #########################################")
                Debug.Print("ERROR IN UnhandledExceptionHandler #########################################")
            Finally
                ' Close the object if it has been created.
                If Not myStreamWriter Is Nothing Then
                    myStreamWriter.Close()
                End If
            End Try
            '====================================

        End If
        '$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

    End Sub

End Module


'In globals:

Friend Const k_DebugModeOn As Boolean = True
Friend Const k_IfDebugModeIsOn_ThenWriteToTextFile As Boolean = True
Friend Const k_NameOfDebugLogFile As String = "ADE_DebugLog.txt"
Friend g_sAppPath As String = c_gigFileManager.fn_DirectoryOfThisApplication

'-------------------------------------------------
'File Manager Class:
'-------------------------------------------------
Imports System.IO   'For FileInfo
Imports System.IO.File

Public Class c_gigFileManager

    Dim _AppFileInfo As New FileInfo(Application.ExecutablePath)
    Dim _sAppFolderName As String = _AppFileInfo.DirectoryName

    Friend Shared Function fn_b_TheFileExists(ByVal PathFile As String) As Boolean

        Dim bX As Boolean
        If File.Exists(PathFile) Then
            bX = True
        Else
            bX = False
        End If
        fn_b_TheFileExists = bX

    End Function


    Friend Shared Function fn_DirectoryOfThisApplication() As String

        Dim sX As String
        Dim AppFileInfo As New FileInfo(Application.ExecutablePath)
        Dim sAppFolderName As String = AppFileInfo.DirectoryName
        sX = sAppFolderName
        If Right(sX, 1) &lt;&gt; "\" Then
            sX = sX &amp; "\"
        End If
        fn_DirectoryOfThisApplication = sX

    End Function

End Class
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ARRAYLIST</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>ReadFileInLineByLineIntoAnArrayListReturnRowCount</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ARRAYLIST</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>ReadFileInLineByLineIntoAnArrayListReturnRowCount</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
Private Function ReadFileInLineByLineIntoAnArrayListAndReturnNumberOfLinesInTheFile(ByVal strPathFileInput As String, ByRef arrlstToPopulate As ArrayList) As Integer
        'Imports System.IO               'For StreamReader
        ' The StreamReader must be defined outside of the Try-Catch block
        '   in order to reference it in the Finally block.
        Dim myStreamReader As StreamReader
        Dim myInputString As String
        Dim rowCount As Integer = 0

        ' Ensure that the creation of the new StreamReader is wrapped in a 
        '   Try-Catch block, since an invalid filename could have been used.
        Try
            ' Create a StreamReader using a Shared (static) File class.
            myStreamReader = File.OpenText(strPathFileInput)


            ' Begin by reading a single line
            arrlstToPopulate.Clear()
            myInputString = myStreamReader.ReadLine()
            gig.TraceMe("First Line: " &amp; myInputString)
            ' Continue reading while there are still lines to be read
            While Not myInputString Is Nothing
                arrlstToPopulate.Add(myInputString)
                rowCount += 1
                gig.TraceMe(rowCount.ToString() &amp; "] " &amp; myInputString)
                ' Read the next line.
                myInputString = myStreamReader.ReadLine()
            End While


        Catch exc As Exception
            ' Show the error to the user.
            gig.TraceMe("File could not be opened or read." + VbCrLf + _
                "Please verify that the filename is correct, " + _
                "and that you have read permissions for the desired " + _
                "directory." + VbCrLf + VbCrLf + "Exception: " + exc.Message)
        Finally
            ' Close the object if it has been created.
            If Not myStreamReader Is Nothing Then
                myStreamReader.Close()
            End If
        End Try

        Return rowCount
    End Function</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>File_Directory</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>ReadFileInLineByLineIntoAnArrayList</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>File_Directory</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>ReadFileInLineByLineIntoAnArrayList</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Private Sub ReadFileInLineByLineIntoAnArrayList(ByVal strPathFileInput As String, ByRef arrlstToPopulate As ArrayList)
        'Imports System.IO               'For StreamReader
        ' The StreamReader must be defined outside of the Try-Catch block
        '   in order to reference it in the Finally block.
        Dim myStreamReader As StreamReader
        Dim myInputString As String
        Dim rowCount As Integer = 0

        ' Ensure that the creation of the new StreamReader is wrapped in a 
        '   Try-Catch block, since an invalid filename could have been used.
        Try
            ' Create a StreamReader using a Shared (static) File class.
            myStreamReader = File.OpenText(strPathFileInput)


            ' Begin by reading a single line
            arrlstToPopulate.Clear()
            myInputString = myStreamReader.ReadLine()
            gig.TraceMe("First Line: " &amp; myInputString)
            ' Continue reading while there are still lines to be read
            While Not myInputString Is Nothing
                arrlstToPopulate.Add(myInputString)
                rowCount += 1
                gig.TraceMe(rowCount.ToString() &amp; "] " &amp; myInputString)
                ' Read the next line.
                myInputString = myStreamReader.ReadLine()
            End While
        Catch exc As Exception
            ' Show the error to the user.
            gig.TraceMe("File could not be opened or read." + VbCrLf + _
                "Please verify that the filename is correct, " + _
                "and that you have read permissions for the desired " + _
                "directory." + VbCrLf + VbCrLf + "Exception: " + exc.Message)
        Finally
            ' Close the object if it has been created.
            If Not myStreamReader Is Nothing Then
                myStreamReader.Close()
            End If
        End Try
    End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>File_Directory</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>StreamWriterCreateFileFromString</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>File_Directory</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>StreamWriterCreateFileFromString</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Public Sub StreamWriterCreateFileFromString(ByVal strXML As String)
            Dim strPathFile As String = "C:\JunkXML.xml"
            ' Check to see if the user is writing over an existing file.
            If File.Exists(strPathFile) Then
                If MsgBox("That file exists. Would you like to overwrite it, then rerun this?", _
                    MsgBoxStyle.YesNo) &lt;&gt; MsgBoxResult.Yes Then

                    ' Leave the subroutine
                    Return
                End If
            End If

            ' The StreamWriter must be defined outside of the Try-Catch block
            '   in order to reference it in the Finally block.
            Dim myStreamWriter As StreamWriter

            ' Ensure that the creation of the new StreamWriter is wrapped in a 
            '   Try-Catch block, since an invalid filename could have been used.
            Try
                ' Create a StreamWriter using a Shared (static) File class.
                myStreamWriter = File.CreateText(strPathFile)

                ' Write the entire contents of the txtFileText text box
                '   to the StreamWriter in one shot.
                myStreamWriter.Write(strXML)
                myStreamWriter.Flush()
            Catch exc As Exception
                ' Show the error to the user.
                MsgBox("File could not be created or written to." + VbCrLf + _
                    "Please verify that the filename is correct, " + _
                    "and that you have write permissions for the desired " + _
                    "directory." + VbCrLf + VbCrLf + "Exception: " + exc.Message)
            Finally
                ' Close the object if it has been created.
                If Not myStreamWriter Is Nothing Then
                    myStreamWriter.Close()
                End If
            End Try
        End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>File_Directory</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>StreamWriterOpenExisingFileReadItInOnePass</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>File_Directory</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>StreamWriterOpenExisingFileReadItInOnePass</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>   
Imports System.IO

 ' This subrouting uses a StreamReader object to open an existing file
    '   and read it in one pass and place the text in the txtFileText text box.
    Private Sub btnStreamReaderReadFromFile_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnStreamReaderReadFromFile.Click
        ' The StreamReader must be defined outside of the Try-Catch block
        '   in order to reference it in the Finally block.
        Dim myStreamReader As StreamReader

        ' Ensure that the creation of the new StreamReader is wrapped in a 
        '   Try-Catch block, since an invalid filename could have been used.
        Try
            ' Create a StreamReader using a Shared (static) File class.
            myStreamReader = File.OpenText(txtFileName.Text)
            ' Read the entire file in one pass, and add the contents to 
            '   txtFileText text box.
            Me.txtFileText.Text = myStreamReader.ReadToEnd()
        Catch exc As Exception
            ' Show the exception to the user.
            MsgBox("File could not be opened or read." + VbCrLf + _
                "Please verify that the filename is correct, " + _
                "and that you have read permissions for the desired " + _
                "directory." + VbCrLf + VbCrLf + "Exception: " + exc.Message)
        Finally
            ' Close the object if it has been created.
            If Not myStreamReader Is Nothing Then
                myStreamReader.Close()
            End If
        End Try
    End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>File_Directory</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>StreamWriterReadExistingFileOutputItLineByLine</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>File_Directory</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>StreamWriterReadExistingFileOutputItLineByLine</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Imports System.IO  


  ' This subrouting uses a StreamReader object to open an existing file
    '   and read it line by line. It then outputs each line, with a line
    '   number to the txtFileText textbox.
    Private Sub btnStringReaderReadFileInLines_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnStringReaderReadFileInLines.Click

        ' The StreamReader must be defined outside of the Try-Catch block
        '   in order to reference it in the Finally block.
        Dim myStreamReader As StreamReader
        Dim myInputString As String
        Dim rowCount As Integer = 0

        ' Ensure that the creation of the new StreamReader is wrapped in a 
        '   Try-Catch block, since an invalid filename could have been used.
        Try
            ' Create a StreamReader using a Shared (static) File class.
            myStreamReader = File.OpenText(txtFileName.Text)
            txtFileText.Clear() ' Clear the TextBox

            ' Begin by reading a single line
            myInputString = myStreamReader.ReadLine()
            ' Continue reading while there are still lines to be read
            While Not myInputString Is Nothing
                ' Output the text with a line number
                txtFileText.Text += rowCount.ToString() + ": " + _
                    myInputString + VbCrLf
                rowCount += 1
                ' Read the next line.
                myInputString = myStreamReader.ReadLine()
            End While
        Catch exc As Exception
            ' Show the error to the user.
            MsgBox("File could not be opened or read." + VbCrLf + _
                "Please verify that the filename is correct, " + _
                "and that you have read permissions for the desired " + _
                "directory." + VbCrLf + VbCrLf + "Exception: " + exc.Message)
        Finally
            ' Close the object if it has been created.
            If Not myStreamReader Is Nothing Then
                myStreamReader.Close()
            End If
        End Try
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>File_Directory</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>StreamWriterReadFileOutputItCharacterAtATime</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>File_Directory</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>StreamWriterReadFileOutputItCharacterAtATime</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Imports System.IO   


 ' This subrouting uses a StreamReader object to open an existing file
    '   and read it character by character. It then outputs each character
    '   after a short pause, to show the user that the file is being read
    '   by characters. The output is added to the txtFileText text box.
    Private Sub btnStreamReaderReadInChars_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnStreamReaderReadInChars.Click
        ' The StreamReader must be defined outside of the Try-Catch block
        '   in order to reference it in the Finally block.
        Dim myStreamReader As StreamReader
        Dim myNextInt As Integer

        ' Ensure that the creation of the new StreamWriter is wrapped in a 
        '   Try-Catch block, since an invalid filename could have been used.
        Try
            ' Create a StreamReader using a Shared (static) File class.
            myStreamReader = File.OpenText(txtFileName.Text)
            txtFileText.Clear() ' Clear the TextBox

            ' The Read() method returns an integer. 
            myNextInt = myStreamReader.Read()
            ' The Read() method returns '-1' when the end of the
            '   file has been reached
            While myNextInt &lt;&gt; -1
                ' Convert the integer to a unicode Char and add it
                '   to the text box.
                txtFileText.Text += ChrW(myNextInt)
                ' Read the next value from the Stream
                myNextInt = myStreamReader.Read()
                ' Refresh the text box so that the user can see
                '   the characters being added.
                txtFileText.Refresh()
                ' Sleep for 100 milliseconds, so that the user can
                '   see that the characters are being read one at a 
                '   time. Otherwise, they display too quickly.
                System.Threading.Thread.CurrentThread.Sleep(100)
            End While
        Catch exc As Exception
            ' Show the exception to the user.
            MsgBox("File could not be opened or read." + VbCrLf + _
                "Please verify that the filename is correct, " + _
                "and that you have read permissions for the desired " + _
                "directory." + VbCrLf + VbCrLf + "Exception: " + exc.Message)
        Finally
            ' Close the object if it has been created.
            If Not myStreamReader Is Nothing Then
                myStreamReader.Close()
            End If
        End Try

</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>File_Directory</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>StreamWriterToAppendToAnExistingFile</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>File_Directory</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>StreamWriterToAppendToAnExistingFile</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Imports System.IO 


  ' This subrouting uses a StreamWriter object to append text to a currently
    '   existing file. If the file doesn't exist, it is created.
    Private Sub btnStreamWriterAppendToFile_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnStreamWriterAppendToFile.Click

        ' The StreamWriter must be defined outside of the Try-Catch block
        '   in order to reference it in the Finally block.
        Dim myStreamWriter As StreamWriter

        ' Ensure that the creation of the new StreamWriter is wrapped in a 
        '   Try-Catch block, since an invalid filename could have been used.
        Try
            ' Create a StreamWriter using a Shared (static) File class.
            myStreamWriter = File.AppendText(txtFileName.Text)

            ' Write the entire contents of the txtFileText text box
            '   to the StreamWriter in one shot.
            myStreamWriter.Write(txtFileText.Text)
            ' Flush the stream to ensure everything is flushed
            myStreamWriter.Flush()
        Catch exc As Exception
            MsgBox("File could not be opened or written to." + VbCrLf + _
                "Please verify that the filename is correct, " + _
                "and that you have read permissions for the desired " + _
                "directory." + VbCrLf + VbCrLf + "Exception: " + exc.Message)
        Finally
            ' Close the object if it has been created.
            If Not myStreamWriter Is Nothing Then
                myStreamWriter.Close()
            End If
        End Try
    End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>File_Directory</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>StreamWriterToCreateANewFileAndFillWithText</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>File_Directory</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>StreamWriterToCreateANewFileAndFillWithText</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
    Private Sub btnStreamWriterCreateFile_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnStreamWriterCreateFile.Click

        ' Check to see if the user is writing over an existing file.
        If File.Exists(txtFileName.Text) Then
            If MsgBox("That file exists. Would you like to overwrite it?", _
                MsgBoxStyle.YesNo) &lt;&gt; MsgBoxResult.Yes Then

                ' Leave the subroutine
                Return
            End If
        End If

        ' The StreamWriter must be defined outside of the Try-Catch block
        '   in order to reference it in the Finally block.
        Dim myStreamWriter As StreamWriter

        ' Ensure that the creation of the new StreamWriter is wrapped in a 
        '   Try-Catch block, since an invalid filename could have been used.
        Try
            ' Create a StreamWriter using a Shared (static) File class.
            myStreamWriter = File.CreateText(txtFileName.Text)

            ' Write the entire contents of the txtFileText text box
            '   to the StreamWriter in one shot.
            myStreamWriter.Write(txtFileText.Text)
            myStreamWriter.Flush()
        Catch exc As Exception
            ' Show the error to the user.
            MsgBox("File could not be created or written to." + VbCrLf + _
                "Please verify that the filename is correct, " + _
                "and that you have write permissions for the desired " + _
                "directory." + VbCrLf + VbCrLf + "Exception: " + exc.Message)
        Finally
            ' Close the object if it has been created.
            If Not myStreamWriter Is Nothing Then
                myStreamWriter.Close()
            End If
        End Try
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Structure</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>ReadMe</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Structure</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>ReadMe</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
'The structure is a programming entity similar to classes [...]. The difference is that structures are value types 
'while classes of objects are reference types.
'A value type variable is declared and the space according to said data type is allocated at the execution time. 
'Value type variable is destroyed when leaving the block where it has been defined.

'A reference type variable involves a process of definition in two steps:

'    Variable declaration: requires use of a data type associated to the variable;
'    Variable instantiation: creates the object.

'A reference type variable exists in two memory locations. Thus, when leaving the block that has been defined, 
'the reference to the object is destroyed, but the object itself remains allocated in memory.
'Structures are used for small objects and are defined between specifications Structure and End Structure.
'End Module</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>WPF_Forms</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>MenuToOpenOtherForms_as_Modal</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>WPF_Forms</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>MenuToOpenOtherForms_as_Modal</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>MenuToOpenOtherForms_as_Modal

'Each WPF form is named just like the Name On the Button (.e.g first form is: BindProductObject.xaml )


'Newest Version: Use Tag
=====================================================================================
'1] XAML

&lt;Window x:Class="Switchboard"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="Switchboard" Height="283" Width="606"&gt;
    &lt;Grid Button.Click="ButtonClick"&gt;

        &lt;Grid.RowDefinitions&gt;
            &lt;RowDefinition Height="44"&gt;&lt;/RowDefinition&gt;
            &lt;RowDefinition Height="410*"&gt;&lt;/RowDefinition&gt;
        &lt;/Grid.RowDefinitions&gt;

        &lt;Grid.ColumnDefinitions&gt;
            &lt;ColumnDefinition Width="127"&gt;&lt;/ColumnDefinition&gt;
            &lt;ColumnDefinition &gt;&lt;/ColumnDefinition&gt;

        &lt;/Grid.ColumnDefinitions&gt;

         &lt;!--TAN Background="#FFEDD0A9"--&gt;
        &lt;!--Olive Background="#FFCAD852"--&gt;
        &lt;UniformGrid Columns="1" Margin="2" Grid.Row="1" Grid.Column="0" Width="127"&gt;
            &lt;Button Content="Click" Background="#FFEDD0A9" Name="Button1" Tag="wpf_AIC_001"/&gt;
            &lt;Button Content="Click" Background="#FFCAD852" Tag="wpf_AIC_002"/&gt;
            &lt;Button Content="Click" Background="#FFEDD0A9" Tag="wpf_AIC_003"/&gt;
            &lt;Button Content="Click" Background="#FFCAD852" Tag="wpf_AIC_004"/&gt;

        &lt;/UniformGrid&gt;

        &lt;UniformGrid Columns="1" Margin="2" Grid.Row="1" Grid.Column="1" &gt;

            &lt;Viewbox&gt;
                &lt;TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,5,5,5"&gt; view - First one&lt;/TextBlock&gt;
            &lt;/Viewbox&gt;
            &lt;Viewbox&gt;
                &lt;TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,5,5,5"&gt; 1 View&lt;/TextBlock&gt;
            &lt;/Viewbox&gt;
            &lt;Viewbox&gt;
                &lt;TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,5,5,5"&gt; SP With drop down to choose Metric&lt;/TextBlock&gt;
            &lt;/Viewbox&gt;
            &lt;Viewbox&gt;
                &lt;TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,5,5,5"&gt; SP Like Last b/ w/ Grid, PRINT&lt;/TextBlock&gt;
            &lt;/Viewbox&gt;


        &lt;/UniformGrid&gt;
    &lt;/Grid&gt;
&lt;/Window&gt;

'2] VB

Imports System.Reflection
Public Class Switchboard
    Private Sub ButtonClick(ByVal sender As Object, ByVal e As RoutedEventArgs)
        ' Get the current button.
        Dim cmd As Button = CType(e.OriginalSource, Button)

        ' Create an instance of the window named
        ' by the current button.
        Dim type As Type = Me.GetType()
        Dim [Assembly] As System.Reflection.Assembly = type.Assembly
        'Dim win As Window = CType([Assembly].CreateInstance(type.Namespace &amp; "." &amp; cmd.Content.ToString()), Window)
        Dim win As Window = CType([Assembly].CreateInstance(type.Namespace &amp; "." &amp; cmd.Tag.ToString), Window)
        ' Show the window.
        win.ShowDialog()
    End Sub
End Class



















'Oldest Version : Use Content
=====================================================================================
Imports System.Reflection

Public Class Menu

    Private Sub ButtonClick(ByVal sender As Object, ByVal e As RoutedEventArgs)
        ' Get the current button.
        Dim cmd As Button = CType(e.OriginalSource, Button)

        ' Create an instance of the window named
        ' by the current button.
        Dim type As Type = Me.GetType()
        Dim [Assembly] As System.Reflection.Assembly = type.Assembly
        Dim win As Window = CType([Assembly].CreateInstance(type.Namespace &amp; "." &amp; cmd.Content.ToString()), Window)

        ' Show the window.
        win.ShowDialog()
    End Sub


End Class



'2] XAML - SIMPLE

&lt;Window x:Class="Menu"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="Menu" Height="321" Width="244"
    &gt;
    &lt;Grid&gt;
      &lt;StackPanel Margin="5" Button.Click="ButtonClick"&gt;

            &lt;Button Name="Button1"&gt;BindProductObject&lt;/Button&gt;
            &lt;Button&gt;EditProductObject&lt;/Button&gt;

            &lt;Button&gt;BindToCollection&lt;/Button&gt;
            &lt;Button&gt;BindToDataSet&lt;/Button&gt;
            &lt;Button&gt;BindToLinqFilteredCollection&lt;/Button&gt;

            &lt;Button&gt;VirtualizationTest&lt;/Button&gt;

            &lt;Button&gt;ValidationTest&lt;/Button&gt;
            &lt;Button&gt;BindingGroupValidation&lt;/Button&gt;

            &lt;Button&gt;BindToObjectDataProvider&lt;/Button&gt;
            &lt;Button&gt;BindToXmlDataProvider&lt;/Button&gt;


        &lt;/StackPanel&gt;
        
    &lt;/Grid&gt;
&lt;/Window&gt;


'3] XAML w/ grid etc:

&lt;Window x:Class="Switchboard"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="Switchboard" Height="283" Width="606"&gt;
    &lt;Grid Button.Click="ButtonClick"&gt;

        &lt;Grid.RowDefinitions&gt;
            &lt;RowDefinition Height="44"&gt;&lt;/RowDefinition&gt;
            &lt;RowDefinition Height="410*"&gt;&lt;/RowDefinition&gt;
        &lt;/Grid.RowDefinitions&gt;

        &lt;Grid.ColumnDefinitions&gt;
            &lt;ColumnDefinition Width="127"&gt;&lt;/ColumnDefinition&gt;
            &lt;ColumnDefinition &gt;&lt;/ColumnDefinition&gt;

        &lt;/Grid.ColumnDefinitions&gt;

         &lt;!--TAN Background="#FFEDD0A9"--&gt;
        &lt;!--Olive Background="#FFCAD852"--&gt;
        &lt;UniformGrid Columns="1" Margin="2" Grid.Row="1" Grid.Column="0" Width="127"&gt;
            &lt;Button Content="wpf_AIC_001" Background="#FFEDD0A9" Name="Button1" /&gt;
            &lt;Button Content="wpf_AIC_002" Background="#FFCAD852" /&gt;
            &lt;Button Content="wpf_AIC_003" Background="#FFEDD0A9" /&gt;
            &lt;Button Content="wpf_AIC_004" Background="#FFCAD852" /&gt;

        &lt;/UniformGrid&gt;

        &lt;UniformGrid Columns="1" Margin="2" Grid.Row="1" Grid.Column="1" &gt;

            &lt;Viewbox&gt;
                &lt;TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,5,5,5"&gt; ???&lt;/TextBlock&gt;
            &lt;/Viewbox&gt;
            &lt;Viewbox&gt;
                &lt;TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,5,5,5"&gt; ???&lt;/TextBlock&gt;
            &lt;/Viewbox&gt;
            &lt;Viewbox&gt;
                &lt;TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,5,5,5"&gt; With drop down to choose Metric&lt;/TextBlock&gt;
            &lt;/Viewbox&gt;
            &lt;Viewbox&gt;
                &lt;TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,5,5,5"&gt; Like Last b/ w/ Grid&lt;/TextBlock&gt;
            &lt;/Viewbox&gt;


        &lt;/UniformGrid&gt;
    &lt;/Grid&gt;
&lt;/Window&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>WPF_CustomControl</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>SimpleCustomButton</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>WPF_CustomControl</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>SimpleCustomButton</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
'1] The VB responds to the three enabled buttons



&lt;Window x:Class="SimpleCustomButton"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="SimpleCustomButton" Height="410" Width="378"
    &gt;
  &lt;Window.Resources&gt;
    &lt;ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}"&gt;
      &lt;Border BorderBrush="Orange" BorderThickness="3" CornerRadius="2"
       Background="Red" TextBlock.Foreground="White" Name="Border"&gt;
        &lt;Grid&gt;
          &lt;Rectangle Name="FocusCue" Visibility="Hidden" Stroke="Black"
           StrokeThickness="1" StrokeDashArray="1 2"
           SnapsToDevicePixels="True" &gt;&lt;/Rectangle&gt;
          &lt;ContentPresenter RecognizesAccessKey="True"
         Margin="{TemplateBinding Padding}"&gt;&lt;/ContentPresenter&gt;
        &lt;/Grid&gt;
      &lt;/Border&gt;
      &lt;ControlTemplate.Triggers&gt;
        &lt;Trigger Property="IsMouseOver" Value="True"&gt;
          &lt;Setter TargetName="Border" Property="Background" Value="DarkRed" /&gt;
        &lt;/Trigger&gt;
        &lt;Trigger Property="IsPressed" Value="True"&gt;
          &lt;Setter TargetName="Border" Property="Background" Value="IndianRed" /&gt;
          &lt;Setter TargetName="Border" Property="BorderBrush" Value="DarkKhaki" /&gt;
        &lt;/Trigger&gt;
        &lt;Trigger Property="IsKeyboardFocused" Value="True"&gt;
          &lt;Setter TargetName="FocusCue" Property="Visibility" Value="Visible" /&gt;
        &lt;/Trigger&gt;
        &lt;Trigger Property="IsEnabled" Value="False"&gt;
          &lt;Setter TargetName="Border" Property="TextBlock.Foreground" Value="Gray" /&gt;
          &lt;Setter TargetName="Border" Property="Background" Value="MistyRose" /&gt;
        &lt;/Trigger&gt;

      &lt;/ControlTemplate.Triggers&gt;
    &lt;/ControlTemplate&gt;

  &lt;/Window.Resources&gt;
  &lt;StackPanel Margin="10"&gt;
    &lt;Button  Margin="10" Padding="5" Template="{StaticResource ButtonTemplate}" Click="Clicked" Name="cmdOne"
              &gt;
      A Simple Button With a Custom Template
    &lt;/Button&gt;
    &lt;Button Margin="10" Padding="5" Template="{StaticResource ButtonTemplate}" Click="Clicked" Name="cmdTwo"
              &gt;Another Button With a Custom Template&lt;/Button&gt;
    &lt;Button  Margin="10" Padding="5" Template="{StaticResource ButtonTemplate}" Click="Clicked" Name="cmdThree"
              &gt;A Third Button&lt;/Button&gt;
    &lt;Button  Margin="10" Padding="5"  Template="{StaticResource ButtonTemplate}" IsEnabled="False" Click="Clicked" Name="cmdFour"
              &gt;
      A Disabled Button
   
    &lt;/Button&gt;
  &lt;/StackPanel&gt;
&lt;/Window&gt;



Public Class SimpleCustomButton

    Private Sub Clicked(ByVal sender As Object, ByVal e As RoutedEventArgs)
        MessageBox.Show("You clicked " &amp; (CType(sender, Button)).Name)
    End Sub

End Class</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>WPF_CustomControl</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>ButtonWithAnimation_MouseEnter_MouseLeave</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>WPF_CustomControl</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>ButtonWithAnimation_MouseEnter_MouseLeave</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;Window x:Class="ButtonWithAnimation"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Title="ButtonWithAnimation" Height="300" Width="300"&gt;
    &lt;Window.Resources&gt;
        &lt;ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}"&gt;
            &lt;Border BorderBrush="Orange" BorderThickness="3" CornerRadius="2"
       Background="Red" TextBlock.Foreground="White" Name="Border"&gt;
                &lt;Grid&gt;
                    &lt;Rectangle Name="FocusCue" Visibility="Hidden" Stroke="Black"
           StrokeThickness="1" StrokeDashArray="1 2"
           SnapsToDevicePixels="True" &gt;&lt;/Rectangle&gt;
                    &lt;ContentPresenter RecognizesAccessKey="True"
         Margin="{TemplateBinding Padding}"&gt;&lt;/ContentPresenter&gt;
                &lt;/Grid&gt;
            &lt;/Border&gt;
            &lt;ControlTemplate.Triggers&gt;
                &lt;EventTrigger RoutedEvent="MouseEnter"&gt;
                    &lt;BeginStoryboard&gt;
                        &lt;Storyboard&gt;
                            &lt;ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color"
                                            To="Blue" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever"&gt;&lt;/ColorAnimation&gt;
                        &lt;/Storyboard&gt;
                    &lt;/BeginStoryboard&gt;
                &lt;/EventTrigger&gt;
                &lt;EventTrigger RoutedEvent="MouseLeave"&gt;
                    &lt;BeginStoryboard&gt;
                        &lt;Storyboard&gt;
                            &lt;ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background.Color" Duration="0:0:0.5"&gt;&lt;/ColorAnimation&gt;
                        &lt;/Storyboard&gt;
                    &lt;/BeginStoryboard&gt;
                &lt;/EventTrigger&gt;
                &lt;Trigger Property="IsPressed" Value="True"&gt;
                    &lt;Setter TargetName="Border" Property="Background" Value="IndianRed" /&gt;
                    &lt;Setter TargetName="Border" Property="BorderBrush" Value="DarkKhaki" /&gt;
                &lt;/Trigger&gt;
                &lt;Trigger Property="IsKeyboardFocused" Value="True"&gt;
                    &lt;Setter TargetName="FocusCue" Property="Visibility" Value="Visible" /&gt;
                &lt;/Trigger&gt;


            &lt;/ControlTemplate.Triggers&gt;
        &lt;/ControlTemplate&gt;

    &lt;/Window.Resources&gt;
    &lt;StackPanel Margin="10"&gt;
        &lt;Button  Margin="10" Padding="5" Template="{StaticResource ButtonTemplate}" Name="cmdOne"
              &gt;
            A Simple Button With a Custom Template
        &lt;/Button&gt;
        &lt;Button Margin="10" Padding="5" Template="{StaticResource ButtonTemplate}" Name="cmdTwo"
              &gt;Another Button With a Custom Template&lt;/Button&gt;

    &lt;/StackPanel&gt;
&lt;/Window&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>XAML_Data_Formatting</Category>
        <Language>XML</Language>
        <Public>false</Public>
        <Name>SortGroupsOfDataItems</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>XAML_Data_Formatting</Category>
          <Language>XML</Language>
          <Public>false</Public>
          <Name>SortGroupsOfDataItems</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!--

SortGroupsOfDataItems

source:  http://www.beacosta.com/blog/?p=17

With the introduction of CollectionViewSource, we are now able to do basic grouping of data items in an ItemsControl without using code. 
    In this post I will show you how to group items and sort those groups.

The data source of this sample consists of a list of objects of type Animal. Animal has a Name and a Category (which is an enumeration). 
    I want to group the items depending on their Category. This is easily done in markup by using CollectionViewSource:--&gt;

    &lt;Window.Resources&gt;
    &lt;local:Animals x:Key="animals"/&gt;

    &lt;CollectionViewSource x:Key="cvs" Source="{Binding Source={StaticResource animals}, Path=AnimalList}"&gt;
        &lt;CollectionViewSource.GroupDescriptions&gt;
            &lt;PropertyGroupDescription PropertyName="Category"/&gt;
        &lt;/CollectionViewSource.GroupDescriptions&gt;
    &lt;/CollectionViewSource&gt;

    &lt;DataTemplate x:Key="animalTemplate"&gt;
        &lt;TextBlock Text="{Binding Path=Name}" Foreground="MediumSeaGreen"/&gt;
    &lt;/DataTemplate&gt;
    &lt;/Window.Resources&gt;

    &lt;ItemsControl ItemsSource="{Binding Source={StaticResource cvs}}" ItemTemplate="{StaticResource animalTemplate}"/&gt;

    &lt;!--As I explained in a previous post, CollectionViewSource creates a custom View over the source list through markup. 
    A view is a layer on top of a source data list that allows us to group, sort, and filter items, as well as keep track of the currently selected item.

If you try the sample markup above, you will see the names of the animals, but no information about the groups. 
    The next step is to provide a template to display the group titles. CollectionViewSource wraps each group of items in an object of type CollectionViewGroup, 
    and we are interested in its “Name” property, which we can display using the following template:--&gt;

    &lt;DataTemplate x:Key="categoryTemplate"&gt;
        &lt;TextBlock Text="{Binding Path=Name}" FontWeight="Bold" Foreground="ForestGreen" Margin="0,5,0,0"/&gt;
    &lt;/DataTemplate&gt;

    In order to use this template for the group titles, we have to add it to the GroupStyle property of ItemsControl (which takes a collection of GroupStyle objects):

    &lt;ItemsControl ItemsSource="{Binding Source={StaticResource cvs}}"&gt;
        &lt;ItemsControl.GroupStyle&gt;
            &lt;GroupStyle HeaderTemplate="{StaticResource categoryTemplate}" /&gt;
        &lt;/ItemsControl.GroupStyle&gt;
    &lt;/ItemsControl&gt;

    &lt;!--We could add more GroupStyles to the collection, in which case they would be applied to different levels of groups. 
    (For simplicity, we just have one level of grouping in this sample.)

At this point, the groups and items display correctly, but we would like to sort the groups and the items within the groups. 
    I’ve seen a few people approach this by looking for a specific “SortGroups” method or something similar. 
    We didn’t design a special API to sort groups because you can accomplish that simply by sorting the items by the same property by which you are grouping:--&gt;

    &lt;CollectionViewSource x:Key="cvs" Source="{Binding Source={StaticResource animals}, Path=AnimalList}"&gt;
        &lt;CollectionViewSource.GroupDescriptions&gt;
            &lt;PropertyGroupDescription PropertyName="Category"/&gt;
        &lt;/CollectionViewSource.GroupDescriptions&gt;
        &lt;CollectionViewSource.SortDescriptions&gt;
            &lt;scm:SortDescription PropertyName="Category" /&gt;
            &lt;scm:SortDescription PropertyName="Name" /&gt;
        &lt;/CollectionViewSource.SortDescriptions&gt;
    &lt;/CollectionViewSource&gt;

    &lt;!--Adding two sort descriptions allows us to sort the groups first and then the items within the groups.
    Notice that because Category is an enumeration, sorting by that property will display the groups in the order 
    they are defined in the enumeration (which may or may not be alphabetically). Name is of type string, so the leaf items will be displayed alphabetically.

This is a screenshot of the completed sample:--&gt;</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>FORM</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>PassParentAsCallingObject_FlipFlop_Form1_Form2_Visibility</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>FORM</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>PassParentAsCallingObject_FlipFlop_Form1_Form2_Visibility</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
'From: http://devcity.net/articles/94/1/.aspx

'======= Form1 ==================================



Private Sub ShowForm2Button_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ShowForm2Button.Click
'  Note the "Me" in brackets.  Very important!
        Dim F2 As New Form2(Me)  ' Instantiate it
        F2.Show()   ' Show it
        Me.Hide()   ' Hide Form1
End Sub



'======== Form2 =================================
' Form2 needs this declaration in the usual declarations area (ie. outside of any other code blocks) :

Private CallingForm As Object


Public Sub New(ByVal caller As Object)    '&lt;======= Overload to pass reference to parent form to the Child form
    MyBase.New()
    InitializeComponent()
    '  Note which form has called this one
    CallingForm = caller
End Sub


Private Sub Form2_Closing(ByVal sender As Object, ByVal e As System.ComponentModel.CancelEventArgs) Handles MyBase.Closing
    e.Cancel = True   'This is optional depending on whether you want the Form2 to actually close
    Me.Hide()
    '  If the CallingForm still exists then show it now
    If Not Is Nothing(CallingForm) Then CallingForm.Show()
    '  then dispose of it's reference here.
    CallingForm = Nothing
End Sub</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>SSRS</Category>
        <Language>TEXT</Language>
        <Public>false</Public>
        <Name>HTML_1</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>SSRS</Category>
          <Language>TEXT</Language>
          <Public>false</Public>
          <Name>HTML_1</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
When a simple or complex expression is defined inside a text box, 
the resulting UI representation of this expression is known as a placeholder


===============Creating Placeholder Text in a Text Box ==========================================================

The value of a placeholder is always a simple or complex expression. 
You can add a placeholder to a text box by creating an expression using one of the following methods:

    Drag a field from the Report Data pane and drop it into the text box. 
    If you drag the expression anywhere else on the report body,
    a new text box will be created that contains the placeholder. 
    The value of this placeholder will be the field expression that corresponds to the field that was dropped.

    Right-click anywhere in the text box and select Create Placeholder. 
    In the Placeholder Properties dialog box, you can specify an expression as the value of your placeholder. 
    For more information, see Placeholder Properties Dialog Box, General.

    Enter any simple or complex expression into the text box. For example, 
    if you enter Name: [Name] into the text box, 
    the [Name] text will be displayed as a placeholder that represents the expression =Fields!Name.Value. 
    For more information about the types of display text supported for expressions, 
    see Understanding Simple and Complex Expressions (Reporting Services).

    Enter an expression into an empty text box by starting with an equal sign (=). 
    When you change the focus off the text box, the resulting expression 
    is converted into a placeholder that you can edit. 
    If the text box is not empty, or the equal sign is inserted anywhere but as the first character in the text box, 
    the equal sign is treated as a string literal and a placeholder is not created. 
    For more information about defining simple and complex expressions, 
    see Using Expressions (Reporting Services).

=========================================================================

You can format placeholders by using the Placeholder Properties dialog box.




The following is a complete list of tags that will render as HTML when defined as placeholder text:

    Hyperlinks: &lt;A href&gt;

    Fonts: &lt;FONT&gt;

    Header, style and block elements: &lt;H{n}&gt;, &lt;DIV&gt;, &lt;SPAN&gt;,&lt;P&gt;, &lt;DIV&gt;, &lt;LI&gt;, &lt;HN&gt;

    Text format: &lt;B&gt;, &lt;I&gt;, &lt;U&gt;, &lt;S&gt;

    List handling: &lt;OL&gt;, &lt;UL&gt;, &lt;LI&gt;
    
Any other HTML markup tags will be ignored during report processing. 
If the HTML represented by the expression in the placeholder text is not well formed, 
the placeholder is rendered as plain text. All HTML tags are case-insensitive.

If the text in your text box contains only one block of text, 
any HTML in the placeholder that defines block elements will render correctly. 
However, if the text box has multiple blocks of text, 
the HTML tags are ignored and the structure of the text is defined by the blocks of text.

If more than one tag is defined for text, 
and Reporting Services detects a conflict between the HTML and existing report constraints, 
only the innermost HTML tag will be treated as HTML.    </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ERROR_EXCEPTION</Category>
        <Language>C#</Language>
        <Public>false</Public>
        <Name>TRY_CATCH_FINALLY</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ERROR_EXCEPTION</Category>
          <Language>C#</Language>
          <Public>false</Public>
          <Name>TRY_CATCH_FINALLY</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>View ColorizedCopy to ClipboardPrint

public class EHClass
  {
      void ReadFile(int index)
      {
          // To run this code, substitute a valid path from your local machine
  
          string path = @"c:\users\public\test.txt";
          System.IO.StreamReader file = new System.IO.StreamReader(path);
          char[] buffer = new char[10];
          try
          {
              file.ReadBlock(buffer, index, buffer.Length);
          }
          catch (System.IO.IOException e)
          {
              Console.WriteLine("Error reading from {0}. Message = {1}", path, e.Message);
          }
  
          finally
          {
              if (file != null)
              {
                  file.Close();
              }
          }
          // Do something with buffer...
  
      }
  
  }

</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>DISPOSE_IDisposable</Category>
        <Language>C#</Language>
        <Public>false</Public>
        <Name>ReadMe_DISPOSE_IDisposable</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>DISPOSE_IDisposable</Category>
          <Language>C#</Language>
          <Public>false</Public>
          <Name>ReadMe_DISPOSE_IDisposable</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>ReadMe_DISPOSE_IDisposable


//File and Font are examples of managed types that access unmanaged resources 
//    (in this case file handles and device contexts). 
//    There are many other kinds of unmanaged resources and class library types that encapsulate them. 
//    All such types must implement the IDisposable interface.

//As a rule, when you use an IDisposable object, you should declare and instantiate it in a using statement. 
//    The using statement calls the Dispose method on the object in the correct way, 
//    and it also causes the object itself to go out of scope as soon as Dispose is called. 
//    Within the using block, the object is read-only and cannot be modified or reassigned (?).

//The using statement ensures that Dispose is called even if an exception occurs while you are calling methods on the object. 
//    You can achieve the same result by putting the object inside a try block and then calling Dispose in a finally block; 
//    in fact, this is how the using statement is translated by the compiler. </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>DynamicSQL</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>CompareContrastTwoMainMethods</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>DynamicSQL</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>CompareContrastTwoMainMethods</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>-- [CompareContrastTwoMainMethods]
-- these are examples of BAD usage of dynamic SQL
--how to write a stored procedure that takes a table name as its input.
--======================================================
-- there are two ways to invoke dynamic SQL, sp_executesql and EXEC():
--	 sp_executesql should be your choice 95% of the time

CREATE PROCEDURE general_select1 @tblname sysname,
                                 @key     varchar(10) AS
DECLARE @sql nvarchar(4000)
SELECT @sql = ' SELECT col1, col2, col3 ' +
              ' FROM dbo.' + quotename(@tblname) +
              ' WHERE keycol = @key'
EXEC sp_executesql @sql, N'@key varchar(10)', @key

-- Syntax:

sp_executesql @SQL_commands, @parameter_definitions, param1,...paramN

--======================================================

CREATE PROCEDURE general_select2 @tblname nvarchar(127),
                                 @key     varchar(10) AS
EXEC('SELECT col1, col2, col3
      FROM ' + @tblname + '
      WHERE keycol = ''' + @key + '''')
--======================================================
--  Passing a table name as a parameter is not how you should write stored procedures
--	The first thing is permissions. You may know that when you use stored procedures, 
--		users do not need permissions to access the tables accessed by the stored procedure. 
--		This does not apply when you use dynamic SQL!
--	 For the procedures above to execute successfully, the users must have SELECT permission on the table in @tblname
--		Starting with SQL 2005, there are alternatives
--	Next thing to observe is that the dynamic SQL is not part of the stored procedure, but constitutes its own scope
--
--	-----------
--	
--	Within the block of dynamic SQL, you cannot access local variables 
--		(including table variables) or parameters of the calling stored procedure. 
--		But you can pass parameters – in and out – to a block of dynamic SQL if you use sp_executesql.
--	Any USE statement in the dynamic SQL will not affect the calling stored procedure.
--	Temp tables created in the dynamic SQL will not be accessible from the calling procedure since 
--		they are dropped when the dynamic SQL exits. (Compare to how temp tables created in a 
--		stored procedure go away when you exit the procedure.) 
--		The block of dynamic SQL can however access temp tables created by the calling procedure.
--	If you issue a SET command in the dynamic SQL, the effect of the SET command lasts for the 
--		duration of the block of dynamic SQL only and does not affect the caller.
--	The query plan for the stored procedure does not include the dynamic SQL. 
--		The block of dynamic SQL has a query plan of its own.
--
--	-----------</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>DynamicSQL</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>The_Permission_System</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>DynamicSQL</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>The_Permission_System</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>--[The Permission System]

-- Historically, using stored procedures has been the way to give users access to data. 
--	In a locked-down database, users do not have permissions to access tables directly. 
--	Instead, the application performs all access through stored procedures that retrieve 
--	and update data in a controlled way, so that users only get to see data they have access to, 
--	and they cannot perform updates that violate business rules. 
--This works as long as the procedure and the tables have the same owner, 
--	typically dbo (the database owner), through a mechanism known as ownership chaining.

-- 'ownership chaining does not work when you use dynamic SQL'. 
--		The reason for this is very simple: the block of dynamic SQL is not a procedure and does not have any owner. 
--		Thus the chain is broken.

-- In SQL 2005 and later versions of SQL Server, this can be addressed by signing a procedure 
--	that uses dynamic SQL with a certificate.

-- A second method is to use the EXECUTE AS clause to impersonate a user that has been granted the necessary permissions. 
--	This method is easier to use, but has side effects that can have unacceptable consequences for auditing, 
--	row-level security schemes and system monitoring. For this reason, my strong recommendation is to use certificates.

--|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
-- [EXEC_Example]

IF EXISTS ( SELECT * FROM sys.procedures
               WHERE schema_id = schema_id('dbo')
                 AND name = N'get_order_data')
   DROP PROCEDURE dbo.get_order_data
GO
create proc get_order_data
 (@table varchar(30), @column varchar(30), @value int)
as
declare @query varchar(255)

select @query = 'select * from ' + @table
          + ' where ' + @column
          + ' = ' + convert(varchar(10), @value)

EXEC (@query)

return
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>TroubleShooting</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>Find_Blocking_Process_Kill_if_need_be</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>TroubleShooting</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>Find_Blocking_Process_Kill_if_need_be</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>

--1]
Sp_who2
-- on the other hand, always works and the results are generally instantaneous. 
--It displays, among many other things, any blocking on the SQL Server instance on which the problem has been reported.
-- Running sp_who2 on the affected server reveals that there are indeed blocked processes, 
--as is evidenced by the BlkBy field
--Blkby column lists the SPID that is blocking the given process


--2] Suppose something is locked up:

--a) find out which SPID is locking
Sp_who2
--b) Then if you need more info, and you get an SPID to examine:
DBCC INPUTBUFFER(55)		--This is an example where SPID #55 was one of interest, 
							-- it will give you more info on what query that process is working on
							
-- Then if necessary kill the offending SPID

KILL 51

-- Then to find out how long it will take to end or rollback:

KILL 51 WITH STATUSONLY

-- if it shows:
Estimated rollback completion: 0%, Estimated time remaining: 0 seconds

-- the SPID shows an estimated time rollback completion of 0%, and an estimated time remaining for rollback of 0 seconds, 
--indicating that it is not going to be possible to kill this SPID directly. 
--This situation can occur for the reason that I foreshadowed earlier: the blocking process has kicked off another process,
-- (e.g. from xp_cmdshell) 
--such as an executable, and SQL Server is waiting, indefinitely, for that other process to complete. 
--The only way to kill the blocking SPID is either to restart SQL Server or find and kill the executable that SQL Server is waiting for.</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>TroubleShooting</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>Find_Report_BlockingProcesses_and_numberOfLocksThatTheyAreHolding</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>TroubleShooting</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>Find_Report_BlockingProcesses_and_numberOfLocksThatTheyAreHolding</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>--prj_0000_214_UTILITY_ShowNumberOfBlockingProcesses_NumberOfLocksThatTheyAreHolding.sql

-- Look for High Lock Count in first column as a clue


--FROM: https://www.simple-talk.com/sql/database-administration/the-dba-as-detective-troubleshooting-locking-and-blocking/

--Some common lock types are:

--    RID – single row lock
--    KEY – a range of keys in an index
--    PAG – data or index page lock
--    EXT – Extent Lock
--    TAB – Table Lock
--    DB – Database Loc

--In addition to lock types that refer to resources or objects that can be locked, SQL Server has common lock modes:

--    S – Shared lock
--    U – Update Lock
--    X – Exclusive lock
--    IS – Intent shared
--    IU – Intent Update
--    IX – Intent Exclusive
--    BU – Bulk updat

use DB2_CRM
go


SET NOCOUNT ON

GO

 

-- Count the locks

 

IF EXISTS ( SELECT  Name

            FROM    tempdb..sysobjects

            WHERE   name LIKE '#Hold_sp_lock%' )

--If So Drop it

    DROP TABLE #Hold_sp_lock

GO

CREATE TABLE #Hold_sp_lock

    (

      spid INT,

      dbid INT,

      ObjId INT,

      IndId SMALLINT,

      Type VARCHAR(20),

      Resource VARCHAR(50),

      Mode VARCHAR(20),

      Status VARCHAR(20)

    )

INSERT  INTO #Hold_sp_lock

        EXEC sp_lock

SELECT  COUNT(spid) AS lock_count,

        SPID,

        Type,

        Cast(DB_NAME(DBID) as varchar(30)) as DBName,

        mode

FROM    #Hold_sp_lock

GROUP BY SPID,

        Type,

        DB_NAME(DBID),

        MODE

Order by lock_count desc,

        DBName,

        SPID,

        MODE

 

--Show any blocked or blocking processes

 

IF EXISTS ( SELECT  Name

            FROM    tempdb..sysobjects

            Where   name like '#Catch_SPID%' )

--If So Drop it

    DROP TABLE #Catch_SPID

GO

Create Table #Catch_SPID

    (

      bSPID int,

      BLK_Status char(10)

    )

GO

Insert  into #Catch_SPID

        Select Distinct

                SPID,

                'BLOCKED'

        from    master..sysprocesses

        where   blocked &lt;&gt; 0

        UNION

        Select Distinct

                blocked,

                'BLOCKING'

        from    master..sysprocesses

        where   blocked &lt;&gt; 0

 

DECLARE @tSPID int

DECLARE @blkst char(10)

SELECT TOP 1

        @tSPID = bSPID,

        @blkst = BLK_Status

from    #Catch_SPID

 

WHILE( @@ROWCOUNT &gt; 0 )

    BEGIN

 

        PRINT 'DBCC Results for SPID ' + Cast(@tSPID as varchar(5)) + '( '

            + rtrim(@blkst) + ' )'

        PRINT '-----------------------------------'

        PRINT ''

        DBCC INPUTBUFFER(@tSPID)

 

 

        SELECT TOP 1

                @tSPID = bSPID,

                @blkst = BLK_Status

        from    #Catch_SPID

        WHERE   bSPID &gt; @tSPID

        Order by bSPID

 

    END</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>MISC</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>sp_configure</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>MISC</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>sp_configure</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>-- Show the configuration values:

EXEC sp_configure;



-- Set it to show advanced configuration values:

USE master;
GO
EXEC sp_configure 'show advanced option', '1';

RECONFIGURE;
EXEC sp_configure;

-- Set it back to NOT show advanced configuration values:

USE master;
GO
EXEC sp_configure 'show advanced option', '0';

RECONFIGURE;
EXEC sp_configure;



\\\\\\\\\\\\\ Advanced settings\\\\\\\\\\\\\\\


name	minimum	maximum	config_value	run_value
access check cache bucket count	0	65536	0	0
access check cache quota	0	2147483647	0	0
Ad Hoc Distributed Queries	0	1	0	0
affinity I/O mask	-2147483648	2147483647	0	0
affinity mask	-2147483648	2147483647	0	0
affinity64 I/O mask	-2147483648	2147483647	0	0
affinity64 mask	-2147483648	2147483647	0	0
Agent XPs	0	1	1	1
allow updates	0	1	0	0
awe enabled	0	1	0	0
backup compression default	0	1	0	0
blocked process threshold (s)	0	86400	0	0
c2 audit mode	0	1	0	0
clr enabled	0	1	0	0
cost threshold for parallelism	0	32767	5	5
cross db ownership chaining	0	1	0	0
cursor threshold	-1	2147483647	-1	-1
Database Mail XPs	0	1	1	1
default full-text language	0	2147483647	1033	1033
default language	0	9999	0	0
default trace enabled	0	1	1	1
disallow results from triggers	0	1	0	0
filestream access level	0	2	0	0
fill factor (%)	0	100	0	0						--&lt;== Fill Factor
ft crawl bandwidth (max)	0	32767	100	100
ft crawl bandwidth (min)	0	32767	0	0
ft notify bandwidth (max)	0	32767	100	100
ft notify bandwidth (min)	0	32767	0	0
index create memory (KB)	704	2147483647	0	0
in-doubt xact resolution	0	2	0	0
lightweight pooling	0	1	0	0
locks	5000	2147483647	0	0
max degree of parallelism	0	1024	0	0
max full-text crawl range	0	256	4	4
max server memory (MB)	16	2147483647	2147483647	2147483647
max text repl size (B)	-1	2147483647	65536	65536
max worker threads	128	32767	0	0
media retention	0	365	0	0
min memory per query (KB)	512	2147483647	1024	1024
min server memory (MB)	0	2147483647	0	0
nested triggers	0	1	1	1
network packet size (B)	512	32767	4096	4096
Ole Automation Procedures	0	1	0	0
open objects	0	2147483647	0	0
optimize for ad hoc workloads	0	1	0	0
PH timeout (s)	1	3600	60	60
precompute rank	0	1	0	0
priority boost	0	1	0	0
query governor cost limit	0	2147483647	0	0
query wait (s)	-1	2147483647	-1	-1
recovery interval (min)	0	32767	0	0
remote access	0	1	1	1
remote admin connections	0	1	0	0
remote login timeout (s)	0	2147483647	20	20
remote proc trans	0	1	0	0
remote query timeout (s)	0	2147483647	600	600
Replication XPs	0	1	0	0
scan for startup procs	0	1	0	0
server trigger recursion	0	1	1	1
set working set size	0	1	0	0
show advanced options	0	1	1	1				--&lt;== Here is the option that is being manipulated
SMO and DMO XPs	0	1	1	1
SQL Mail XPs	0	1	0	0
transform noise words	0	1	0	0
two digit year cutoff	1753	9999	2049	2049
user connections	0	32767	0	0
user options	0	32767	0	0
xp_cmdshell	0	1	0	0</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>INFOPATH_Digital_Signature</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>RemoveDigitalSignatures</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>INFOPATH_Digital_Signature</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>RemoveDigitalSignatures</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>

'From: http://consultingblogs.emc.com/kiranbellala/archive/2011/10/10/infopath-digital-signature-tips-and-tricks.aspx

'A digital signature on InfoPath form is nothing but an xml node with encrypted data in it. 
'	Removing digital signature can be achieved by deleting the signature node. 
'	You can get a reference to the signatures on the form with SignedDataBlockCollection. 
'	A signature block can contain one or more signatures. 

' I tried removing just one of several Digital Signatures on a form, but then it says the remaining ones are corrupted

If Me.Signed Then


	Dim blocks As SignedDataBlockCollection = Me.SignedDataBlocks

	For Each block As SignedDataBlock In blocks


		Dim signs As SignatureCollection = block.Signatures

		If signs.Count &gt; 0 Then


			For Each sign As Signature In signs


				Dim nav As XPathNavigator = sign.SignatureBlockXmlNode

				nav.DeleteSelf()

				Me.CurrentView.ForceUpdate()


				MessageBox.Show("Signature removed")

			Next

		End If

	Next
End If

//////Example////////////////////////////////////////////////////////////////////

///STEPS
=&gt; Digital Signature {tab}
Allow users to digitally sign this section
	For section: Section_1
		Name: 
			Section_1_DS
		Fields to be signed: 
			/my:myFields/my:Section_1
		Allow only one Signature
		[x] Show Signatures in the section
		[x] When signed, make controls read-only
	For section: Section_2
	Name: 
		Section_2_DS
	Fields to be signed: 
		/my:myFields/my:Section_2
	All the signatures are independent (co-sign)
	[ ] Show Signatures in the section
	[x] When signed, make controls read-only

///DATA entered:

Signed 
	Signed as: 
		gg-1 
		gg-2 and gg-3
	Purpose: 
		Purpose-1 
		Purpose-2 and purpose-3
	Used certificates
		Glenn garson
		Ggarson_02_04_20133 and glenn garson


//////Signature Model
Dim blocks As SignedDataBlockCollection = Me.SignedDataBlocks
	Blocks.Count =&gt; the number of signed blocks {Counter}
	Blocks.Item =&gt; could use to identify them
For Each block As SignedDataBlock In blocks
	block.SignatureContainer.LocalName = "signatures2"    '&lt;== This  is what I see in the signature fields
	block.Name = "Section_1_DS"  '&lt;== This is the name I gave it when I said I wanted a digital signature
	block.XPath.Expression = "/my:myFields/my:Section_1"   '&lt;== This is the field/group that is signed
Dim signs As SignatureCollection = block.Signatures
	For Each sign As Signature In signs
		sign.Comment = "Purpose-1"
		sign.Certificate.ExpirationDate = "5/6/2014"
		sign.Certificate.IssuedBy = "CCWNC-CA"
		sign.Certificate.IssuedTo = "Glenn Garson"
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>INFOPATH_Digital_Signature</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>ValidateBeforeAllowingToSign</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>INFOPATH_Digital_Signature</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>ValidateBeforeAllowingToSign</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>       Public Sub FormEvents_Sign(ByVal sender As Object, ByVal e As SignEventArgs)
            ' This event handler will run only in fully trusted form templates.

            If IsValid_NotHidden_Detail_Fields() Then
                '======================================
                Dim thisSignature As Signature = e.SignedDataBlock.Signatures.CreateSignature

                ' To add other pieces of information to sign, modifying the
                ' signature template returned by
                ' thisSignature.SignatureBlockXmlNode.
                ' Write your code here.

                thisSignature.Sign()

                '======================================
            Else

                MessageBox.Show("Click the button [Check information for problems before signing] Before trying to sign")
            End If
            e.SignatureWizard = False

        End Sub



      Function IsValid_NotHidden_Detail_Fields() As Boolean

            Dim i_0_is_Valid As Integer = 0
            _sValidationMessage_NotHiddenDetailFields = ""

            Try

                Dim mainDS As XPathNavigator = MainDataSource.CreateNavigator()

                'input Values
                '/////////////////////////////

                Dim root As XPathNavigator = MainDataSource.CreateNavigator()
                Dim rows As XPathNodeIterator = root.Select("/my:myFields/my:EmployeeSection/my:F0001_Detail", NamespaceManager)
                Dim iRowCounter As Integer = 0
                While rows.MoveNext()
                    iRowCounter = iRowCounter + 1

                    Dim row As XPathNavigator = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Detail[" &amp; CStr(iRowCounter) &amp; "]", NamespaceManager)


                    Dim DateOfTrip As String = fn_GetRepeatingTableFieldValue(row, "my:DateOfTrip")
                    Dim Begin_Odometer As String = fn_GetRepeatingTableFieldValue(row, "my:Begin_Odometer")
                    Dim End_Odometer As String = fn_GetRepeatingTableFieldValue(row, "my:End_Odometer")
                    Dim Area_Visited As String = fn_GetRepeatingTableFieldValue(row, "my:Area_Visited")
                    Dim Hours As String = fn_GetRepeatingTableFieldValue(row, "my:Hours")
                    Dim Project_Name As String = fn_GetRepeatingTableFieldValue(row, "my:Project_Name")

                    If (DateOfTrip.Length &lt; 1) Then
                        i_0_is_Valid = i_0_is_Valid + 1
                        _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {The DateOfTrip Looks like it is missing for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                    End If

                    If Project_Name.Contains("CHIPRAA") Then

                        If (Hours.Trim = "0") Then

                            If ((Begin_Odometer.Length &lt; 1) Or (End_Odometer.Length &lt; 1)) Then

                                i_0_is_Valid = i_0_is_Valid + 1
                                _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {When there are Zero hours, there must be mileage: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf

                            End If
                        Else 'Hours are greater than 0

                            If ((Begin_Odometer.Length &lt; 1) &lt;&gt; (End_Odometer.Length &lt; 1)) Then  'Check to see if they are both missing, or both there
                                i_0_is_Valid = i_0_is_Valid + 1
                                _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {One of your Odomoter readings is missing: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                            End If

                        End If

                    Else    'CCWNC or CHACC

                        If (Hours.Trim &lt;&gt; "0") Then
                            i_0_is_Valid = i_0_is_Valid + 1
                            _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {You should only have Zero (0) hours for non-CHIPRA activities " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                        End If

                        If (Begin_Odometer.Length &lt; 1) Then
                            i_0_is_Valid = i_0_is_Valid + 1
                            _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {The Begin_Odometer Looks like it is missing for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                        End If

                        If (End_Odometer.Length &lt; 1) Then
                            i_0_is_Valid = i_0_is_Valid + 1
                            _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {The End_Odometer Looks like it is missing for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                        End If

                    End If

                    If (End_Odometer.Length &gt; 0) And (Begin_Odometer.Length &gt; 0) Then
                        'Every time there is mileage check to be sure that end &gt; begining
                        If (CInt(End_Odometer) &lt; CInt(Begin_Odometer)) Then
                            i_0_is_Valid = i_0_is_Valid + 1
                            _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {Your ending odometer has to be greater than your begining odometer, for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                        End If
                    End If


                    'If (CInt(Begin_Odometer) &lt; CInt(End_Odometer)) Then
                    '    i_0_is_Valid = i_0_is_Valid + 1
                    '    _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {Your ending odometer has to be greater than your begining odometer: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                    'End If

                    'If (Begin_Odometer.Length &lt; 1) Then
                    '    i_0_is_Valid = i_0_is_Valid + 1
                    '    _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {The Begin_Odometer Looks like it is missing for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                    'End If

                    'If (End_Odometer.Length &lt; 1) Then
                    '    i_0_is_Valid = i_0_is_Valid + 1
                    '    _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {The End_Odometer Looks like it is missing for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                    'End If

                    If (Area_Visited.Length &lt; 1) Then
                        i_0_is_Valid = i_0_is_Valid + 1
                        _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {The Area_Visited Looks like it is missing for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                    End If


                End While

                '//////////////////////////////////



                If i_0_is_Valid &gt; 0 Then
                    _sValidationMessage_NotHiddenDetailFields = "The Detail_Fields looks like they have some problems: " &amp; vbCrLf &amp; vbCrLf &amp; _sValidationMessage_NotHiddenDetailFields
                    Return False
                Else
                    Return True
                End If

            Catch ex As NullReferenceException

                _sValidationMessage_NotHiddenDetailFields = "The Detail_Fields are missing some information"
                Return False

            Catch ex As Exception

                MessageBox.Show(ex.InnerException.ToString)
            End Try

        End Function
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>SQLBulkCopy</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>CommandString</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>SQLBulkCopy</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>CommandString</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'1] Command String
'2] Example function


///////////////'1] Command String
Think of each excel sheet As a MS SQL table from which data is to be fetched. Thus, complete excel file As a database.



' a) In order to read the excel sheet, “SELECT” command is used. 
'	Either you may want to read the complete excel sheet Or you may be interested in reading just a block of data. 
'	Both scenarios are supported And this is what us different from defining the MS SQL “Select” query.
'	Range (block of data) is defined using A2:R5 format.

'Below is the sample command string to read the complete data in an excel sheet:

Select * from [NameOfExcelSheet$]

'Note: This may read empty rows, columns as well if there is any hidden data or there are empty rows in b/w the filled data.


'b) How to specify range to read a block of data from excel sheet?

'Below is the sample command string to read the complete data in an excel sheet:

Select * from [NameOfExcelSheet$A1:E5]

'Another way to specify range is:

Select * from [NameOfExcelSheet$A1:E]

'it will read all rows starting from row# ‘1’ and 5 columns from column# ‘A’ to ‘E’










///////////////'2] Example function

   Friend Function fn_ReturnArrayOfJustTheData_FromExcelWorkSheet_OfJustOneColumn_With_A_Header(sFilePathAndName As String, sSheetName As String, iZeroBasedColumnNumber_ToUseFromExcelSelection As Integer, Optional iNoOfRowsToGet As Integer = 0) As Object()
        Const k_SubName As String = "fn_ReturnArrayOfJustTheData_FromExcelWorkSheet_OfJustOneColumn_With_A_Header"

        'requires: Imports System.Data.SqlClient

        'Dim arrStrX As String()
        Dim sSelectStatement As String
        Dim sExcelFileConnectionString As String
        Dim sNameOfInternalDataSetTable As String
        Dim arData() As Object
        Dim misValue As Object = System.Reflection.Missing.Value



        sSheetName = sSheetName &amp; "$"
        sSelectStatement = "select * from [" &amp; sSheetName &amp; "]"
        sFilePathAndName = "'" &amp; sFilePathAndName &amp; "'"
        'sExcelFileConnectionString = "provider=Microsoft.Jet.OLEDB.4.0;Data Source=" &amp; sFilePathAndName &amp; ";Extended Properties=Excel 8.0;"
        'sExcelFileConnectionString = "provider=Microsoft.Jet.OLEDB.4.0;Data Source=" &amp; sFilePathAndName &amp; ";Extended Properties=Excel 8.0;IMEX=1;HDR=NO;TypeGuessRows=0;ImportMixedTypes=Text;"
        'sExcelFileConnectionString = "provider=Microsoft.Jet.OLEDB.4.0;Data Source=" &amp; sFilePathAndName &amp; ";Extended Properties=Excel 8.0;ImportMixedTypes=Text;"

        '============ACE======================
        'sExcelFileConnectionString = "provider=Microsoft.ACE.OLEDB.12.0;;Data Source=" &amp; sFilePathAndName &amp; ";Extended Properties=Excel 14.0;IMEX=1;HDR=NO;TypeGuessRows=0;ImportMixedTypes=Text;"
        sExcelFileConnectionString = "provider=Microsoft.ACE.OLEDB.12.0;Data Source=" &amp; sFilePathAndName &amp; ";Extended Properties=""Excel 12.0;"""

        Try

            Dim connX As System.Data.OleDb.OleDbConnection
            Dim dsX As System.Data.DataSet
            Dim OleDataAdaptX As System.Data.OleDb.OleDbDataAdapter

            connX = New System.Data.OleDb.OleDbConnection(sExcelFileConnectionString)

            OleDataAdaptX = New System.Data.OleDb.OleDbDataAdapter(sSelectStatement, connX)


            sNameOfInternalDataSetTable = "InternalTableName"
            OleDataAdaptX.TableMappings.Add("Table", sNameOfInternalDataSetTable)
            dsX = New System.Data.DataSet
            OleDataAdaptX.Fill(dsX)
            'OleDataAdaptX.Fill()
            '===============================

            ReDim arData((dsX.Tables(0).Rows.Count) - 1)

            If iNoOfRowsToGet = 0 Then  'This is the default situation where the Number of rows to get is not given by the calling routine

                For intCounter As Integer = 0 To dsX.Tables(0).Rows.Count - 1

                    arData(intCounter) = dsX.Tables(0).Rows(intCounter).Item(iZeroBasedColumnNumber_ToUseFromExcelSelection).ToString

                Next
            Else  'This is the situation where the Number of rows to get is  given by the calling routine

                For intCounter As Integer = 0 To iNoOfRowsToGet - 1

                    arData(intCounter) = dsX.Tables(0).Rows(intCounter).Item(iZeroBasedColumnNumber_ToUseFromExcelSelection).ToString

                Next

            End If
            'Debug.Print("START - List of Column Headers EXPECTED ===============================")
            'For intCounter As Integer = 0 To dsX.Tables(0).Rows.Count
            '    Debug.Print(CStr(intCounter) &amp; "] " &amp; arData(intCounter))
            'Next
            'Debug.Print("END - List of Column Headers EXPECTED ===============================")
            connX.Close()
        Catch
            'error handling goes here
            UnhandledExceptionHandler(k_SubName, k_sModule)
        End Try

        Return arData


    End Function
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>EXCEL</Category>
        <Language>VB.NET</Language>
        <Public>false</Public>
        <Name>SQL_CommandString_READ_WRITE_CREATE_DROP_UPDATE</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>EXCEL</Category>
          <Language>VB.NET</Language>
          <Public>false</Public>
          <Name>SQL_CommandString_READ_WRITE_CREATE_DROP_UPDATE</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>'FROM:	http://yoursandmyideas.wordpress.com/2011/02/05/how-to-read-or-write-excel-file-using-ace-oledb-data-provider/
'1] Command String - READ
'2] Command String - WRITE
'3] Command String - CREATE Excel WorkSheet
'4] Command String - DROP Excel WorkSheet
'5] Command String - UPDATE

see the notes in SQLBulkCopy for OLEDB And connections strings for these commands

///////////////'1] Command String   - READ
Think of each excel sheet As a MS SQL table from which data is to be fetched. Thus, complete excel file As a database.



' a) In order to read the excel sheet, “SELECT” command is used. 
'	Either you may want to read the complete excel sheet Or you may be interested in reading just a block of data. 
'	Both scenarios are supported And this is what us different from defining the MS SQL “Select” query.
'	Range (block of data) is defined using A2:R5 format.

'Below is the sample command string to read the complete data in an excel sheet:

Select * from [NameOfExcelSheet$]

'Note: This may read empty rows, columns as well if there is any hidden data or there are empty rows in b/w the filled data.


'b) How to specify range to read a block of data from excel sheet?

'Below is the sample command string to read the complete data in an excel sheet:

Select * from [NameOfExcelSheet$A1:E5]

'Another way to specify range is:

Select * from [NameOfExcelSheet$A1:E]

'it will read all rows starting from row# ‘1’ and 5 columns from column# ‘A’ to ‘E’

///////////////'2] Command String   - WRITE

'This also corresponds to DML queries (INSERT,UPDATE and DELETE) in MS SQL.
'You can write:

INSERT INTO [NameOfExcelSheet] VALUES('firsttextcol', 2, '4/11/2009');
'[I assume First Column is char field, 2nd col is integer, 3rd is Date]

DELETE FROM [NameOfExcelSheet] Where secondintcol=2;

UPDATE [NameOfExcelSheet] SET secondintcol = 3 where firsttextcol = ‘firsttextcol’;

'As in MS SQL, you can use [] (Square brackets) to allow spaces within column names and table names.

/////////////////Cannot expand named range///////////////
'When you specify a worksheet as your source, 
	'the provider adds new records below existing records in the worksheet As space allows. 
	'When you specify a range (named Or unnamed), Jet also adds new records below the existing records in the range As space allows. 
	'However, if you requery on the original range, the resulting recordset does Not include the newly added records outside the range. 
	'Using MDAC you cannot add new rows beyond the defined limits of the range, 
	'otherwise you will receive Exception: “Cannot expand named range”

'e.g.: i am able to insert one record into excel sheet. when i try to enter second record it fails an errors pop ups saying ” Cannot expand named range.”





//////////////'3] Command String - CREATE Excel WorkSheet

'Simple. Use

Create table [NameOfExcelSheet] ()

'For e.g. 

Create table [myTableName] (col1 int, col2 char(20))

//////////////'4] Command String - DROP Excel WorkSheet

To drop an excel worksheet, just use

Drop table [NameOfExcelSheet]

'If this is the last worksheet, it will not delete the workbook file. You need to do it yourself.

/////////////'5] Command String - UPDATE
'basically you are targetting a set of rows. 
'Since ‘where’ is supported, you can specify conditions As follows: 

update set colName = ” where ‘colName’ &gt;= ‘LowerBoundValue’ And ‘colName’ &lt;= 'UpperBoundValue'. 

'Think of how may a Sql query look like And then transform it As per it's syntax.



</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>INFOPATH_Sample_Forms</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>FORM_0001_MileageReimbursement</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>INFOPATH_Sample_Forms</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>FORM_0001_MileageReimbursement</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Imports Microsoft.Office.InfoPath
Imports System
Imports System.Windows.Forms
Imports System.Xml
Imports System.Xml.XPath
Imports mshtml
Imports System.Data.OleDb       '&lt;== had to add reference for System.Data to project first
Imports System.Diagnostics      'For debug
Imports Microsoft.VisualBasic   'required for: IsNumeric
Imports System.Object           'for Math.Round
Imports system.Collections  ' Required for the Environment Variable

Namespace FORM_0001_v1
    Public Class FormCode

        Private dPaymentPerMile_UnderOneHundredMiles As Decimal = 0.565R
        Private dPaymentPerMile_OverOneHundredMiles As Decimal = 0.3R

        Private _sValidationMessage_HiddenHeaderFields As String = ""
        Private _sValidationMessage_NotHiddenHeaderFields As String = ""
        Private _sValidationMessage_NotHiddenDetailFields As String = ""
        '
        'Private _sAccountingEMailAddress As String = "ggarson@ccwnc.org"
        'Private _sAccountingEMailAddress As String = "briesen@ccwnc.org"

        Private Sub InternalStartup(ByVal sender As Object, ByVal e As EventArgs) Handles Me.Startup

            AddHandler DirectCast(EventManager.ControlEvents("btn_SubmitToSupervisor"), ButtonEvent).Clicked, AddressOf btn_SubmitToSupervisor_Clicked
            AddHandler EventManager.XmlEvents("/my:myFields/my:EmployeeSection/my:F0001_Detail/my:Begin_Odometer").Changed, AddressOf Begin_Odometer_Changed
            AddHandler EventManager.XmlEvents("/my:myFields/my:EmployeeSection/my:F0001_Detail/my:End_Odometer").Changed, AddressOf End_Odometer_Changed
            AddHandler DirectCast(EventManager.ControlEvents("btn_SubmitToAccounting"), ButtonEvent).Clicked, AddressOf btn_SubmitToAccounting_Clicked
            AddHandler EventManager.FormEvents.Loading, AddressOf FormEvents_Loading
            AddHandler DirectCast(EventManager.ControlEvents("btn_ReturnToEmployeeWithComment"), ButtonEvent).Clicked, AddressOf btn_ReturnToEmployeeWithComment_Clicked
            AddHandler EventManager.XmlEvents("/my:myFields/my:Accountant_Section/my:F001_AccontingUse/my:OfficeUse_Detail/my:PercentOfTotal").Changed, AddressOf PercentOfTotal_Changed
            AddHandler DirectCast(EventManager.ControlEvents("btn_PrintForm"), ButtonEvent).Clicked, AddressOf btn_PrintForm_Clicked
            AddHandler DirectCast(EventManager.ControlEvents("btn_CloseForm"), ButtonEvent).Clicked, AddressOf btn_CloseForm_Clicked
            AddHandler DirectCast(EventManager.ControlEvents("btn_ApprovedByAccounting"), ButtonEvent).Clicked, AddressOf btn_ApprovedByAccounting_Clicked
            AddHandler DirectCast(EventManager.ControlEvents("btn_ReturnToEmployee_ByAccountant_WithComment"), ButtonEvent).Clicked, AddressOf btn_ReturnToEmployee_ByAccountant_WithComment_Clicked
            AddHandler EventManager.XmlEvents("/my:myFields/my:EmployeeSection/my:F0001_Detail/my:Project_Name").Changed, AddressOf Project_Name_Changed

            AddHandler DirectCast(EventManager.ControlEvents("btn_RemoveAllDigitalSignatures"), ButtonEvent).Clicked, AddressOf btn_RemoveAllDigitalSignatures_Clicked

            AddHandler DirectCast(EventManager.ControlEvents("btn_Valildate_Employee_Header_and_Details"), ButtonEvent).Clicked, AddressOf btn_Valildate_Employee_Header_and_Details_Clicked
            AddHandler EventManager.FormEvents.Sign, AddressOf FormEvents_Sign
            AddHandler EventManager.XmlEvents("/my:myFields/my:EmployeeSection/my:F0001_Detail/my:Hours").Changed, AddressOf Hours_Changed
        End Sub


#Region "Subs ======================================================"

        Sub AutoSaveToDeskTop()
            Try

                Dim sFileName As String = fn_GetFormFieldValue("/my:myFields/my:UniqueFormName") &amp; ".xml"
                Dim sFileUrl As String = System.Environment.GetEnvironmentVariable("UserProfile") &amp; "\Desktop\" &amp; sFileName
                Me.SaveAs(sFileUrl)

            Catch ex As Exception
                MessageBox.Show("Sub: AutoSaveToDeskTop " &amp; ex.ToString)
            End Try

        End Sub


        Sub Populate_AccountingEmailAddress()


            Dim conn As New OleDbConnection("Provider=SQLOLEDB;Data Source=SQL-SERVER\PRODUCTION;Initial Catalog=DB5_FORMs;Integrated Security=SSPI;")

            Try

                Dim mainDS As XPathNavigator = MainDataSource.CreateNavigator()

                Dim sT01_PK As String = "1" 'This is the PK value in the [T01_Role] table
                Dim fieldToPopulateFromSelectStatement As XPathNavigator = mainDS.SelectSingleNode("/my:myFields/my:emailAddress_Accounting", NamespaceManager)

                Dim sQuery As String = "select eMail from dbo.prj_0024_vw_0002_Employee_Form_RoleAssignments WHERE [T01_PK] = " &amp; sT01_PK
                '===================================================

                Dim cmd As New OleDbCommand(sQuery, conn)

                conn.Open()
                Dim reader As OleDbDataReader = cmd.ExecuteReader()

                'Dim row As Integer = 0
                While reader.Read()
                    Dim sEmail As String = String.Empty


                    'There would one IF/THEN statement for each field:
                    If Not reader.IsDBNull(0) Then                          '&lt;== Test each field for NULL before proceeding, Zero based fields
                        'sEmail = reader.GetInt32(0).ToString()             'For integer
                        sEmail = reader.GetString(0)                        'For String
                        fieldToPopulateFromSelectStatement.SetValue(sEmail) 'Then populate the field
                    End If

                    'row = row + 1
                End While
                reader.Close()
            Catch ex As Exception

                MessageBox.Show(ex.Message, "Populate_AccountingEmailAddress: An error occurred", MessageBoxButtons.OK, MessageBoxIcon.Error)

            Finally

                conn.Close()

            End Try

        End Sub

        Sub Populate_AmountToPay(ByVal eSite As XPathNavigator)
            Try

                Dim rows As XPathNavigator = eSite
                Dim sBegin As String = ""
                Dim sEnd As String = ""
                Dim sProject As String = ""

                'Dim sDestinationCell As String = "my:Amount"
                Dim sDestinationCell_CCWNC As String = "my:CCWNC_Amount"
                Dim sDestinationCell_PROJ As String = "my:Project_Amount"

                sBegin = fn_GetRepeatingTableFieldValue(eSite, "my:Begin_Odometer")
                sEnd = fn_GetRepeatingTableFieldValue(eSite, "my:End_Odometer")
                sProject = fn_GetRepeatingTableFieldValue(eSite, "my:Project_Name")
                '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
                If (sBegin.Length &gt; 0) And (sEnd.Length &gt; 0) And (sProject = "n/a") Then
                    '
                    Dim dBegin As Decimal = Convert.ToDecimal(sBegin)
                    Dim dEnd As Decimal = Convert.ToDecimal(sEnd)
                    SetRepeatingTableFieldValue(eSite, sDestinationCell_CCWNC, CStr(fn_AmountToPay(dBegin, dEnd)))
                    SetRepeatingTableFieldValue(eSite, sDestinationCell_PROJ, "0")
                Else
                    If (sBegin.Length &gt; 0) And (sEnd.Length &gt; 0) And (sProject &lt;&gt; "n/a") Then

                        Dim dBegin As Decimal = Convert.ToDecimal(sBegin)
                        Dim dEnd As Decimal = Convert.ToDecimal(sEnd)
                        SetRepeatingTableFieldValue(eSite, sDestinationCell_PROJ, CStr(fn_AmountToPay(dBegin, dEnd)))
                        SetRepeatingTableFieldValue(eSite, sDestinationCell_CCWNC, "0")
                    Else
                        SetRepeatingTableFieldValue(eSite, sDestinationCell_PROJ, "0")
                        SetRepeatingTableFieldValue(eSite, sDestinationCell_CCWNC, "0")
                    End If
                End If
                '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
            Catch ex As Exception
                MessageBox.Show("Sub: Populate_AmountToPay " &amp; ex.ToString)
            End Try


        End Sub

        Sub Populate_MilesDriven(ByVal eSite As XPathNavigator)
            Try
                Dim sBegin As String = ""
                Dim sEnd As String = ""
                Dim sProject As String = ""


                '==================================


                Dim rows As XPathNavigator = eSite
                Dim sDestinationCell_CCWNC As String = "my:CCWNC_MilesDriven"
                Dim sDestinationCell_PROJ As String = "my:Project_MilesDriven"

                sBegin = fn_GetRepeatingTableFieldValue(eSite, "my:Begin_Odometer")
                sEnd = fn_GetRepeatingTableFieldValue(eSite, "my:End_Odometer")
                sProject = fn_GetRepeatingTableFieldValue(eSite, "my:Project_Name")

                If (sBegin.Length &gt; 0) And (sEnd.Length &gt; 0) And (sProject = "n/a") Then
                    'If (sBegin.Length &gt; 0) And (sEnd.Length &gt; 0) And (sProject = "CCWNC") Then

                    Dim iBegin As Integer = CInt(sBegin)
                    Dim iEnd As Integer = CInt(sEnd)
                    SetRepeatingTableFieldValue(eSite, sDestinationCell_CCWNC, CStr(fn_MilesDriven(iBegin, iEnd)))
                    SetRepeatingTableFieldValue(eSite, sDestinationCell_PROJ, "0")
                Else
                    If (sBegin.Length &gt; 0) And (sEnd.Length &gt; 0) And (sProject &lt;&gt; "n/a") Then
                        'If (sBegin.Length &gt; 0) And (sEnd.Length &gt; 0) And (sProject &lt;&gt; "CCWNC") Then

                        Dim iBegin As Integer = CInt(sBegin)
                        Dim iEnd As Integer = CInt(sEnd)
                        SetRepeatingTableFieldValue(eSite, sDestinationCell_PROJ, CStr(fn_MilesDriven(iBegin, iEnd)))
                        SetRepeatingTableFieldValue(eSite, sDestinationCell_CCWNC, "0")
                    Else
                        SetRepeatingTableFieldValue(eSite, sDestinationCell_PROJ, "0")
                        SetRepeatingTableFieldValue(eSite, sDestinationCell_CCWNC, "0")
                    End If
                End If

                '======================================
            Catch ex As Exception
                MessageBox.Show("Sub: Populate_MilesDriven " &amp; ex.ToString)
            End Try
        End Sub

        Sub Populate_BusinessRowAmount(ByVal eSite As XPathNavigator)
            Try
                Dim sPercentOfTotal As String = ""
                Dim sGrandTotal As String = ""

                '==================================

                Dim rows As XPathNavigator = eSite
                Dim sDestinationCell As String = "my:LineAmount"

                sPercentOfTotal = fn_GetRepeatingTableFieldValue(eSite, "my:PercentOfTotal")
                sGrandTotal = fn_GetFormFieldValue("/my:myFields/my:Accountant_Section/my:F001_AccontingUse/my:OfficeUse_Header/my:Invoice_Amount")

                '
                'sTotal = fn_GetFormFieldValue("/my:myFields/my:Accountant_Section/my:F001_AccontingUse/my:OfficeUse_Header/my:Invoice_Amount")

                If (sPercentOfTotal.Length &gt; 0) And (sGrandTotal.Length &gt; 0) Then

                    Dim dPercentOfTotal As Decimal = CDec(sPercentOfTotal)
                    Dim dTotal As Decimal = CDec(sGrandTotal)
                    SetRepeatingTableFieldValue(eSite, sDestinationCell, CStr(fn_BusinessRowAmount(dPercentOfTotal, dTotal)))

                Else
                    SetRepeatingTableFieldValue(eSite, sDestinationCell, "")
                End If

                '======================================
            Catch ex As Exception
                MessageBox.Show("Sub: Populate_BusinessRowAmount " &amp; ex.ToString)
            End Try

        End Sub

        Sub OLD_Populate_AmountToPay(ByVal eSite As XPathNavigator)
            Try

                Dim rows As XPathNavigator = eSite
                Dim sBegin As String = ""
                Dim sEnd As String = ""
                Dim sProject As String = ""

                'Dim sDestinationCell As String = "my:Amount"
                Dim sDestinationCell_CCWNC As String = "my:CCWNC_Amount"
                Dim sDestinationCell_PROJ As String = "my:Project_Amount"

                sBegin = fn_GetRepeatingTableFieldValue(eSite, "my:Begin_Odometer")
                sEnd = fn_GetRepeatingTableFieldValue(eSite, "my:End_Odometer")
                sProject = fn_GetRepeatingTableFieldValue(eSite, "my:Project_Name")
                '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
                If (sBegin.Length &gt; 0) And (sEnd.Length &gt; 0) And (sProject = "CCWNC") Then
                    'convert.ToDecimal(
                    Dim iBegin As Integer = CInt(sBegin)
                    Dim iEnd As Integer = CInt(sEnd)
                    SetRepeatingTableFieldValue(eSite, sDestinationCell_CCWNC, CStr(fn_AmountToPay(iBegin, iEnd)))
                    SetRepeatingTableFieldValue(eSite, sDestinationCell_PROJ, "0")
                Else
                    If (sBegin.Length &gt; 0) And (sEnd.Length &gt; 0) And (sProject &lt;&gt; "CCWNC") Then

                        Dim iBegin As Integer = CInt(sBegin)
                        Dim iEnd As Integer = CInt(sEnd)
                        SetRepeatingTableFieldValue(eSite, sDestinationCell_PROJ, CStr(fn_AmountToPay(iBegin, iEnd)))
                        SetRepeatingTableFieldValue(eSite, sDestinationCell_CCWNC, "0")
                    Else
                        SetRepeatingTableFieldValue(eSite, sDestinationCell_PROJ, "0")
                        SetRepeatingTableFieldValue(eSite, sDestinationCell_CCWNC, "0")
                    End If
                End If
                '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
            Catch ex As Exception
                MessageBox.Show("Sub: Populate_AmountToPay " &amp; ex.ToString)
            End Try


        End Sub

        Sub RemoveAllDigitalSignatures()
            Try


                If Me.Signed Then
                    Dim blocks As SignedDataBlockCollection = Me.SignedDataBlocks

                    For Each block As SignedDataBlock In blocks
                        Dim signs As SignatureCollection = block.Signatures

                        If signs.Count &gt; 0 Then

                            For Each sign As Signature In signs

                                Dim nav As XPathNavigator = sign.SignatureBlockXmlNode
                                nav.DeleteSelf()
                                Me.CurrentView.ForceUpdate()
                                'MessageBox.Show("Signature removed")

                            Next

                        End If

                    Next
                End If
            Catch ex As Exception
                MessageBox.Show("Sub: RemoveAllDigitalSignatures " &amp; ex.ToString)
            End Try
        End Sub

#End Region 'End: Subs"

#Region "Events ===================================================="

        Public Sub Hours_Changed(ByVal sender As Object, ByVal e As XmlEventArgs)
            ' Write your code here to change the main data source.
        End Sub

        Public Sub FormEvents_Sign(ByVal sender As Object, ByVal e As SignEventArgs)
            ' This event handler will run only in fully trusted form templates.

            If IsValid_NotHidden_Detail_Fields() Then
                '======================================
                Dim thisSignature As Signature = e.SignedDataBlock.Signatures.CreateSignature

                ' To add other pieces of information to sign, modifying the
                ' signature template returned by
                ' thisSignature.SignatureBlockXmlNode.
                ' Write your code here.

                thisSignature.Sign()

                '======================================
            Else

                MessageBox.Show("Click the button [Check information for problems before signing] Before trying to sign")
            End If
            e.SignatureWizard = False

        End Sub

        Public Sub PercentOfTotal_Changed(ByVal sender As Object, ByVal e As XmlEventArgs)
            Populate_BusinessRowAmount(e.Site.SelectSingleNode("../.", NamespaceManager)) 'The 'Site' referes to the 'PercentOfTotal' cell, "../." means go up one level and make the root there.
        End Sub

        Public Sub FormEvents_Loading(ByVal sender As Object, ByVal e As LoadingEventArgs)

            'Create an XPathNavigator object for the main DOM
            Dim xnDocument As XPathNavigator = Me.MainDataSource.CreateNavigator()

            ''Create an XPathNavigator object for field1 - the check box for switching the View
            'Dim xnDefaultView As XPathNavigator = xnDocument.SelectSingleNode("/my:myFields/my:field1", Me.NamespaceManager)

            Dim bThisIsTheFirstTimeThisFormHasBeenOpened As XPathNavigator = xnDocument.SelectSingleNode("/my:myFields/my:bThisIsTheFirstTimeThisFormHasBeenOpened", Me.NamespaceManager)
            Dim bSubmittedByEmployee As XPathNavigator = xnDocument.SelectSingleNode("/my:myFields/my:bSubmittedByEmployee", Me.NamespaceManager)
            Dim bSubmittedBySupervisor As XPathNavigator = xnDocument.SelectSingleNode("/my:myFields/my:bSubmittedBySupervisor", Me.NamespaceManager)
            Dim bReturnedToEmployeeWithComments As XPathNavigator = xnDocument.SelectSingleNode("/my:myFields/my:SuperVisor_Section/my:bReturnedToEmployeeWithComments", Me.NamespaceManager)


            e.SetDefaultView("0_DEV")

            If (bSubmittedByEmployee.Value = False) Then
                e.SetDefaultView("1_User")
            End If

            If (bSubmittedBySupervisor.Value = False) And (bSubmittedByEmployee.Value = True) Then
                e.SetDefaultView("2_Supervisor")
            End If

            If (bSubmittedBySupervisor.Value = True) And (bSubmittedByEmployee.Value = True) Then
                If (bReturnedToEmployeeWithComments.Value = True) Then
                    e.SetDefaultView("1_User")
                Else
                    e.SetDefaultView("3_Accounting")
                End If
            End If


            Populate_AccountingEmailAddress()

            If bThisIsTheFirstTimeThisFormHasBeenOpened.Value = "true" Then
                '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
                ' Set the name of the form:
                Dim sDestinationCell As String = "/my:myFields/my:UniqueFormName"
                Dim sX As String = Me.User.UserName &amp; "_" &amp; getCurrentDateTimeString_yyyy_MM_dd_HH_mm_ss_ff()
                SetFormFieldValue(sDestinationCell, sX)
                ' Indicate that the form is no longer a new form in the employee submit button
                'sDestinationCell = "/my:myFields/my:bThisIsTheFirstTimeThisFormHasBeenOpened"
                'SetFormFieldValue(sDestinationCell, "false")
                '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
            End If

        End Sub

        Public Sub End_Odometer_Changed(ByVal sender As Object, ByVal e As XmlEventArgs)
            Populate_MilesDriven(e.Site.SelectSingleNode("../.", NamespaceManager)) 'The 'Site' referes to the 'End_Odometer' cell, "../." means go up one level and make the root there.
            Populate_AmountToPay(e.Site.SelectSingleNode("../.", NamespaceManager))
        End Sub

        Public Sub Begin_Odometer_Changed(ByVal sender As Object, ByVal e As XmlEventArgs)
            Populate_MilesDriven(e.Site.SelectSingleNode("../.", NamespaceManager)) 'The 'Site' referes to the 'End_Odometer' cell, "../." means go up one level and make the root there.
            Populate_AmountToPay(e.Site.SelectSingleNode("../.", NamespaceManager))
        End Sub

        Public Sub Project_Name_Changed(ByVal sender As Object, ByVal e As XmlEventArgs)
            Populate_MilesDriven(e.Site.SelectSingleNode("../.", NamespaceManager)) 'The 'Site' referes to the 'End_Odometer' cell, "../." means go up one level and make the root there.
            Populate_AmountToPay(e.Site.SelectSingleNode("../.", NamespaceManager))
        End Sub
#End Region 'End: Events"

#Region "Buttons ==================================================="

        Public Sub btn_Valildate_Employee_Header_and_Details_Clicked(ByVal sender As Object, ByVal e As ClickedEventArgs)
            Try

                '1] Set the value
                Dim bSubmittedByEmployee As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:bSubmittedByEmployee", NamespaceManager)

                'COMMENT this out except when debugging the hidden fields
                'If IsValid_NotHidden_Detail_Fields() And IsValid_NotHidden_Header_Fields() And IsValid_Hidden_Header_Fields() Then    'Checks that unseen fields are valid

                If IsValid_NotHidden_Detail_Fields() And IsValid_NotHidden_Header_Fields() Then    'Checks that unseen fields are valid

                    If bSubmittedByEmployee.Value = False Then  'Checks to make sure this has not been submitted already

                        If Me.Errors.Count &gt; 0 Then
                            PrintErrors("btn_Valildate_Employee_Header_and_Details_Clicked")
                        End If

                    Else
                        MessageBox.Show("This form has already been submitted to the supervisor, It can not be re-submitted!") 'Since the button should not be in any views after the employee's view, this is really not needed.
                    End If
                    MessageBox.Show("All Valid")
                Else

                    If IsValid_NotHidden_Detail_Fields() = False Then
                        MessageBox.Show(_sValidationMessage_NotHiddenDetailFields)
                    End If

                    If IsValid_NotHidden_Header_Fields() = False Then
                        MessageBox.Show(_sValidationMessage_NotHiddenHeaderFields)
                    End If

                    If IsValid_Hidden_Header_Fields() = False Then
                        Debug.Print((_sValidationMessage_HiddenHeaderFields))
                        'COMMENT this out except when debugging the hidden fields
                        'MessageBox.Show(_sValidationMessage_HiddenHeaderFields)
                    End If

                End If


            Catch ex As Exception
                MessageBox.Show("Sub: btn_Valildate_Employee_Header_and_Details_Clicked " &amp; ex.ToString)
            End Try
        End Sub

        Public Sub btn_RemoveAllDigitalSignatures_Clicked(ByVal sender As Object, ByVal e As ClickedEventArgs)
            RemoveAllDigitalSignatures()
            MessageBox.Show("You must Save, and Close this form BEFORE you can use it again")
        End Sub

        Public Sub btn_ReturnToEmployee_ByAccountant_WithComment_Clicked(ByVal sender As Object, ByVal e As ClickedEventArgs)
            Try


                '1] Set the value
                Dim bApprovedByAccountant As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:Accountant_Section/my:bApprovedByAccountant", NamespaceManager)
                Dim bSubmittedBySupervisor As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:bSubmittedBySupervisor", NamespaceManager)
                Dim bSubmittedByEmployee As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:bSubmittedByEmployee", NamespaceManager)
                Dim bApprovedBySupervisor As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:SuperVisor_Section/my:bApprovedBySupervisor", NamespaceManager)
                Dim bReturnedByAccountantToEmployeeWithComment As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:Accountant_Section/my:bReturnedByAccountantToEmployeeWithComment", NamespaceManager)
                Dim CommentForEmployee_FromAccountant_WhenReturned As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:Accountant_Section/my:CommentForEmployee_FromAccountant_WhenReturned", NamespaceManager)

                If (bApprovedByAccountant.Value = False) And (bSubmittedBySupervisor.Value = True) And (bSubmittedByEmployee.Value = True) Then  'Checks to make sure this has not been approved by accountant already

                    If (bApprovedByAccountant.Value = False) And (bReturnedByAccountantToEmployeeWithComment.Value = True) And (CommentForEmployee_FromAccountant_WhenReturned.Value.Length &gt; 0) Then 'Checks that accountant has checked the right things, and not already sent this back to employee.

                        '1] Send the data to the SQL Server

                        'Dim sHeaderPK As String = fn_GetFormFieldValue("/my:myFields/my:EmployeeSection/my:F0001_Header/my:FORM_0001_T0_PK")
                        Dim sHeaderPK As String = fn_GetFormFieldValue("/my:myFields/my:FORM_0001_T0_PK")
                        Dim sComment As String = fn_GetFormFieldValue("/my:myFields/my:SuperVisor_Section/my:CommentForEmployee_FromAccountant_WhenReturned")

                        Dim i_1_if_OK As Integer
                        i_1_if_OK = fn_NotApprovedByAccountant_UpdateHeader_Return_1_if_OK(CInt(sHeaderPK), sComment)         '&lt;== SQL add to header
                        '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                        RemoveAllDigitalSignatures()
                        bSubmittedBySupervisor.SetValue("false")
                        bSubmittedByEmployee.SetValue("false")
                        bApprovedByAccountant.SetValue("false")


                        '2] email the form
                        If Me.Errors.Count &gt; 0 Then
                            PrintErrors("btn_ReturnToEmployee_ByAccountant_WithComment_Clicked")
                        Else

                            '3] Feedback
                            If i_1_if_OK = 1 Then

                                Dim dc As DataConnection = DataConnections("Email_Submit_To_Employee_NotApproved_FromAccounting")
                                dc.Execute()

                                'Me.Errors.DeleteAll()   'if it gets to this point without a problem then clean-up to prevent error messsages for the employee.

                                MessageBox.Show("The form has been returned to the Employee with your comment!")

                                Me.Application.ActiveWindow.Close(True)
                            Else
                                MessageBox.Show("There may have been a problem, Form was NOT submitted. Let programmer know")
                            End If

                        End If

                        '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@





                    Else

                        MessageBox.Show("You must" &amp; vbCrLf &amp; "1] Check off: 'Returned To Employee With Comments'" &amp; vbCrLf &amp; "2] Not check off: 'Approved By Accountant'" &amp; vbCrLf &amp; "3] Put a comment" &amp; vbCrLf &amp; "BEFORE returning the form to the Employee!")

                    End If


                Else 'Does not meet the criteria to send back to the employee

                    If (bApprovedByAccountant.Value = True) Then
                        MessageBox.Show("This form has already been Approved by accounting!")
                    End If
                    If (bSubmittedBySupervisor.Value = False) Then
                        MessageBox.Show("This form has not been submitted by the Supervisor yet!")
                    End If

                    If (bSubmittedByEmployee.Value = False) Then
                        MessageBox.Show("This form has not been submitted by the employee yet!")
                    End If
                End If

            Catch ex As Exception
                MessageBox.Show("Sub: btn_ReturnToEmployee_ByAccountant_WithComment_Clicked " &amp; ex.ToString)
            End Try
        End Sub

        Public Sub btn_ApprovedByAccounting_Clicked(ByVal sender As Object, ByVal e As ClickedEventArgs)
            Try


                '1] Set the value
                Dim bApprovedByAccountant As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:Accountant_Section/my:bApprovedByAccountant", NamespaceManager)
                Dim bSubmittedByEmployee As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:bSubmittedByEmployee", NamespaceManager)
                Dim bApprovedBySupervisor As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:SuperVisor_Section/my:bApprovedBySupervisor", NamespaceManager)


                If (bApprovedBySupervisor.Value = True) And (bSubmittedByEmployee.Value = True) And (bApprovedByAccountant.Value = False) Then  'Checks to make sure this has not been submitted already

                    'If (bApprovedByAccountant.Value = True) Then

                    '1] Send the data to the SQL Server

                    '1a) Get it's PK

                    'Dim sHeaderPK As String = fn_GetFormFieldValue("/my:myFields/my:EmployeeSection/my:F0001_Header/my:FORM_0001_T0_PK")




                    Dim sHeaderPK As String = fn_GetFormFieldValue("/my:myFields/my:FORM_0001_T0_PK")
                    Dim i_1_if_OK As Integer

                    i_1_if_OK = fn_ApprovedByAccountant_UpdateHeader_Return_1_if_OK(CInt(sHeaderPK))         '&lt;== SQL add to header

                    '2] enable the Accountant Section
                    If Me.Errors.Count &gt; 0 Then
                        PrintErrors("btn_ApprovedByAccounting_Clicked")
                    Else

                        '3] Feedback
                        If i_1_if_OK = 1 Then


                            bApprovedByAccountant.SetValue("true")
                            MessageBox.Show("Approved, and now ready to edit by the accountant")


                        Else
                            MessageBox.Show("There may have been a problem with: [bApprovedByAccountant], Form was NOT submitted")
                        End If


                    End If


                    'Else

                    '    MessageBox.Show("The form must be Marked: 'Approved' before it can be edited by Accounting!")

                    'End If

                Else
                    If (bApprovedByAccountant.Value = True) Then
                        MessageBox.Show("This form has already been Approved by the Accountant!")
                    End If
                    If (bApprovedBySupervisor.Value = False) Then
                        MessageBox.Show("This form has not been approved by a supervisor yet!")
                    End If
                    If (bSubmittedByEmployee.Value = False) Then
                        MessageBox.Show("This form has not been submitted by the employee yet!")
                    End If

                    'MessageBox.Show("This form has either not been submitted by the employee or already submitted by the supervisor")
                End If

            Catch ex As Exception
                MessageBox.Show("Sub: btn_ApprovedByAccounting_Clicked " &amp; ex.ToString)
            End Try
        End Sub

        Public Sub btn_CloseForm_Clicked(ByVal sender As Object, ByVal e As ClickedEventArgs)
            'Me.Application.ActiveWindow.Close(True)
            AutoSaveToDeskTop()
            Dim sDestinationCell3 As String = "/my:myFields/my:bThisIsTheFirstTimeThisFormHasBeenOpened"
            SetFormFieldValue(sDestinationCell3, "false")
            'Update the Submit data before actually submitting

            Dim sDestinationCell As String = "/my:myFields/my:EmployeeSection/my:F0001_Header/my:TodaysDate"
            SetFormFieldValue(sDestinationCell, fn_s_YYYY_MM_DD_FromADate(Today()))
            MessageBox.Show("Date submitted field is being updated to today. If you save it it will have today's date.")

            Dim result1 As DialogResult = MessageBox.Show("Do you want to save the form, as it is ?", _
                        "Important Question", _
                        MessageBoxButtons.YesNo)

            If result1 = DialogResult.Yes Then

                Dim saveas As New SaveFileDialog()
                saveas.AddExtension = True

                saveas.DefaultExt = "xml"
                saveas.Filter = "XML Documents (*.xml)|*.xml"

                ' Set a default file name from entered data
                'Dim form_ID As String = Me.MainDataSource.CreateNavigator().SelectSingleNode("/dfs:myFields/dfs:dataFields/d:top/@ID", Me.NamespaceManager).Value
                'If form_ID Is Nothing OrElse form_ID = "" Then


                '    form_ID = "New Project"
                'End If

                saveas.FileName = "FORM_0001_YYYY_MM_DD"
                Dim result As DialogResult = saveas.ShowDialog()
                If result = DialogResult.OK Then



                    Me.SaveAs(saveas.FileName)
                End If

                Me.Application.ActiveWindow.Close(True)
            Else
                'Me.Application.ActiveWindow.Close(True)
            End If




        End Sub

        Public Sub btn_PrintForm_Clicked(ByVal sender As Object, ByVal e As ClickedEventArgs)
            'Me.CurrentView.Export("C:\MyView.pdf", ExportFormat.Pdf)
            Me.Print(True)
        End Sub

        Public Sub btn_ReturnToEmployeeWithComment_Clicked(ByVal sender As Object, ByVal e As ClickedEventArgs)
            Try


                '1] Set the value
                Dim bSubmittedBySupervisor As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:bSubmittedBySupervisor", NamespaceManager)
                Dim bSubmittedByEmployee As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:bSubmittedByEmployee", NamespaceManager)
                Dim bApprovedBySupervisor As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:SuperVisor_Section/my:bApprovedBySupervisor", NamespaceManager)
                Dim bReturnedToEmployeeWithComments As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:SuperVisor_Section/my:bReturnedToEmployeeWithComments", NamespaceManager)
                Dim CommentForEmployee_WhenReturned As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:SuperVisor_Section/my:CommentForEmployee_WhenReturned", NamespaceManager)

                If (bSubmittedBySupervisor.Value = False) And (bSubmittedByEmployee.Value = True) Then  'Checks to make sure this has not been submitted by supervisor already

                    If (bApprovedBySupervisor.Value = False) And (bReturnedToEmployeeWithComments.Value = True) And (CommentForEmployee_WhenReturned.Value.Length &gt; 0) Then

                        '1] Send the data to the SQL Server

                        Dim sHeaderPK As String = fn_GetFormFieldValue("/my:myFields/my:FORM_0001_T0_PK")
                        'Dim sHeaderPK As String = fn_GetFormFieldValue("/my:myFields/my:EmployeeSection/my:F0001_Header/my:FORM_0001_T0_PK")
                        Dim sComment As String = fn_GetFormFieldValue("/my:myFields/my:SuperVisor_Section/my:CommentForEmployee_WhenReturned")

                        Dim i_1_if_OK As Integer
                        i_1_if_OK = fn_NotApprovedBySupervisor_UpdateHeader_Return_1_if_OK(CInt(sHeaderPK), sComment)         '&lt;== SQL add to header
                        '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
                        RemoveAllDigitalSignatures()
                        '4] Since the form is going back to the employee, reset all the boolean fields
                        bSubmittedBySupervisor.SetValue("false")
                        bSubmittedByEmployee.SetValue("false")


                        '2] email the form
                        If Me.Errors.Count &gt; 0 Then
                            PrintErrors("btn_ReturnToEmployeeWithComment_Clicked")
                        Else

                            '3] Feedback
                            If i_1_if_OK = 1 Then



                                Dim dc As DataConnection = DataConnections("Email_Submit_To_Employee_NotApproved")
                                dc.Execute()

                                'Me.Errors.DeleteAll()   'if it gets to this point without a problem then clean-up to prevent error messsages for the employee.

                                MessageBox.Show("The form has been returned to the Employee with your comment!")

                                Me.Application.ActiveWindow.Close(True)
                            Else
                                MessageBox.Show("There may have been a problem, Form was NOT submitted. Let programmer know")
                            End If

                        End If

                        '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@





                    Else

                        MessageBox.Show("You must" &amp; vbCrLf &amp; "1] Check off: 'Returned To Employee With Comments'" &amp; vbCrLf &amp; "2] Not check off: 'Approved By Supervisor'" &amp; vbCrLf &amp; "3] Put a comment" &amp; vbCrLf &amp; "BEFORE returning the form to the Employee!")

                    End If


                Else

                    If (bSubmittedBySupervisor.Value = True) Then
                        MessageBox.Show("This form has already been submitted by the supervisor!")
                    End If
                    If (bSubmittedByEmployee.Value = False) Then
                        MessageBox.Show("This form has not been submitted by the employee yet!")
                    End If
                End If

            Catch ex As Exception
                MessageBox.Show("Sub: btn_ReturnToEmployeeWithComment_Clicked " &amp; ex.ToString)
            End Try
        End Sub

        Public Sub btn_SubmitToAccounting_Clicked(ByVal sender As Object, ByVal e As ClickedEventArgs)
            Try


                '1] Set the value
                Dim bSubmittedBySupervisor As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:bSubmittedBySupervisor", NamespaceManager)
                Dim bSubmittedByEmployee As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:bSubmittedByEmployee", NamespaceManager)
                Dim bApprovedBySupervisor As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:SuperVisor_Section/my:bApprovedBySupervisor", NamespaceManager)


                If (bSubmittedBySupervisor.Value = False) And (bSubmittedByEmployee.Value = True) Then  'Checks to make sure this has not been submitted already

                    If (bApprovedBySupervisor.Value = True) Then

                        '1] Send the data to the SQL Server

                        '1a) Get it's PK
                        Dim sHeaderPK As String = fn_GetFormFieldValue("/my:myFields/my:FORM_0001_T0_PK")
                        'Dim sHeaderPK As String = fn_GetFormFieldValue("/my:myFields/my:EmployeeSection/my:F0001_Header/my:FORM_0001_T0_PK")
                        Dim i_1_if_OK As Integer

                        i_1_if_OK = fn_ApprovedBySupervisor_UpdateHeader_Return_1_if_OK(CInt(sHeaderPK))         '&lt;== SQL add to header

                        '2] email the form
                        If Me.Errors.Count &gt; 0 Then
                            PrintErrors("btn_SubmitToAccounting_Clicked")
                        Else

                            '3] Feedback
                            If i_1_if_OK = 1 Then

                                '4] Mark the form as submitted by the supervisor
                                bSubmittedBySupervisor.SetValue("true")

                                Dim dc As DataConnection = DataConnections("Email_Submit_To_Accounting")
                                dc.Execute()

                                MessageBox.Show("The form has been submitted!")

                                Me.Application.ActiveWindow.Close(True)
                            Else
                                MessageBox.Show("There may have been a problem with: [bApprovedBySupervisor], Form was NOT submitted")
                            End If


                        End If


                    Else

                        MessageBox.Show("The form must be approved before it can be submitted to Accounting!")

                    End If

                Else
                    If (bSubmittedBySupervisor.Value = True) Then
                        MessageBox.Show("This form has already been submitted by the supervisor!")
                    End If
                    If (bSubmittedByEmployee.Value = False) Then
                        MessageBox.Show("This form has not been submitted by the employee yet!")
                    End If
                    'MessageBox.Show("This form has either not been submitted by the employee or already submitted by the supervisor")
                End If

            Catch ex As Exception
                MessageBox.Show("Sub: btn_SubmitToAccounting_Clicked " &amp; ex.ToString)
            End Try
        End Sub

        Public Sub btn_SubmitToSupervisor_Clicked(ByVal sender As Object, ByVal e As ClickedEventArgs)
            Try

                '1] Set the value
                Dim bSubmittedByEmployee As XPathNavigator = Me.CreateNavigator().SelectSingleNode("/my:myFields/my:bSubmittedByEmployee", NamespaceManager)

                'COMMENT this out except when debugging the hidden fields
                'If IsValid_NotHidden_Detail_Fields() And IsValid_NotHidden_Header_Fields() And IsValid_Hidden_Header_Fields() Then    'Checks that unseen fields are valid

                If IsValid_NotHidden_Detail_Fields() And IsValid_NotHidden_Header_Fields() Then    'Checks that unseen fields are valid

                    '1] Save it before marking it 'submitted by employee'
                    AutoSaveToDeskTop()
                    Dim sDestinationCell3 As String = "/my:myFields/my:bThisIsTheFirstTimeThisFormHasBeenOpened"
                    SetFormFieldValue(sDestinationCell3, "false")

                    If bSubmittedByEmployee.Value = False Then  'Checks to make sure this has not been submitted already

                        'Update the Submit data before actually submitting

                        Dim sDestinationCell As String = "/my:myFields/my:EmployeeSection/my:F0001_Header/my:TodaysDate"
                        SetFormFieldValue(sDestinationCell, fn_s_YYYY_MM_DD_FromADate(Today()))

                        '1] Send the data to the SQL Server

                        '1a) Save the Header, get it's PK
                        'Dim sHeaderDestinationCell As String = "/my:myFields/my:EmployeeSection/my:F0001_Header/my:FORM_0001_T0_PK"
                        Dim sHeaderDestinationCell As String = "/my:myFields/my:FORM_0001_T0_PK"
                        Dim iHeaderPK As Integer
                        iHeaderPK = fn_AddHeader_ReturnHeaderPK()                  '&lt;== SQL send header

                        '|||||||||||||||||||||||||||||||||||||||||| header has come back as zero, I suspect b/c the user ignored the error message
                        If iHeaderPK &lt;&gt; 0 Then



                            SetFormFieldValue(sHeaderDestinationCell, iHeaderPK)
                            'MessageBox.Show(CStr(iHeaderPK))

                            '1b) Save each row, get it's PK
                            Dim iFORM_0001_T0_FK As Integer = iHeaderPK
                            Dim root As XPathNavigator = MainDataSource.CreateNavigator()
                            Dim rows As XPathNodeIterator = root.Select("/my:myFields/my:EmployeeSection/my:F0001_Detail", NamespaceManager)


                            Dim sDetailDestinationCell As String = "/my:myFields/my:FORM_0001_T0_PK"
                            Dim iRowCounter As Integer = 0

                            '5/13/2013: stopped storing the details
                            '5/21/2013: back on again
                            Dim iDetailFK As Integer
                            While rows.MoveNext()
                                iRowCounter = iRowCounter + 1
                                iDetailFK = fn_AddDetail_ReturnDetailPK(rows, iFORM_0001_T0_FK)         '&lt;== SQL send Detail


                                'Dim sX As String
                                ''sX = "/my:myFields/my:EmployeeSection/my:F0001_Detail/my:FORM_0001_T1_PK[" &amp; CStr(iRowCounter) &amp; "]"
                                'sX = "/my:myFields/my:FORM_0001_T1_PK[" &amp; CStr(iRowCounter) &amp; "]"

                                'Since I want the user to digitally sign this I can not write back to it once it is signed, so I am going to comment out this line
                                'For debugging: I could turn off the digital signature, and uncomment this out:
                                '========
                                'SetFormFieldValue(sX, iHeaderPK)
                                '========
                            End While


                            '2] email the form
                            If Me.Errors.Count &gt; 0 Then
                                PrintErrors("btn_SubmitToSupervisor_Clicked")
                                ' MessageBox.Show("There were some errors when trying to submit to the supervisor")
                            Else
                                'Mark the form as submitted to supervisor
                                bSubmittedByEmployee.SetValue("true")

                                Dim dc As DataConnection = DataConnections("Email_Submit_ToSupervisor")
                                dc.Execute()

                                '3] Feedback
                                MessageBox.Show("Your form has been submitted!")


                                '4] reset these before saving to the desktop, so that if the user wants to re-use the form they can
                                bSubmittedByEmployee.SetValue("false")

                                '5] Now if everything went ok, it will overwrite the first file that was saved, but that way it captures the information ahead of time if 
                                AutoSaveToDeskTop()


                                Me.Application.ActiveWindow.Close(True)
                            End If

                        Else    'PK was zero, my guess is the user ignored the error message, and then tried to submit it anyways.
                            Dim sX As String = "btn_SubmitToSupervisor_Clicked " &amp; vbCrLf &amp; " You did not get back a valid response from the CCWNC Server, " &amp; vbCrLf &amp; "my guess is your VPN connection or Connection to the network is not working" &amp; vbCrLf &amp; "Contact glenn 828-348-2843, let him know about any error messages you got"
                            MessageBox.Show(sX)
                        End If

                        '||||||||||||||||||||||||||||||||||||||||||


                    Else
                        MessageBox.Show("This form has already been submitted to the supervisor, It can not be re-submitted!")
                    End If
                    MessageBox.Show("All Valid")
                Else 'Has already been submitted by employee

                    If IsValid_NotHidden_Detail_Fields() = False Then
                        MessageBox.Show(_sValidationMessage_NotHiddenDetailFields)
                    End If

                    If IsValid_NotHidden_Header_Fields() = False Then
                        MessageBox.Show(_sValidationMessage_NotHiddenHeaderFields)
                    End If

                    If IsValid_Hidden_Header_Fields() = False Then
                        Debug.Print((_sValidationMessage_HiddenHeaderFields))
                        'COMMENT this out except when debugging the hidden fields
                        'MessageBox.Show(_sValidationMessage_HiddenHeaderFields)
                    End If

                End If


            Catch ex As Exception
                MessageBox.Show("Sub: btn_SubmitToSupervisor_Clicked " &amp; ex.ToString)
            End Try

        End Sub


#End Region 'End: Buttons"


#Region "Functions ================================================="

        Public Shared Function getCurrentDateTimeString_yyyy_MM_dd_HH_mm_ss_ff() As String
            ' Returns current date and time in this format: "yyyy-MM-dd_HH-mm-ss-ff"         
            Dim rightNow As DateTime = DateTime.Now
            Dim strCurrentDateTimeString As String
            strCurrentDateTimeString = rightNow.ToString("yyyy" &amp; "-" &amp; "MM" &amp; "-" &amp; "dd" &amp; "_" &amp; "HH" &amp; "-" &amp; "mm" &amp; "-" &amp; "ss" &amp; "-" &amp; "ff")
            Return (strCurrentDateTimeString)
        End Function

        Function fn_ConvertDecimalToStringPaddedWith2DigitsAfterDecimal(ByVal dX As Decimal) As String
            Dim sX As String = ""
            Dim sX_0 As String
            Dim sX_1 As String
            Dim iLen_0 As Integer = 0
            Dim iLen_1 As Integer = 0
            Dim arrX() As String

            Try


                sX = CStr(Math.Round(dX, 2))

                arrX = Split(sX, ".")
                sX_0 = arrX(0)
                sX_1 = arrX(1)
                iLen_0 = arrX(0).Length
                iLen_1 = arrX(1).Length

                Select Case iLen_1

                    Case 0
                        sX_1 = "00"
                    Case 1
                        sX_1 = sX_1 &amp; "0"
                    Case 2
                        sX_1 = sX_1
                    Case Else
                        sX_1 = "??"
                End Select


                sX = sX_0 &amp; "." &amp; sX_1

            Catch ex As Exception

                MessageBox.Show("Sub: fn_ConvertDecimalToStringPaddedWith2DigitsAfterDecimal " &amp; ex.ToString)

            End Try

            Return sX


        End Function

        Function fn_BusinessRowAmount(ByVal dPercentOfTotal As Decimal, ByVal dTotal As Decimal) As String

            Dim dX As Decimal = 0

            Try

                dX = (dPercentOfTotal / 100) * dTotal

            Catch ex As Exception
                MessageBox.Show("Sub: fn_BusinessRowAmount " &amp; ex.ToString)
            End Try

            Return dX
        End Function

        Function IsValid_NotHidden_Detail_Fields() As Boolean

            Dim i_0_is_Valid As Integer = 0
            _sValidationMessage_NotHiddenDetailFields = ""

            Try

                Dim mainDS As XPathNavigator = MainDataSource.CreateNavigator()

                'input Values
                '/////////////////////////////

                Dim root As XPathNavigator = MainDataSource.CreateNavigator()
                Dim rows As XPathNodeIterator = root.Select("/my:myFields/my:EmployeeSection/my:F0001_Detail", NamespaceManager)
                Dim iRowCounter As Integer = 0
                While rows.MoveNext()
                    iRowCounter = iRowCounter + 1

                    Dim row As XPathNavigator = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Detail[" &amp; CStr(iRowCounter) &amp; "]", NamespaceManager)


                    Dim DateOfTrip As String = fn_GetRepeatingTableFieldValue(row, "my:DateOfTrip")
                    Dim Begin_Odometer As String = fn_GetRepeatingTableFieldValue(row, "my:Begin_Odometer")
                    Dim End_Odometer As String = fn_GetRepeatingTableFieldValue(row, "my:End_Odometer")
                    Dim Area_Visited As String = fn_GetRepeatingTableFieldValue(row, "my:Area_Visited")
                    Dim Hours As String = fn_GetRepeatingTableFieldValue(row, "my:Hours")
                    Dim Project_Name As String = fn_GetRepeatingTableFieldValue(row, "my:Project_Name")

                    If (DateOfTrip.Length &lt; 1) Then
                        i_0_is_Valid = i_0_is_Valid + 1
                        _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {The DateOfTrip Looks like it is missing for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                    End If

                    If Project_Name.Contains("CHIPRAA") Then

                        If (Hours.Trim = "0") Then

                            If ((Begin_Odometer.Length &lt; 1) Or (End_Odometer.Length &lt; 1)) Then

                                i_0_is_Valid = i_0_is_Valid + 1
                                _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {When there are Zero hours, there must be mileage: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf

                            End If
                        Else 'Hours are greater than 0

                            If ((Begin_Odometer.Length &lt; 1) &lt;&gt; (End_Odometer.Length &lt; 1)) Then  'Check to see if they are both missing, or both there
                                i_0_is_Valid = i_0_is_Valid + 1
                                _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {One of your Odomoter readings is missing: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                            End If

                        End If

                    Else    'CCWNC or CHACC

                        If (Hours.Trim &lt;&gt; "0") Then
                            i_0_is_Valid = i_0_is_Valid + 1
                            _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {You should only have Zero (0) hours for non-CHIPRA activities " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                        End If

                        If (Begin_Odometer.Length &lt; 1) Then
                            i_0_is_Valid = i_0_is_Valid + 1
                            _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {The Begin_Odometer Looks like it is missing for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                        End If

                        If (End_Odometer.Length &lt; 1) Then
                            i_0_is_Valid = i_0_is_Valid + 1
                            _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {The End_Odometer Looks like it is missing for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                        End If

                    End If

                    If (End_Odometer.Length &gt; 0) And (Begin_Odometer.Length &gt; 0) Then
                        'Every time there is mileage check to be sure that end &gt; begining
                        If (CInt(End_Odometer) &lt; CInt(Begin_Odometer)) Then
                            i_0_is_Valid = i_0_is_Valid + 1
                            _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {Your ending odometer has to be greater than your begining odometer, for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                        End If
                    End If


                    'If (CInt(Begin_Odometer) &lt; CInt(End_Odometer)) Then
                    '    i_0_is_Valid = i_0_is_Valid + 1
                    '    _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {Your ending odometer has to be greater than your begining odometer: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                    'End If

                    'If (Begin_Odometer.Length &lt; 1) Then
                    '    i_0_is_Valid = i_0_is_Valid + 1
                    '    _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {The Begin_Odometer Looks like it is missing for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                    'End If

                    'If (End_Odometer.Length &lt; 1) Then
                    '    i_0_is_Valid = i_0_is_Valid + 1
                    '    _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {The End_Odometer Looks like it is missing for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                    'End If

                    If (Area_Visited.Length &lt; 1) Then
                        i_0_is_Valid = i_0_is_Valid + 1
                        _sValidationMessage_NotHiddenDetailFields = _sValidationMessage_NotHiddenDetailFields &amp; " {The Area_Visited Looks like it is missing for row: " &amp; CStr(iRowCounter) &amp; " } " &amp; vbCrLf
                    End If


                End While

                '//////////////////////////////////



                If i_0_is_Valid &gt; 0 Then
                    _sValidationMessage_NotHiddenDetailFields = "The Detail_Fields looks like they have some problems: " &amp; vbCrLf &amp; vbCrLf &amp; _sValidationMessage_NotHiddenDetailFields
                    Return False
                Else
                    Return True
                End If

            Catch ex As NullReferenceException

                _sValidationMessage_NotHiddenDetailFields = "The Detail_Fields are missing some information"
                Return False

            Catch ex As Exception

                MessageBox.Show(ex.InnerException.ToString)
            End Try

        End Function

        Function IsValid_NotHidden_Header_Fields() As Boolean

            Dim i_0_is_Valid As Integer = 0
            _sValidationMessage_NotHiddenHeaderFields = ""

            Try



                Dim mainDS As XPathNavigator = MainDataSource.CreateNavigator()

                'input Values

                Dim EmployeeName As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:EmployeeName", NamespaceManager).Value
                Dim SupervisorName As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:SupervisorName", NamespaceManager).Value


                If (EmployeeName.Length &lt; 3) Then
                    i_0_is_Valid = i_0_is_Valid + 1
                    _sValidationMessage_NotHiddenHeaderFields = _sValidationMessage_NotHiddenHeaderFields &amp; " {The EmployeeName Looks like it is missing} " &amp; vbCrLf
                End If

                If (SupervisorName.Length &lt; 3) Then
                    i_0_is_Valid = i_0_is_Valid + 1
                    _sValidationMessage_NotHiddenHeaderFields = _sValidationMessage_NotHiddenHeaderFields &amp; " {The SupervisorName Looks like it is missing} " &amp; vbCrLf
                End If


                If i_0_is_Valid &gt; 0 Then
                    _sValidationMessage_NotHiddenHeaderFields = "The Header_Fields look like they have some problems: " &amp; vbCrLf &amp; vbCrLf &amp; _sValidationMessage_NotHiddenHeaderFields
                    Return False
                Else
                    Return True
                End If

            Catch ex As NullReferenceException

                _sValidationMessage_NotHiddenHeaderFields = "The Header_Fields looks like they are missing some information"
                Return False

            Catch ex As Exception

                MessageBox.Show(ex.InnerException.ToString)
            End Try

        End Function

        Function IsValid_Hidden_Header_Fields() As Boolean

            Dim i_0_is_Valid As Integer = 0
            _sValidationMessage_HiddenHeaderFields = ""

            Try


                Dim mainDS As XPathNavigator = MainDataSource.CreateNavigator()

                'input Values

                Dim DB2_T9_FK_employee As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:DB2_T9_FK_employee", NamespaceManager).Value
                Dim DB2_T9_FK_supervisor As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:DB2_T9_FK_supervisor", NamespaceManager).Value
                Dim SupervisorEmailAddress As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:SupervisorEmailAddress", NamespaceManager).Value
                Dim EmployeeEmailAddress As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:EmployeeEmailAddress", NamespaceManager).Value

                If Not IsNumeric(DB2_T9_FK_supervisor) Then
                    i_0_is_Valid = i_0_is_Valid + 1
                    _sValidationMessage_HiddenHeaderFields = _sValidationMessage_HiddenHeaderFields &amp; " {DB2_T9_FK_supervisor is missing} " &amp; vbCrLf
                End If

                If Not IsNumeric(DB2_T9_FK_employee) Then
                    i_0_is_Valid = i_0_is_Valid + 1
                    _sValidationMessage_HiddenHeaderFields = _sValidationMessage_HiddenHeaderFields &amp; " {DB2_T9_FK_employee is missing} " &amp; vbCrLf
                End If

                If (EmployeeEmailAddress.Length &lt; 12) Then    '@ccwnc.org is 10 characters, so it must be at least 12 characters
                    i_0_is_Valid = i_0_is_Valid + 1
                    _sValidationMessage_HiddenHeaderFields = _sValidationMessage_HiddenHeaderFields &amp; " {The EmployeeEmailAddress is too short} " &amp; vbCrLf
                End If

                If (SupervisorEmailAddress.Length &lt; 12) Then    '@ccwnc.org is 10 characters, so it must be at least 12 characters
                    i_0_is_Valid = i_0_is_Valid + 1
                    _sValidationMessage_HiddenHeaderFields = _sValidationMessage_HiddenHeaderFields &amp; " {The SupervisorEmailAddress is too short} " &amp; vbCrLf
                End If

                If Not fn_bIsStringInTargetString("@ccwnc.org", SupervisorEmailAddress) Then
                    i_0_is_Valid = i_0_is_Valid + 1
                    _sValidationMessage_HiddenHeaderFields = _sValidationMessage_HiddenHeaderFields &amp; " {The SupervisorEmailAddress seems to be missing} " &amp; vbCrLf
                End If

                If Not fn_bIsStringInTargetString("@ccwnc.org", EmployeeEmailAddress) Then
                    i_0_is_Valid = i_0_is_Valid + 1
                    _sValidationMessage_HiddenHeaderFields = _sValidationMessage_HiddenHeaderFields &amp; " {The EmployeeEmailAddress seems to be missing} " &amp; vbCrLf
                End If

                If i_0_is_Valid &gt; 0 Then
                    _sValidationMessage_HiddenHeaderFields = "The Hidden Header_Fields look like they have some problems: " &amp; vbCrLf &amp; vbCrLf &amp; _sValidationMessage_HiddenHeaderFields
                    Return False
                Else
                    Return True
                End If

            Catch ex As NullReferenceException

                _sValidationMessage_HiddenHeaderFields = "The Hidden Header_Fields looks like they are missing some information"
                Return False

            Catch ex As Exception

                MessageBox.Show(ex.InnerException.ToString)
            End Try

        End Function

        Function fn_MilesDriven(ByVal iBegin As Integer, ByVal iEnd As Integer) As String

            Dim iX As Integer = 0

            Try

                iX = iEnd - iBegin



            Catch ex As Exception
                MessageBox.Show("Sub: fn_MilesDriven " &amp; ex.ToString)
            End Try

            If iX &lt; 0 Then
                Return ""
            Else
                Return CStr(iX)

            End If


        End Function

        Function fn_AmountToPay(ByVal dBegin As Decimal, ByVal dEnd As Decimal) As String

            Dim dDifference As Decimal = 0D
            Dim dOutPut As Decimal = 0D
            Dim sx As String = ""

            Try

                dDifference = dEnd - dBegin
                If dDifference &gt; 100 Then
                    dOutPut = (100 * dPaymentPerMile_UnderOneHundredMiles) + ((dDifference - 100) * (dPaymentPerMile_OverOneHundredMiles))
                Else
                    dOutPut = (dDifference * dPaymentPerMile_UnderOneHundredMiles)
                End If

                If dOutPut &lt; 0 Then
                    sx = ""
                Else

                    sx = fn_ConvertDecimalToStringPaddedWith2DigitsAfterDecimal(dOutPut)

                End If

            Catch ex As Exception
                MessageBox.Show("Sub: fn_AmountToPay " &amp; ex.ToString)
            End Try

            Return sx

        End Function

        Function fn_sReplaceNilWithSomeValue(ByVal node As XPathNavigator, ByVal sReplacement As String) As String
            'This either returns the node's value or if it is nil then it returns some replacment value

            If (node.MoveToAttribute("nil", "http://www.w3.org/2001/XMLSchema-instance")) Then
                Return sReplacement
            Else
                Return node.Value
            End If

        End Function

        Function fn_iReplaceNilWithSomeValue(ByVal node As XPathNavigator, ByVal iReplacement As Integer) As Integer
            'This either returns the node's value or if it is nil then it returns some replacment value

            If (node.MoveToAttribute("nil", "http://www.w3.org/2001/XMLSchema-instance")) Then
                Return iReplacement
            Else
                Return node.Value
            End If

        End Function

        Function fn_dReplaceNilWithSomeValue(ByVal node As XPathNavigator, ByVal dReplacement As Decimal) As Decimal
            'This either returns the node's value or if it is nil then it returns some replacment value

            If (node.MoveToAttribute("nil", "http://www.w3.org/2001/XMLSchema-instance")) Then
                Return dReplacement
            Else
                Return node.Value
            End If

        End Function

        Function fn_s_YYYY_MM_DD_FromADate(ByVal dX As Date) As String

            Dim iMM_dx As Integer
            Dim sMM_dx As String
            Dim iYYYY_dx As Integer
            Dim sYYYY_dx As String
            Dim sYY_dx As String
            Dim iDD_dx As Integer
            Dim sDD_dx As String

            iMM_dx = Month(dX)
            If iMM_dx &lt; 10 Then
                sMM_dx = "0" &amp; CStr(iMM_dx)
            Else
                sMM_dx = CStr(iMM_dx)
            End If

            iYYYY_dx = Year(dX)
            sYYYY_dx = CStr(iYYYY_dx)
            sYY_dx = Right(sYYYY_dx, 2)



            iDD_dx = Microsoft.VisualBasic.DateAndTime.Day(dX)

            If iDD_dx &lt; 10 Then
                sDD_dx = "0" &amp; CStr(iDD_dx)
            Else
                sDD_dx = CStr(iDD_dx)
            End If

            fn_s_YYYY_MM_DD_FromADate = sYYYY_dx &amp; "-" &amp; sMM_dx &amp; "-" &amp; sDD_dx

        End Function

#End Region 'End: Functions"

#Region "General ==== including general Functions=================="

        Sub PrintErrors(ByVal sNameOfSub As String)
            Dim iErrorcount As Integer
            Debug.Print("Start Errors for =======================&gt; " &amp; sNameOfSub)
            If Me.Errors.Count &gt; 0 Then
                MessageBox.Show("There were: " &amp; CStr(Me.Errors.Count) &amp; " errors. Let the programmer know")
            End If

            For iErrorcount = 0 To Me.Errors.Count - 1

                Debug.Print(CStr(iErrorcount) &amp; "]  START=====================================================")
                Debug.Print("a) " &amp; Me.Errors(iErrorcount).DetailedMessage)
                Debug.Print("b) " &amp; Me.Errors(iErrorcount).ErrorCode)
                Debug.Print("c) " &amp; Me.Errors(iErrorcount).FormErrorType)
                Debug.Print("d) " &amp; Me.Errors(iErrorcount).Message)
                Debug.Print("e) " &amp; Me.Errors(iErrorcount).Name)
                Debug.Print("f) " &amp; Me.Errors(iErrorcount).Site.InnerXml)
                Debug.Print("g) " &amp; Me.Errors(iErrorcount).Site.OuterXml)
                Debug.Print("h) " &amp; Me.Errors(iErrorcount).Site.Prefix)
                Debug.Print(CStr(iErrorcount) &amp; "]  END=====================================================")
            Next
            Debug.Print("End Errors for =======================&gt; " &amp; sNameOfSub)
        End Sub

        Private Sub SetFormFieldValue(ByVal fieldName As String, ByVal fieldValue As String)
            Try

                Dim myNav As XPathNavigator = MainDataSource.CreateNavigator().SelectSingleNode(fieldName, NamespaceManager)
                If myNav IsNot Nothing Then
                    DeleteNil(myNav)
                    myNav.SetValue(fieldValue)
                End If
            Catch ex As Exception

                MessageBox.Show("Sub: SetFormFieldValue " &amp; ex.ToString)

            End Try

        End Sub

        Private Function fn_GetFormFieldValue(ByVal fieldName As String) As String
            Dim fieldValue As String = String.Empty
            Try
                Dim myNav As XPathNavigator = MainDataSource.CreateNavigator().SelectSingleNode(fieldName, NamespaceManager)
                If myNav IsNot Nothing Then
                    fieldValue = myNav.Value
                End If



                If String.IsNullOrEmpty(fieldValue) Then
                    Return String.Empty
                Else
                    Return fieldValue
                End If
            Catch
                Return fieldValue
            End Try
        End Function


        Private Function fn_GetRepeatingTableFieldValue(ByVal eSite As XPathNavigator, ByVal fieldName As String) As String

            Dim fieldValue As String = String.Empty

            Try

                Dim myNav As XPathNavigator = eSite.SelectSingleNode(fieldName, NamespaceManager)

                If myNav IsNot Nothing Then
                    fieldValue = myNav.Value
                End If



                If String.IsNullOrEmpty(fieldValue) Then
                    Return String.Empty
                Else
                    Return fieldValue
                End If
            Catch
                Return fieldValue
            End Try
        End Function

        Private Sub SetRepeatingTableFieldValue(ByVal eSite As XPathNavigator, ByVal fieldName As String, ByVal fieldValue As String)
            Try

                Dim myNav As XPathNavigator = eSite.SelectSingleNode(fieldName, NamespaceManager)
                If myNav IsNot Nothing Then
                    DeleteNil(myNav)
                    myNav.SetValue(fieldValue)
                End If
            Catch ex As Exception

                MessageBox.Show("Sub: SetRepeatingTableFieldValue " &amp; ex.ToString)

            End Try

        End Sub

        Function fn_bIsStringInTargetString(ByVal sStringToLookFor As String, ByVal sTargetStringToSearch As String) As Boolean


            Dim String1 As String
            Dim String2 As String
            Dim bX As Boolean


            String1 = sTargetStringToSearch
            String2 = "*" &amp; sStringToLookFor &amp; "*"

            bX = String1 Like String2
            fn_bIsStringInTargetString = bX


        End Function

        Sub DeleteNil(ByVal navX As XPathNavigator)
            If navX.MoveToAttribute("nil", "http://www.w3.org/2001/XMLSchema-instance") Then
                navX.DeleteSelf()
            End If
        End Sub

#End Region 'End: General'

#Region "SQL OLEDB StoredProcedures ================================"

        Public Function fn_NotApprovedByAccountant_UpdateHeader_Return_1_if_OK(ByVal iFORM_0001_T0_FK As Integer, ByVal sComment As String) As Integer

            Dim mainDS As XPathNavigator = MainDataSource.CreateNavigator()
            Dim iReturn_1_if_OK As Integer = 0

            'input Values

            Dim conn As OleDbConnection = c_DataSource.Get_SQL_Connection
            Dim cmd As OleDbCommand = New OleDbCommand("prj_0024_FORM_0001_SP_06_UPDATE_NOT_ApprovedByAccountant_T0", conn)
            cmd.CommandType = System.Data.CommandType.StoredProcedure

            Dim RetValue As OleDbParameter = cmd.Parameters.Add("RetValue", OleDbType.Integer)
            RetValue.Direction = Data.ParameterDirection.ReturnValue    '0=failed, 1=success

            Dim FORM_0001_T0_FK_IN As OleDbParameter = cmd.Parameters.Add("@FORM_0001_T0_FK", OleDbType.Integer)
            FORM_0001_T0_FK_IN.Direction = Data.ParameterDirection.Input

            Dim CommentForEmployee_WhenReturned As OleDbParameter = cmd.Parameters.Add("@sComment", OleDbType.VarWChar)
            CommentForEmployee_WhenReturned.Direction = Data.ParameterDirection.Input

            FORM_0001_T0_FK_IN.Value = iFORM_0001_T0_FK
            CommentForEmployee_WhenReturned.Value = sComment


            Try

                conn.Open()


                cmd.ExecuteScalar()
                'cmd.ExecuteNonQuery()

                iReturn_1_if_OK = RetValue.Value

            Catch ex As Exception

                MessageBox.Show(ex.Message, "An error occurred", _
                  MessageBoxButtons.OK, MessageBoxIcon.Error)

            Finally

                conn.Close()

            End Try
            Return iReturn_1_if_OK
        End Function

        Public Function fn_ApprovedByAccountant_UpdateHeader_Return_1_if_OK(ByVal iFORM_0001_T0_FK As Integer) As Integer

            Dim mainDS As XPathNavigator = MainDataSource.CreateNavigator()
            Dim iReturn_1_if_OK As Integer = 0

            'input Values


            Dim conn As OleDbConnection = c_DataSource.Get_SQL_Connection
            Dim cmd As OleDbCommand = New OleDbCommand("prj_0024_FORM_0001_SP_05_UPDATE_ApprovedByAccountant_T0", conn)
            cmd.CommandType = System.Data.CommandType.StoredProcedure

            Dim RetValue As OleDbParameter = cmd.Parameters.Add("RetValue", OleDbType.Integer)
            RetValue.Direction = Data.ParameterDirection.ReturnValue

            Dim FORM_0001_T0_FK_IN As OleDbParameter = cmd.Parameters.Add("@FORM_0001_T0_FK", OleDbType.Integer)
            FORM_0001_T0_FK_IN.Direction = Data.ParameterDirection.Input

            FORM_0001_T0_FK_IN.Value = iFORM_0001_T0_FK



            Try

                conn.Open()


                cmd.ExecuteScalar()
                'cmd.ExecuteNonQuery()

                iReturn_1_if_OK = RetValue.Value

            Catch ex As Exception

                MessageBox.Show(ex.Message, "An error occurred", _
                  MessageBoxButtons.OK, MessageBoxIcon.Error)

            Finally

                conn.Close()

            End Try
            Return iReturn_1_if_OK
        End Function

        Public Function fn_NotApprovedBySupervisor_UpdateHeader_Return_1_if_OK(ByVal iFORM_0001_T0_FK As Integer, ByVal sComment As String) As Integer

            Dim mainDS As XPathNavigator = MainDataSource.CreateNavigator()
            Dim iReturn_1_if_OK As Integer = 0

            'input Values


            Dim conn As OleDbConnection = c_DataSource.Get_SQL_Connection
            Dim cmd As OleDbCommand = New OleDbCommand("prj_0024_FORM_0001_SP_04_UPDATE_NOT_ApprovedBySupervisor_T0", conn)
            cmd.CommandType = System.Data.CommandType.StoredProcedure

            Dim RetValue As OleDbParameter = cmd.Parameters.Add("RetValue", OleDbType.Integer)
            RetValue.Direction = Data.ParameterDirection.ReturnValue    '0=failed, 1=success

            Dim FORM_0001_T0_FK_IN As OleDbParameter = cmd.Parameters.Add("@FORM_0001_T0_FK", OleDbType.Integer)
            FORM_0001_T0_FK_IN.Direction = Data.ParameterDirection.Input

            Dim CommentForEmployee_WhenReturned As OleDbParameter = cmd.Parameters.Add("@sComment", OleDbType.VarWChar)
            CommentForEmployee_WhenReturned.Direction = Data.ParameterDirection.Input

            FORM_0001_T0_FK_IN.Value = iFORM_0001_T0_FK
            CommentForEmployee_WhenReturned.Value = sComment


            Try

                conn.Open()


                cmd.ExecuteScalar()
                'cmd.ExecuteNonQuery()

                iReturn_1_if_OK = RetValue.Value

            Catch ex As Exception

                MessageBox.Show(ex.Message, "An error occurred", _
                  MessageBoxButtons.OK, MessageBoxIcon.Error)

            Finally

                conn.Close()

            End Try
            Return iReturn_1_if_OK
        End Function

        Public Function fn_ApprovedBySupervisor_UpdateHeader_Return_1_if_OK(ByVal iFORM_0001_T0_FK As Integer) As Integer

            Dim mainDS As XPathNavigator = MainDataSource.CreateNavigator()
            Dim iReturn_1_if_OK As Integer = 0

            'input Values


            Dim conn As OleDbConnection = c_DataSource.Get_SQL_Connection
            Dim cmd As OleDbCommand = New OleDbCommand("prj_0024_FORM_0001_SP_03_UPDATE_ApprovedBySupervisor_T0", conn)
            cmd.CommandType = System.Data.CommandType.StoredProcedure

            Dim RetValue As OleDbParameter = cmd.Parameters.Add("RetValue", OleDbType.Integer)
            RetValue.Direction = Data.ParameterDirection.ReturnValue

            Dim FORM_0001_T0_FK_IN As OleDbParameter = cmd.Parameters.Add("@FORM_0001_T0_FK", OleDbType.Integer)
            FORM_0001_T0_FK_IN.Direction = Data.ParameterDirection.Input

            FORM_0001_T0_FK_IN.Value = iFORM_0001_T0_FK



            Try

                conn.Open()


                cmd.ExecuteScalar()
                'cmd.ExecuteNonQuery()

                iReturn_1_if_OK = RetValue.Value

            Catch ex As Exception

                MessageBox.Show(ex.Message, "An error occurred", _
                  MessageBoxButtons.OK, MessageBoxIcon.Error)

            Finally

                conn.Close()

            End Try
            Return iReturn_1_if_OK
        End Function

        Public Function fn_AddDetail_ReturnDetailPK(ByVal rows As XPathNodeIterator, ByVal iFORM_0001_T0_FK As Integer) As Integer

            Dim iReturnPK As Integer = 0


            Try

                'Dim mainDS As XPathNavigator = MainDataSource.CreateNavigator()


                'input Values

                'Dim DateOfTrip As String = rows.Current.SelectSingleNode("my:DateOfTrip", NamespaceManager).Value
                Dim DateOfTrip As String = fn_sReplaceNilWithSomeValue(rows.Current.SelectSingleNode("my:DateOfTrip", NamespaceManager), "")

                'Dim Begin_Odometer As Integer = rows.Current.SelectSingleNode("my:Begin_Odometer", NamespaceManager).Value
                Dim Begin_Odometer As Integer = fn_iReplaceNilWithSomeValue(rows.Current.SelectSingleNode("my:Begin_Odometer", NamespaceManager), 0)

                'Dim End_Odometer As Integer = rows.Current.SelectSingleNode("my:End_Odometer", NamespaceManager).Value
                Dim End_Odometer As Integer = fn_iReplaceNilWithSomeValue(rows.Current.SelectSingleNode("my:End_Odometer", NamespaceManager), 0)

                'Dim Area_Visited As String = rows.Current.SelectSingleNode("my:Area_Visited", NamespaceManager).Value
                Dim Area_Visited As String = fn_sReplaceNilWithSomeValue(rows.Current.SelectSingleNode("my:Area_Visited", NamespaceManager), "")

                'Dim Project_Name As String = rows.Current.SelectSingleNode("my:Project_Name", NamespaceManager).Value
                Dim Project_Name As String = fn_sReplaceNilWithSomeValue(rows.Current.SelectSingleNode("my:Project_Name", NamespaceManager), "")

                'Dim CCWNC_MilesDriven As Integer = CInt(rows.Current.SelectSingleNode("my:CCWNC_MilesDriven", NamespaceManager).Value)
                Dim CCWNC_MilesDriven As Integer = fn_iReplaceNilWithSomeValue(rows.Current.SelectSingleNode("my:CCWNC_MilesDriven", NamespaceManager), 0)

                'Dim Project_MilesDriven As Integer = CInt(rows.Current.SelectSingleNode("my:Project_MilesDriven", NamespaceManager).Value)
                Dim Project_MilesDriven As Integer = fn_iReplaceNilWithSomeValue(rows.Current.SelectSingleNode("my:Project_MilesDriven", NamespaceManager), 0)

                'Dim CCWNC_Amount As Decimal = CDec(rows.Current.SelectSingleNode("my:CCWNC_Amount", NamespaceManager).Value)
                Dim CCWNC_Amount As Decimal = fn_dReplaceNilWithSomeValue(rows.Current.SelectSingleNode("my:CCWNC_Amount", NamespaceManager), 0.0)


                'Dim Project_Amount As Decimal = CDec(rows.Current.SelectSingleNode("my:Project_Amount", NamespaceManager).Value)
                Dim Project_Amount As Decimal = fn_dReplaceNilWithSomeValue(rows.Current.SelectSingleNode("my:Project_Amount", NamespaceManager), 0.0)

                'Dim Hours As Integer = CInt(rows.Current.SelectSingleNode("my:Hours", NamespaceManager).Value)
                Dim Hours As Decimal = fn_dReplaceNilWithSomeValue(rows.Current.SelectSingleNode("my:Hours", NamespaceManager), 0.0)

                Using conn As OleDbConnection = c_DataSource.Get_SQL_Connection
                    Dim cmd As OleDbCommand = New OleDbCommand("prj_0024_FORM_0001_SP_02_AddRecordTo_T1", conn)
                    cmd.CommandType = System.Data.CommandType.StoredProcedure

                    Dim RetValue As OleDbParameter = cmd.Parameters.Add("RetValue", OleDbType.Integer)
                    RetValue.Direction = Data.ParameterDirection.ReturnValue


                    Dim FORM_0001_T0_FK_IN As OleDbParameter = cmd.Parameters.Add("@FORM_0001_T0_FK", OleDbType.Integer)
                    FORM_0001_T0_FK_IN.Direction = Data.ParameterDirection.Input

                    '---------------------------------------------------
                    'SQL Date wants it in the format: YYYY-MM-DD
                    'OleDbType.DBDate says it is in the format: YYYYMMDD
                    Dim DateOfTrip_IN As OleDbParameter = cmd.Parameters.Add("@DateOfTrip", OleDbType.DBDate)
                    DateOfTrip_IN.Direction = Data.ParameterDirection.Input
                    '---------------------------------------------------

                    Dim Begin_Odometer_IN As OleDbParameter = cmd.Parameters.Add("@Begin_Odometer", OleDbType.Integer)
                    Begin_Odometer_IN.Direction = Data.ParameterDirection.Input

                    Dim End_Odometer_IN As OleDbParameter = cmd.Parameters.Add("@End_Odometer", OleDbType.Integer)
                    End_Odometer_IN.Direction = Data.ParameterDirection.Input

                    Dim Area_Visited_IN As OleDbParameter = cmd.Parameters.Add("@Area_Visited", OleDbType.VarWChar)
                    Area_Visited_IN.Direction = Data.ParameterDirection.Input

                    Dim Project_Name_IN As OleDbParameter = cmd.Parameters.Add("@Project_Name", OleDbType.VarWChar)
                    Project_Name_IN.Direction = Data.ParameterDirection.Input

                    Dim CCWNC_MilesDriven_IN As OleDbParameter = cmd.Parameters.Add("@CCWNC_MilesDriven", OleDbType.Integer)
                    CCWNC_MilesDriven_IN.Direction = Data.ParameterDirection.Input

                    Dim Project_MilesDriven_IN As OleDbParameter = cmd.Parameters.Add("@Project_MilesDriven", OleDbType.Integer)
                    Project_MilesDriven_IN.Direction = Data.ParameterDirection.Input

                    Dim CCWNC_Amount_IN As OleDbParameter = cmd.Parameters.Add("@CCWNC_Amount", OleDbType.Decimal)
                    CCWNC_Amount_IN.Direction = Data.ParameterDirection.Input

                    Dim Project_Amount_IN As OleDbParameter = cmd.Parameters.Add("@Project_Amount", OleDbType.Decimal)
                    Project_Amount_IN.Direction = Data.ParameterDirection.Input

                    Dim Hours_IN As OleDbParameter = cmd.Parameters.Add("@Hours", OleDbType.Decimal)
                    Hours_IN.Direction = Data.ParameterDirection.Input

                    FORM_0001_T0_FK_IN.Value = iFORM_0001_T0_FK
                    DateOfTrip_IN.Value = DateOfTrip
                    Begin_Odometer_IN.Value = Begin_Odometer
                    End_Odometer_IN.Value = End_Odometer
                    Area_Visited_IN.Value = Area_Visited
                    Project_Name_IN.Value = Project_Name
                    CCWNC_MilesDriven_IN.Value = CCWNC_MilesDriven
                    Project_MilesDriven_IN.Value = Project_MilesDriven
                    CCWNC_Amount_IN.Value = CCWNC_Amount
                    Project_Amount_IN.Value = Project_Amount
                    Hours_IN.Value = Hours



                    conn.Open()

                    cmd.ExecuteScalar()
                    'cmd.ExecuteNonQuery()

                    iReturnPK = RetValue.Value

                End Using

            Catch ex As Exception

                MessageBox.Show(ex.Message, "fn_AddDetail_ReturnDetailPK - An error occurred", _
                  MessageBoxButtons.OK, MessageBoxIcon.Error)

            Finally



            End Try
            Return iReturnPK
        End Function

        Public Function fn_AddHeader_ReturnHeaderPK() As Integer
            'fixed 5/13/2013

            Dim mainDS As XPathNavigator = MainDataSource.CreateNavigator()
            Dim iReturnPK As Integer = 0

            'input Values
            Dim Date_Submitted_By_Employee As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:TodaysDate", NamespaceManager).Value
            Dim Employee_Name As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:EmployeeName", NamespaceManager).Value
            Dim DB2_T9_FK_employee As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:DB2_T9_FK_employee", NamespaceManager).Value
            Dim Supervisor_Name As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:SupervisorName", NamespaceManager).Value
            Dim DB2_T9_FK_supervisor As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:DB2_T9_FK_supervisor", NamespaceManager).Value
            'Dim SupervisorEmailAddress As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:SupervisorEmailAddress", NamespaceManager).Value
            Dim CCWNC_MilesDriven_TOTAL As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:CCWNC_MilesDriven_TOTAL", NamespaceManager).Value
            Dim PROJ_MilesDriven_TOTAL As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:PROJ_MilesDriven_TOTAL", NamespaceManager).Value
            Dim Project_Hours_TOTAL As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:Project_Hours_TOTAL", NamespaceManager).Value
            Dim MilesDriven_GRAND_TOTAL As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:MilesDriven_GRAND_TOTAL", NamespaceManager).Value
            Dim CCWNC_Amount_TOTAL As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:CCWNC_Amount_TOTAL", NamespaceManager).Value
            Dim PROJ_Amount_TOTAL As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:PROJ_Amount_TOTAL", NamespaceManager).Value
            Dim Amount_GRAND_TOTAL As String = mainDS.SelectSingleNode("/my:myFields/my:EmployeeSection/my:F0001_Header/my:Amount_GRAND_TOTAL", NamespaceManager).Value

            Dim conn As OleDbConnection = c_DataSource.Get_SQL_Connection
            Dim cmd As OleDbCommand = New OleDbCommand("prj_0024_FORM_0001_SP_01_AddRecordTo_T0", conn)
            cmd.CommandType = System.Data.CommandType.StoredProcedure

            Dim RetValue As OleDbParameter = cmd.Parameters.Add("RetValue", OleDbType.Integer)
            RetValue.Direction = Data.ParameterDirection.ReturnValue

            '---------------------------------------------------
            'SQL Date wants it in the format: YYYY-MM-DD
            'OleDbType.DBDate says it is in the format: YYYYMMDD
            Dim Date_Submitted_By_Employee_IN As OleDbParameter = cmd.Parameters.Add("@Date_Submitted_By_Employee", OleDbType.DBDate)
            Date_Submitted_By_Employee_IN.Direction = Data.ParameterDirection.Input
            '---------------------------------------------------

            Dim Employee_Name_IN As OleDbParameter = cmd.Parameters.Add("@Employee_Name", OleDbType.VarWChar)
            Employee_Name_IN.Direction = Data.ParameterDirection.Input

            Dim DB2_T9_FK_employee_IN As OleDbParameter = cmd.Parameters.Add("@DB2_T9_FK_employee", OleDbType.Integer)
            DB2_T9_FK_employee_IN.Direction = Data.ParameterDirection.Input

            Dim Supervisor_Name_IN As OleDbParameter = cmd.Parameters.Add("@Supervisor_Name", OleDbType.VarWChar)
            Supervisor_Name_IN.Direction = Data.ParameterDirection.Input

            Dim DB2_T9_FK_supervisor_IN As OleDbParameter = cmd.Parameters.Add("@DB2_T9_FK_supervisor", OleDbType.Integer)
            DB2_T9_FK_supervisor_IN.Direction = Data.ParameterDirection.Input

            Dim CCWNC_MilesDriven_TOTAL_IN As OleDbParameter = cmd.Parameters.Add("@CCWNC_MilesDriven_TOTAL", OleDbType.Integer)
            CCWNC_MilesDriven_TOTAL_IN.Direction = Data.ParameterDirection.Input

            Dim PROJ_MilesDriven_TOTAL_IN As OleDbParameter = cmd.Parameters.Add("@PROJ_MilesDriven_TOTAL", OleDbType.Integer)
            PROJ_MilesDriven_TOTAL_IN.Direction = Data.ParameterDirection.Input

            '---
            Dim Project_Hours_TOTAL_IN As OleDbParameter = cmd.Parameters.Add("@PROJ_Hours_TOTAL", OleDbType.Decimal)
            Project_Hours_TOTAL_IN.Direction = Data.ParameterDirection.Input
            '---

            Dim MilesDriven_GRAND_TOTAL_IN As OleDbParameter = cmd.Parameters.Add("@MilesDriven_GRAND_TOTAL", OleDbType.Integer)
            MilesDriven_GRAND_TOTAL_IN.Direction = Data.ParameterDirection.Input

            Dim CCWNC_Amount_TOTAL_IN As OleDbParameter = cmd.Parameters.Add("@CCWNC_Amount_TOTAL", OleDbType.Decimal)
            CCWNC_Amount_TOTAL_IN.Direction = Data.ParameterDirection.Input

            Dim PROJ_Amount_TOTAL_IN As OleDbParameter = cmd.Parameters.Add("@PROJ_Amount_TOTAL", OleDbType.Decimal)
            PROJ_Amount_TOTAL_IN.Direction = Data.ParameterDirection.Input


            Dim Amount_GRAND_TOTAL_IN As OleDbParameter = cmd.Parameters.Add("@Amount_GRAND_TOTAL", OleDbType.Decimal)
            Amount_GRAND_TOTAL_IN.Direction = Data.ParameterDirection.Input

            'Populate the Input values from the values obtained from the form:
            Date_Submitted_By_Employee_IN.Value = Date_Submitted_By_Employee
            Employee_Name_IN.Value = Employee_Name
            DB2_T9_FK_employee_IN.Value = DB2_T9_FK_employee
            Supervisor_Name_IN.Value = Supervisor_Name
            DB2_T9_FK_supervisor_IN.Value = DB2_T9_FK_supervisor
            CCWNC_MilesDriven_TOTAL_IN.Value = CCWNC_MilesDriven_TOTAL
            PROJ_MilesDriven_TOTAL_IN.Value = PROJ_MilesDriven_TOTAL
            Project_Hours_TOTAL_IN.Value = Project_Hours_TOTAL
            MilesDriven_GRAND_TOTAL_IN.Value = MilesDriven_GRAND_TOTAL
            CCWNC_Amount_TOTAL_IN.Value = CCWNC_Amount_TOTAL
            PROJ_Amount_TOTAL_IN.Value = PROJ_Amount_TOTAL
            Amount_GRAND_TOTAL_IN.Value = Amount_GRAND_TOTAL


            Try

                conn.Open()


                cmd.ExecuteScalar()
                'cmd.ExecuteNonQuery()

                iReturnPK = RetValue.Value

            Catch ex As Exception

                MessageBox.Show(ex.Message, "An error occurred", _
                  MessageBoxButtons.OK, MessageBoxIcon.Error)

            Finally

                conn.Close()

            End Try
            Return iReturnPK
        End Function

#End Region 'END: SQL OLEDB StoredProcedures








    End Class




End Namespace
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Misc</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Templates</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Misc</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Templates</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>    &lt;style&gt;
    
    /* ======== RESETS =========== */
    aside, article, section, header, footer, nav 
    	{
			display: block;
		}
		div, section, article, h1, h2, h3, p 
		{
			margin: 0;
			padding: 0;
		}

    /* ========= LINKS =========*/
           a:link
        {
            text-decoration: none;
            background: maroon;
            color: white;
            display: block;
            padding: 5px 10px;
            text-align: center;
            text-transform: uppercase;
            margin-bottom: 2px;
        }
        a:visited
        {
            color: black;
        }
        a:hover
        {
            background: brown;
        }
        a:active
        {
            background: green;
        }
        a:target
        {
            color: red;
        } 
		
    /* ======== Common  =========== */    
        
    	html
        {
        	/*layout*/
       	 
        	/*typography*/ 
        	           
        }
    
        body
        {
        	/*layout*/
       	 
        	/*typography*/ 
        	           
        }
        
        header 
        {
        	/*layout*/
       	 
        	/*typography*/ 
                
        }
        
       footer 
        {
        	/*layout*/
       	 
        	/*typography*/ 
                
        }
        
    /* ========= CONTENT Containers =========*/        
  
		  
		aside
        {
        	/*layout*/
       	 
        	/*typography*/ 
                
        }		
		   
		article
        {
        	/*layout*/
       	 
        	/*typography*/ 
                
        }
        		   
		section
        {
        	/*layout*/
       	 
        	/*typography*/ 
                
        }
        		   
		nav
        {
        	/*layout*/
       	 
        	/*typography*/ 
                
        }
          
		h1 
        {
        	/*layout*/
       	 
        	/*typography*/ 
                
        }
        		
		p 
        {
        	/*layout*/
       	 
        	/*typography*/ 
                
        }
        		
		h2 
        {
        	/*layout*/
       	 
        	/*typography*/ 
                
        }
        		
		h3 
        {
        	/*layout*/
       	 
        	/*typography*/ 
                
        }
        
        		 
  	    div 
        {
        	/*layout*/
       	 
        	/*typography*/ 
                
        }
  

    
&lt;/style&gt;    
    
//////////////////////////////////////////    
    &lt;style&gt;
        body
        {
        	/*layout*/
        	 margin: 50px 0 0 50px;
        	 
        	/*typography*/ 
            font-family: Arial;
            font-size: 100%;
           
        }
        ul
        {
            list-style: none;

        }
        li
        {
            margin: 0;
            padding: 0;
            width: 175px;
        }
        /* no white space allowed for 'link' */
        /* 'link' refers to the presence of the href attribute */
        /* Love-Hate: order must be: Link, Visited,Hover,active */
        a:link
        {
            text-decoration: none;
            background: maroon;
            color: white;
            display: block;
            padding: 5px 10px;
            text-align: center;
            text-transform: uppercase;
            margin-bottom: 2px;
        }
        a:visited
        {
            color: black;
        }
        a:hover
        {
            background: brown;
        }
        a:active
        {
            background: green;
        }
        a:target
        {
            color: red;
        }
        /*add styles here*/
    &lt;/style&gt;


&lt;style&gt;
   body {
	   font-family: Georgia;
	   }
   
       h1  {
		   font-size: 18px;
	   }
	   
	   h2 {
		   font-size: 16px;
	   }
	   
	   p {
		   font-size: 14px;
	   }
	   
	    div {
	    background-color: #ccc;
	    padding: 10px;
	   }
	   
&lt;/style&gt;</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Property</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>display_block_inline_listItem</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Property</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>display_block_inline_listItem</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
/* this way the span stays right in line with the other text */
span#mySpan
{
background-color:red;
display:inline;
}


/* this way the span goes to a seperate line (or block) */
span#mySpan
{
background-color:red;
display:block;
}

/* This way there is actually a dot for the item, and  like block, it is on a seperate line */
span#mySpan
{
background-color:red;
display:list-item;
}</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Selector</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Element_Selectors</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Selector</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Element_Selectors</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8"&gt;
        &lt;title&gt;Element selectors&lt;/title&gt;
        &lt;!--[if lt IE 9]&gt;
        &lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
        &lt;![endif]--&gt;
        &lt;style&gt;
            aside, article, section, header, footer, nav {
	                                                        display: block;
                                                         }
            aside {
	                width: 300px;
	                border: 1px solid #000;
	                padding: 20px;
                    }
            /*add styles here*/
            body {
	                font-family: Arial;
	                font-size: 90%;
                    }
            h1 {
	                font-family: Georgia;
	                font-size: 1.8em;
	                font-weight: normal;
                }
            h2 {
	                font-family: Georgia;
	                font-size: 1.4em;
	                font-weight: normal;
                }
            p {
	                font-size: 1em;
	                color: brown;
                }
        &lt;/style&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;article&gt;
        &lt;h1&gt;This is the page's main headline&lt;/h1&gt;
        &lt;p&gt;This is a paragraph inside the main content&lt;/p&gt;
        &lt;p&gt;This is another paragraph&lt;/p&gt;
        &lt;h2&gt;This is a subheading, a heading 2&lt;/h2&gt;
        &lt;p&gt;This is more paragraph text&lt;/p&gt;
            &lt;aside&gt;
            &lt;h2&gt;This is a heading 2 inside an aside&lt;/h2&gt;
            &lt;p&gt;This is paragraph content inside the aside element&lt;/p&gt;
        &lt;/aside&gt;
    &lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Selector</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Class_Selector</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Selector</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Class_Selector</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Note: Classes can be used multiple times



&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8"&gt;
        &lt;title&gt;Class selectors&lt;/title&gt;
        &lt;!--[if lt IE 9]&gt;
        &lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
        &lt;![endif]--&gt;
        &lt;style&gt;
            aside, article, section, header, footer, nav {
	            display: block;
            }
            aside {
	            width: 300px;
	            border: 1px solid #000;
	            padding: 20px;
	            margin-bottom: 20px;
            }
            body {
	            font-family: Arial;
	            font-size: 90%;
            }
            h1 {
	            font-family: Georgia;
	            font-size: 1.8em;
	            font-weight: normal;
            }
            h2 {
	            font-family: Georgia;
	            font-size: 1.4em;
	            font-weight: normal;
            }
            p {
	            font-size: 1em;
            }
            /* The period indicates that it is a class */
            .aside1 {
	            border: 1px solid green;
            }
            .aside2 {
	            border: 1px solid red;
            }
            .blueHeading {
	            color: blue;
            }
            .greenHeading {
	            color: green;
            }
            .redHeading {
	            color: red;
            }
        &lt;/style&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;article&gt;

            &lt;h1 class="blueHeading"&gt;This is the page's main headline&lt;/h1&gt;

            &lt;p&gt;This is a paragraph inside the main content&lt;/p&gt;
            &lt;p&gt;This is another paragraph&lt;/p&gt;

            &lt;h2 class="blueHeading"&gt;This is a subheading, a heading 2&lt;/h2&gt;

            &lt;p&gt;This is more paragraph text&lt;/p&gt;

            &lt;!-- Note the Class --&gt;
            &lt;aside class="aside1"&gt;

                &lt;h2 class="greenHeading"&gt;This is the first aside's heading&lt;/h2&gt;
                &lt;p&gt;This aside discusses upcoming events&lt;/p&gt;

            &lt;/aside&gt;

            &lt;!-- Note the Class --&gt;
            &lt;aside class="aside2"&gt;

                &lt;h2 class="redHeading"&gt;This is the second aside's heading&lt;/h2&gt;
                &lt;p&gt;This aside discusses featured specials&lt;/p&gt;

            &lt;/aside&gt;
        &lt;/article&gt;
    &lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Selector</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>ID_Selector</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Selector</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>ID_Selector</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Note: IDs must be unique on a page, it over-rides a class selector b/c it is specific



&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
    &lt;head&gt;
        &lt;meta charset="UTF-8"&gt;
        &lt;title&gt;ID selectors&lt;/title&gt;
        &lt;!--[if lt IE 9]&gt;
            &lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
        &lt;![endif]--&gt;
        &lt;style&gt;
            aside, article, section, header, footer, nav {
	            display: block;
            }
            aside {
	            width: 300px;
	            border: 1px solid #000;
	            padding: 20px;
	            margin-bottom: 20px;
            }
            body {
	            font-family: Arial;
	            font-size: 90%;
            }
            h1 {
	            font-family: Georgia;
	            font-size: 1.8em;
	            font-weight: normal;
            }
            h2 {
	            font-family: Georgia;
	            font-size: 1.4em;
	            font-weight: normal;
            }
            p {
	            font-size: 1em;
            }
            /*ID selectors start with a pound symbol: #*/
            #aside1 {
	                    background: beige;
                    }
            #aside2 {
	                    background: tan;
                    }
        &lt;/style&gt;
    &lt;/head&gt;
    &lt;body&gt;
        &lt;article&gt;
            &lt;h1&gt;This is the page's main headline&lt;/h1&gt;
            &lt;p&gt;This is a paragraph inside the main content&lt;/p&gt;
            &lt;p&gt;This is another paragraph&lt;/p&gt;
            &lt;h2&gt;This is a subheading, a heading 2&lt;/h2&gt;
            &lt;p&gt;This is more paragraph text&lt;/p&gt;
            &lt;aside id="aside1"&gt;
                &lt;h2&gt;This is the first aside's heading&lt;/h2&gt;
                &lt;p&gt;This aside discusses upcoming events&lt;/p&gt;
            &lt;/aside&gt;
            &lt;aside id="aside2"&gt;
                &lt;h2&gt;This is the second aside's heading&lt;/h2&gt;
                &lt;p&gt;This aside discusses featured specials&lt;/p&gt;
            &lt;/aside&gt;
        &lt;/article&gt;
    &lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Selector</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Group_Selector</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Selector</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Group_Selector</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;grouping selectors&lt;/title&gt;
    &lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
    &lt;style&gt;
        /* This is the group selector, i.e. use commas ',' between the selectors */
        aside, article, section, header, footer, nav
        {
            display: block;
        }
        aside
        {
            width: 300px;
            border: 1px solid #000;
            padding: 20px;
            margin-bottom: 20px;
        }
        body
        {
            font-family: Arial;
            font-size: 90%;
        }
        h1
        {
            color: red;
        }
        /* This is the group selector, i.e. use commas ',' between the selectors */
        h1, h2
        {
            font-family: Georgia;
            font-size: 1.4em;
            font-weight: normal;
        }
        p
        {
            font-size: 1em;
        }
        /*add styles here*/
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;article&gt;
&lt;h1&gt;This is the page's main headline&lt;/h1&gt;
&lt;p&gt;This is a paragraph inside the main content&lt;/p&gt;
&lt;p&gt;This is another paragraph&lt;/p&gt;
&lt;h2&gt;This is a subheading, a heading 2&lt;/h2&gt;
&lt;p&gt;This is more paragraph text&lt;/p&gt;
&lt;aside&gt;
&lt;h2&gt;This is the first aside's heading&lt;/h2&gt;
&lt;p&gt;This aside discusses upcoming events&lt;/p&gt;
&lt;/aside&gt;
&lt;aside&gt;
&lt;h2&gt;This is the second aside's heading&lt;/h2&gt;
&lt;p&gt;This aside discusses featured specials&lt;/p&gt;
&lt;/aside&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Selector</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Descendent_Selector</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Selector</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Descendent_Selector</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Descendent selectors are most usefull when you are aware of the general structure of your HTML
for "any and all" elements/class/ID that are children direct or not of the parent item

////////////small example ///////////////////////////////
    &lt;style&gt;

/*write a selector that changes the background of every 2nd list item in the unordered list that forms the archived gallery menu in the sidebar*/
aside nav li:nth-child(even) {
	background: rgb(237, 228, 214);
}

/*write a selector that will change the color of the main navigation links as users hover over them*/
#mainNav a:hover {
	color: rgb(219,126,64);
}

    &lt;/style&gt;
/////////////////////////////////////////////////////////
&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Descendent selectors&lt;/title&gt;
    &lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
    &lt;style&gt;
        aside, article, section, header, footer, nav
        {
            display: block;
        }
        html, body, h1, h2, h3, p
        {
            margin: 0;
            padding: 0;
        }
        html
        {
            background: gray;
        }
        body
        {
            font-family: Arial;
            font-size: 100%;
            width: 600px;
            background: white;
            margin: 0 auto;
        }
        article
        {
            padding: 0 25px;
        }
        aside
        {
            width: 300px;
            border: 1px solid #000;
            margin-bottom: 20px;
            font-size: 85%;
        }
        h1
        {
            font-family: Georgia;
            font-size: 1.8em;
            font-weight: normal;
            margin-bottom: 1em;
        }
        h2
        {
            font-family: Georgia;
            font-size: 1.4em;
            font-weight: normal;
            margin-bottom: 1em;
        }
        p
        {
            font-size: 1em;
            margin-bottom: 1em;
            line-height: 1.6;
        }
        footer
        {
            background: #42403E;
            padding: 10px 0;
            color: white;
            text-align: center;
        }
        /*descendent: find any and every H1 inside a Header element*/
        header h1
            {
                background: #42403E;
                text-align: center;
                line-height: 75px;
                color: white;
            }
        /*descendent: find every H2 inside an article element*/
        article h2
            {
                color: #7D6855;
            }
        /*descendent: find any and every H2 inside an .upcoming class*/            
        .upcoming h2
            {
                background: #7D6855;
                padding: 5px 0;
                text-align: center;
                color: white;
            }
        /*descendent: find any and every H2 inside a .specials class*/       
        .specials h2
            {
                background: #D1956D;
                padding: 5px 0;
                text-align: center;
                color: white;
            }
        /*descendent: find any and every p inside an aside class, inside an article element*/   
        /* high overhead w/ three levels, so better to use two levels if that would work */   
        article aside p
            {
                line-height: 1.2;
                margin: 0 15px 1em;
            }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;header&gt;
        &lt;h1&gt;This is the site's main heading&lt;/h1&gt;
    &lt;/header&gt;
    &lt;article&gt;
        &lt;h1&gt;This is the article's main headline&lt;/h1&gt;
        &lt;p&gt;This is a paragraph inside the main content. This text should be larger and have more line spacing than the text in the asides.&lt;/p&gt;
        &lt;p&gt;This is another paragraph. I need to have enough text in this paragraph to create multiple lines of text, so I can see the line spacing and space between paragraphs. Often people use lorem ipsum text to mock up several paragraphs of text. I considered using that here, but decided that you were probably tired of reading lorem ipsum text. It doesn't really mean anything anyway. Occasionally I'll feed it into Google's translator to see if anything comes out. Usually just single words, like "honey" or "shaded." It's like trying to read William S. Burroughs.&lt;/p&gt;
        &lt;h2&gt;This is a subheading&lt;/h2&gt;
        &lt;p&gt;This is more paragraph text&lt;/p&gt;
        &lt;aside class="upcoming"&gt;
            &lt;h2&gt;This is the first aside's heading&lt;/h2&gt;
            &lt;p&gt;This aside discusses upcoming events. I'd like these two asides to look very similar, but have subtle differences that allow you to tell which one is which.&lt;/p&gt;
        &lt;/aside&gt;
        &lt;aside class="specials"&gt;
            &lt;h2&gt;This is the second aside's heading&lt;/h2&gt;
            &lt;p&gt;This aside discusses featured specials. Again, it should be very similar to the previous aside, but have a few subtle styling differences. We could use the class values for both of them to do this.&lt;/p&gt;
        &lt;/aside&gt;
    &lt;/article&gt;
    &lt;footer&gt;
        &lt;p&gt;copyright and legal disclaimer&lt;/p&gt;
    &lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Selector</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Children_Selector</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Selector</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Children_Selector</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Only for elements/class/ID that are the direct children of the item,
	 not for "any and all" children

this has an example of a 'child' selector, and
an example of a child selector under a descendent selector

/////////small example /////////////////////////////////////////////////
    &lt;style&gt;
	/*write a selector that targets the dates inside the upcoming dates list on the index.htm page
		in this example the dates are inside 'span' which are inside 'li' 
	*/
	li &gt; span {
		font-weight: bold;
	}
    &lt;/style&gt;

///////////////////////////////////////////////////////////
&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;child selectors&lt;/title&gt;
    &lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
    &lt;style&gt;
        aside, article, section, header, footer, nav
        {
            display: block;
        }
        html, body, h1, h2, h3, p
        {
            margin: 0;
            padding: 0;
        }
        html
        {
            background: gray;
        }
        body
        {
            font-family: Arial;
            font-size: 100%;
            width: 600px;
            background: white;
            margin: 0 auto;
        }
        article
        {
            padding: 0 25px;
        }
        aside
        {
            width: 300px;
            border: 1px solid #000;
            margin-bottom: 20px;
            font-size: 85%;
            padding: 10px;
        }
        h1
        {
            font-family: Georgia;
            font-size: 1.8em;
            font-weight: normal;
            margin-bottom: 1em;
        }
        h2
        {
            font-family: Georgia;
            font-size: 1.4em;
            font-weight: normal;
            margin-bottom: .6em;
        }
        p
        {
            font-size: 1em;
            margin-bottom: 1em;
            line-height: 1.6;
        }
        footer
        {
            background: #42403E;
            padding: 10px 0;
            color: white;
            text-align: center;
        }
        /*add styles here*/
        header h1
        {
            background: #42403E;
            text-align: center;
            line-height: 75px;
            color: white;
        }
        aside p
        {
            line-height: 1.2;
        }
        
        /* child combinator: "&gt;" , with or without blank around the '&gt;' */
        article &gt; h2
        {
            color: #7D6855;
        }
        /* child combinator: "&gt;" , with or without blank around the '&gt;' */
        aside ol &gt; li
        {
            font-style: italic;
            color: red;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;header&gt;
&lt;h1&gt;This is the site's main heading&lt;/h1&gt;
&lt;/header&gt;
    &lt;article&gt;
&lt;h1&gt;This is the article's main headline&lt;/h1&gt;
&lt;p&gt;This is a paragraph inside the main content. This text should be larger and have more line spacing than the text in the asides.&lt;/p&gt;
&lt;p&gt;This is another paragraph. I need to have enough text in this paragraph to create multiple lines of text, so I can see the line spacing and space between paragraphs. Often people use lorem ipsum text to mock up several paragraphs of text. I considered using that here, but decided that you were probably tired of reading lorem ipsum text. It doesn't really mean anything anyway. Occasionally I'll feed it into Google's translator to see if anything comes out. Usually just single words, like "honey" or "shaded." It's like trying to read William S. Burroughs.&lt;/p&gt;
&lt;h2&gt;This is a subheading&lt;/h2&gt;
&lt;p&gt;This is more paragraph text&lt;/p&gt;
&lt;aside class="upcoming"&gt;
&lt;h2&gt;This is the first aside's heading&lt;/h2&gt;
&lt;p&gt;This aside discusses upcoming events. I'd like these two asides to look very similar, but have subtle differences that allow you to tell which one is which.&lt;/p&gt;
&lt;/aside&gt;
&lt;aside class="specials"&gt;
&lt;h2&gt;Featured specials&lt;/h2&gt;
&lt;p&gt;This aside discusses featured specials. Again, it should be very similar to the previous aside, but have a few subtle styling differences. We could use the class values for both of them to do this.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is a list of specials&lt;/li&gt;
&lt;li&gt;Each item is a separate special
&lt;ol&gt;&lt;li&gt;point one&lt;/li&gt;
&lt;li&gt;point two&lt;/li&gt;
&lt;li&gt;point three&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;The final point&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;h2&gt;Subheading for upcoming dates&lt;/h2&gt;
&lt;p&gt;paragraph text explaining something like how to participate in upcoming events&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;upcoming date 1&lt;/li&gt;
&lt;li&gt;upcoming date 2
&lt;ol&gt;
&lt;li&gt;appearance 1&lt;/li&gt;
&lt;li&gt;appearance 2&lt;/li&gt;
&lt;li&gt;appearance 3&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;final date&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;
    &lt;footer&gt;
&lt;p&gt;copyright and legal disclaimer&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Selector</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Adjacent_Selector</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Selector</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Adjacent_Selector</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Adjacent selectors let you pick out elements based on which element came before it
in the document, providing that both elements are inside the same parent

This example includes a grouped Adjacent selector, i.e. a group of two different Adjacent Selectors

Helps you avoid unecessary Class atributes

&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;child selectors&lt;/title&gt;
    &lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
    &lt;style&gt;
        aside, article, section, header, footer, nav
        {
            display: block;
        }
        html, body, h1, h2, h3, p
        {
            margin: 0;
            padding: 0;
        }
        html
        {
            background: gray;
        }
        body
        {
            font-family: Arial;
            font-size: 100%;
            width: 600px;
            background: white;
            margin: 0 auto;
        }
        article
        {
            padding: 0 25px;
        }
        aside
        {
            width: 300px;
            border: 1px solid #000;
            margin-bottom: 20px;
            font-size: 85%;
            padding: 10px;
        }
        h1
        {
            font-family: Georgia;
            font-size: 1.8em;
            font-weight: normal;
            margin-top: 1em;
        }
        h2
        {
            font-family: Georgia;
            font-size: 1.4em;
            font-weight: normal;
            margin-bottom: 0;
            color: #42403E;
            border-bottom: 1px solid #42403E;
        }
        p
        {
            font-size: 1em;
            margin-bottom: 1em;
            line-height: 1.6;
        }
        footer
        {
            background: #42403E;
            padding: 10px 0;
            color: white;
            text-align: center;
        }
        header h1
        {
            background: #42403E;
            text-align: center;
            line-height: 75px;
            color: white;
        }
        /* Grouped example of adjacent combinators
         adjacent combinator, white space around operator does not matter/
         find Paragraphs (p) that follow either Header-1 or Header-2, 
            as long as they are in the same parent
        */
        h1 + p, h2 + p
        {
            margin-top: .6em;
            font-style: italic;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;header&gt;
&lt;h1&gt;This is the site's main heading&lt;/h1&gt;
&lt;/header&gt;
    &lt;article&gt;
&lt;h1&gt;This is the article's main headline&lt;/h1&gt;
&lt;p&gt;This is a paragraph inside the main content. This text should be larger and have more line spacing than the text in the asides.&lt;/p&gt;
&lt;p&gt;This is another paragraph. I need to have enough text in this paragraph to create multiple lines of text, so I can see the line spacing and space between paragraphs. Often people use lorem ipsum text to mock up several paragraphs of text. I considered using that here, but decided that you were probably tired of reading lorem ipsum text. It doesn't really mean anything anyway. Occasionally I'll feed it into Google's translator to see if anything comes out. Usually just single words, like "honey" or "shaded." It's like trying to read William S. Burroughs.&lt;/p&gt;
&lt;h2&gt;This is a subheading&lt;/h2&gt;
&lt;p&gt;This is more paragraph text. I'd like to do something special with the first paragraph after a subheading. Perhaps italicize it, or adjust the margin between them.&lt;/p&gt;
&lt;p&gt;This is another paragraph, more body copy that follows the subheading, but it is not directly after it, so I don't want it to receive the same styling as the paragraph above it.&lt;/p&gt;
&lt;p&gt;Yet another body copy paragraph, this one is only here to add weight to the styling.&lt;/p&gt;
&lt;h2&gt;Another subheading&lt;/h2&gt;
&lt;p&gt;Since this is directly after a heading 2, and is both are inside the same parent element, I expect it to get the same styling.&lt;/p&gt;
&lt;p&gt;Adjacent selectors are also really good at styling commonly repeating structures, like complex blockquotes or sidebars that have the same structure over and over. Adjacent selectors allow you to consistently target elements within those structures without having to resort to class attributes for styling.&lt;/p&gt;
&lt;/article&gt;
    &lt;footer&gt;
&lt;p&gt;copyright and legal disclaimer&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Selector</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Dynamic_Pseudo-Class_Selector</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Selector</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Dynamic_Pseudo-Class_Selector</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;Pseudo-class selectors&lt;/title&gt;
    &lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
    &lt;style&gt;
        body
        {
            font-family: Arial;
            font-size: 100%;
            margin: 50px 0 0 50px;
        }
        ul
        {
            list-style: none;
            margin: 0 0 50px;
            padding: 0;
        }
        li
        {
            margin: 0;
            padding: 0;
            width: 175px;
        }
        /* no white space allowed for 'link' */
        /* 'link' refers to the presence of the href attribute */
        a:link
        {
            text-decoration: none;
            background: maroon;
            color: white;
            display: block;
            padding: 5px 10px;
            text-align: center;
            text-transform: uppercase;
            margin-bottom: 2px;
        }
        a:visited
        {
            color: black;
        }
        a:hover
        {
            background: brown;
        }
        a:active
        {
            background: green;
        }
        /* target has to do with the URL to a bookmark or anchor on the page
            done by createing a URL and appending: pound sign (#) followed by the ID
            in our case the ID could equal 'target' but it could be any ID
         */
        a:target
        {
            color: red;
        }
        /*add styles here*/
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;ul&gt;
        &lt;li&gt;&lt;a href="products.htm" title="products"&gt;+Products&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="about.htm" title="about us"&gt;About&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="contact.htm" title="contact us"&gt;Contact&lt;/a&gt;&lt;/li&gt;
        &lt;li&gt;&lt;a href="register.htm" title="sign up!"&gt;Register&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;p&gt;
        &lt;a id="target"&gt;Target&lt;/a&gt;&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Selector</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Structural_Pseudo-Class_Selectors</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Selector</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Structural_Pseudo-Class_Selectors</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>e.g. first child, last child

&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;title&gt;structural pseudo-class selectors&lt;/title&gt;
    &lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
    &lt;style&gt;
        aside, article, section, header, footer, nav
        {
            display: block;
        }
        html, body, h1, h2, h3, p
        {
            margin: 0;
            padding: 0;
        }
        html
        {
            background: gray;
        }
        body
        {
            font-family: Arial;
            font-size: 100%;
            width: 600px;
            background: white;
            margin: 0 auto;
        }
        article
        {
            padding: 0 25px;
        }
        aside
        {
            width: 300px;
            border: 1px solid #000;
            margin-bottom: 20px;
            font-size: 85%;
            padding: 10px;
        }
        h1
        {
            font-family: Georgia;
            font-size: 1.8em;
            font-weight: normal;
            margin-top: 1em;
        }
        h2
        {
            font-family: Georgia;
            font-size: 1.4em;
            font-weight: normal;
            margin-bottom: 0;
            color: #42403E;
        }
        p
        {
            font-size: 1em;
            margin-bottom: 1em;
            line-height: 1.6;
        }
        footer
        {
            background: #42403E;
            padding: 10px 0;
            color: white;
            text-align: center;
        }
        header h1
        {
            background: #42403E;
            text-align: center;
            line-height: 75px;
            color: white;
        }
        h1 + p, h2 + p
        {
            margin-top: .6em;
        }
        
        
        /*First child of it's parent paragraph*/
        
        span:first-child
        {
            font-size: 1.3em;
            font-weight: bold;
            color: maroon;
        }
        
        /* find the h2, that are the first h2 inside a parent element */
        h2:first-of-type
        {
            border-bottom: 1px solid #42403E;
        }
        
        /* when it is the only child of the parent element */
        p:only-child
        {
            font-style: italic;
            text-align: center;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;header&gt;
  &lt;h1&gt;This is the site's main heading&lt;/h1&gt;
&lt;/header&gt;
    &lt;article&gt;
  &lt;section&gt;
    &lt;h1&gt;This is the article's main headline&lt;/h1&gt;
    &lt;p&gt;&lt;span&gt;This is a paragraph&lt;/span&gt; inside the main content. This text should be larger and have more line spacing than the text in the asides I'd also like the first part of each section to stand out..&lt;/p&gt;
    &lt;p&gt;This is another paragraph. I need to have enough text in this paragraph to create multiple lines of text, so I can see the line spacing and space between paragraphs. Often people use lorem ipsum text to mock up several paragraphs of text. I considered using that here, but decided that you were probably tired of reading lorem ipsum text. It doesn't really mean anything anyway. Occasionally I'll feed it into Google's translator to see if anything comes out. Usually just single words, like "honey" or "shaded." It's like trying to read William S. Burroughs.&lt;/p&gt;
  &lt;/section&gt;
  &lt;section&gt;
    &lt;h2&gt;This is a subheading&lt;/h2&gt;
    &lt;p&gt;&lt;span&gt;This is more paragraph&lt;/span&gt; text. I'd like to do something special with the first paragraph after a subheading. Perhaps italicize it, or adjust the margin between them.&lt;/p&gt;
    &lt;p&gt;This is another paragraph, more body copy that follows the subheading, but it is not directly after it, so I don't want it to receive the same styling as the paragraph above it.&lt;/p&gt;
    &lt;h2&gt;Another subheading, but NOT the first in the section.&lt;/h2&gt;
    &lt;p&gt;Yet another body copy paragraph, this one is only here to add weight to the styling.&lt;/p&gt;
  &lt;/section&gt;
  &lt;section&gt;
    &lt;h2&gt;Another subheading&lt;/h2&gt;
    &lt;p&gt;&lt;span&gt;Since this is directly&lt;/span&gt; after a heading 2, and is both are inside the same parent element, I expect it to get the same styling.&lt;/p&gt;
    &lt;p&gt;Adjacent selectors are also really good at styling commonly repeating structures, like complex blockquotes or sidebars that have the same structure over and over. Adjacent selectors allow you to consistently target elements within those structures without having to resort to class attributes for styling.&lt;/p&gt;
  &lt;/section&gt;
  &lt;section&gt;
    &lt;p&gt;I am the only element within this section&lt;/p&gt;
  &lt;/section&gt;
&lt;/article&gt;
    &lt;footer&gt;
&lt;p&gt;copyright and legal disclaimer&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Selector</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Pseudo-element_Selectors</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Selector</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Pseudo-element_Selectors</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>reference for 'content': http://goo.gl/R2pPW
or: http://www.w3.org/TR/CSS2/generate.html#before-after-content

This example does a Large dropped first letter of a paragraph, though it does not look correct in IE10
	However it looks great in FireFox
	
This example also does shows the URL of the hyperlink after the actual hyperlink, using content	

/////////small examples////////////////////////////////////////////////////

/*write a selector that will add the usage text you see here at the end of the photos gallery*/
&lt;style&gt;
.photos::after {
	content: "All photos by James Williamson | used by permission";
	font-style: italic;
	text-align: right;
	margin: 0;
	padding: 0;
	display: block;
}
&lt;/style&gt;















/////////////////////////////////////////////////////////

&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;pseudo-element selectors&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}

html, body, h1, h2, h3, p {
	margin: 0;
	padding: 0;
}

html {
	background: gray;
}

body {
	font-family: Arial;
	font-size: 100%;
	width: 600px;
	background: white;
	margin: 0 auto;
}

article {
	padding: 0 25px;
}

aside {
	width: 300px;
	border: 1px solid #000;
	margin-bottom: 20px;
	font-size: 85%;
	padding: 10px;
}

h1 {
	font-family: Georgia;
	font-size: 1.8em;
	font-weight: normal;
	margin-top: 1em;
}

h2 {
	font-family: Georgia;
	font-size: 1.4em;
	font-weight: normal;
	margin-bottom: 0;
	color: #42403E;
	border-bottom: 1px solid #42403E;
}

p {
	font-size: 1em;
	margin-bottom: 1em;
	line-height: 1.6;
}

footer {
	background: #42403E;
	padding: 10px 0;
	color: white;
	text-align: center;
}

header h1 {
	background: #42403E;
	text-align: center;
	line-height: 75px;
	color: white;
}


h1 + p, h2 + p {
	margin-top: .6em;
}


a {
	color: red;
	text-decoration: none;
}

/*   Pseudo-element selectors   */
/* 
    The semicolon (:) was used for the pseudo-class selector
        now the double double semicolon (::) is used to refer to the pseudo-element selector
        { This is the newer CSS3 syntax, but does not work for old browsers}
 */
 
/* These are for all paragraphs ==================   */


/*
p::first-line {
	font-family:Georgia;
	font-style: italic;
}





p::first-letter{
	font-size: 3em;
	font-family: Georgia;
	float: left;

	padding-top:10px;
    padding-bottom:5px;
    padding-right:0px;
    padding-left:0px;
}
*/ 


/* This does it just where the 'p' follows the 'h1' ======================  */
h1 + p::first-line {
	font-family:Georgia;
	font-style: italic;
}
h1 + p::first-letter{
	font-size: 3em;
	font-family: Georgia;
	float: left;
	padding:10px 5px 0 0;
}

/* Generated content, not in the DOM, nor seen by scripting ================== */
/* put's the attribute property on the page, before or after the element */


/* this puts the string: "  (outside link) " after the 'a' element */
a::after {
	content: "  (outside link) ";
	color: #333;
	font-size:.8em;
}

/* uses the attr and concatenation of the strings
    shows the URL after the hyper-linked element 
*/

a::after {
	content: " [" attr(href) "]";
	color: #666;
}
*/


&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header&gt;
  &lt;h1&gt;This is the site's main heading&lt;/h1&gt;
&lt;/header&gt;
&lt;article&gt;
  &lt;section&gt;
    &lt;h1&gt;This is the article's main headline&lt;/h1&gt;
    &lt;p&gt;This is a paragraph inside the main content. I would like to have a drop-cap for this paragraph, and italicize the first line. This should give me dramatic effect I'm looking for. It's not that I like drama, just that I need a little more text here, and wanted to show a more real-world example of pseudo-element selectors can help you write more efficient styles.&lt;/p&gt;
    &lt;p&gt;This is another paragraph. I need to have enough text in this paragraph to create multiple lines of text, so I can see the line spacing and space between paragraphs. Often people use lorem ipsum text to mock up several paragraphs of text. I considered using that here, but decided that you were probably tired of reading lorem ipsum text. It doesn't really mean anything anyway. Occasionally I'll feed it into Google's translator to see if anything comes out. Usually just single words, like "honey" or "shaded." It's like trying to read William S. Burroughs.&lt;/p&gt;
  &lt;/section&gt;
  &lt;section&gt;
  &lt;p&gt;&lt;a href="http://www.lynda.com" title="visit lynda.com"&gt;Article reference&lt;/a&gt;&lt;/p&gt;
  &lt;/section&gt;
&lt;/article&gt;
&lt;footer&gt;
&lt;p&gt;copyright and legal disclaimer.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Text_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>@font-face</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Text_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>@font-face</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Note: can keep the font files in the folder: _fonts
reference: http://www.fontspring.com/blog/the-new-bulletproof-font-face-syntax
			http://www.fontsquirrel.com/ (have to host them on your own site)


&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;Using web fonts&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
/*font family declarations must show up at the top of the style section
order matters: 
Normal
Italic
bold
Bold italic
*/

/* Use this one when normal */
@font-face {
	font-family: 'Cantarell';
	src: url('_fonts/Cantarell-Regular-webfont.eot');
	src: url('_fonts/Cantarell-Regular-webfont.eot?#iefix') format('embedded-opentype'), url('_fonts/Cantarell-Regular-webfont.woff') format('woff'), url('_fonts/Cantarell-Regular-webfont.ttf') format('truetype'), url('_fonts/Cantarell-Regular-webfont.svg#webfont9UOzsjXz') format('svg');
	font-weight: normal;
	font-style:normal;
}

/* Use this one when italic */
@font-face {
	font-family: 'Cantarell';
	src: url('_fonts/Cantarell-Oblique-webfont.eot');
	src: url('_fonts/Cantarell-Oblique-webfont.eot?#iefix') format('embedded-opentype'), url('_fonts/Cantarell-Oblique-webfont.woff') format('woff'), url('_fonts/Cantarell-Oblique-webfont.ttf') format('truetype'), url('_fonts/Cantarell-Oblique-webfont.svg#webfontRl4nowrT') format('svg');
	font-weight: normal;
	font-style:italic;
}

/* Use this one when bold */
@font-face {
	font-family: 'Cantarell';
	src: url('_fonts/Cantarell-Bold-webfont.eot');
	src: url('_fonts/Cantarell-Bold-webfont.eot?#iefix') format('embedded-opentype'), url('_fonts/Cantarell-Bold-webfont.woff') format('woff'), url('_fonts/Cantarell-Bold-webfont.ttf') format('truetype'), url('_fonts/Cantarell-Bold-webfont.svg#webfontKr2CkGZp') format('svg');
	font-weight: bold;
	font-style:normal;
}

/* Use this one when bold/italic */
@font-face {
	font-family: 'Cantarell';
	src: url('_fonts/Cantarell-BoldOblique-webfont.eot');
	src: url('_fonts/Cantarell-BoldOblique-webfont.eot?#iefix') format('embedded-opentype'), url('_fonts/Cantarell-BoldOblique-webfont.woff') format('woff'), url('_fonts/Cantarell-BoldOblique-webfont.ttf') format('truetype'), url('_fonts/Cantarell-BoldOblique-webfont.svg#webfontQ1aSR0ux') format('svg');
	font-weight: bold;
	font-style:italic;
}
aside, article, section, header, footer, nav {
	display: block;
}
body {
	width: 600px;
	font-family: Cantarell, Arial, Helvetica, sans-serif;   /* &lt;== using it here! */
}
/*add styles here*/
a {
	font-style: italic;   /* &lt;== using italic here! */
}

&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;article&gt;
&lt;h1&gt;Setting the font-family property.&lt;/h1&gt;
&lt;p&gt;Designers can now choose between system fonts, and web fonts when defining which fonts to use on a page. System fonts are the common fonts shipped with most operating systems; fonts such as Arial, Helvetica, Verdana, Georgia, Times New Roman, and others. When using system fonts, you are relying on the client machine to have the font installed. This saves overhead, and allows you to rely on fonts that have a long and solid track record.&lt;/p&gt;
&lt;p&gt;Web fonts, on the other hand, allow designers to use the @font-face inline rule to define a font-family to use within the page. The font is an external resource that the browser then requests and uses on the page. This allows designers to use any font they want, without having to worry about whether or not it's installed on the client machine. This technique requires that the designer either host the font themselves, or use one of the many font hosting services available. For more information on @font-face, check out my lynda.com title, &lt;a href="http://www.lynda.com/Web-Design-tutorials/web-fonts-first-look/73564-2.html" target="_blank" title="Web Fonts First Look"&gt;Web Fonts First Look.&lt;/a&gt;&lt;/p&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Text_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Text_Decoration</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Text_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Text_Decoration</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;text decoration&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
body {
	width: 600px;
	font-family: Arial, Helvetica, sans-serif;
	font-size: 100%;
	line-height: 1.5;
}
/*add styles here*/
h1 {
	font-size: 1.6em;
}
p {
	font-size: 1em;
}
li a {
	text-decoration: none;	/* get rid of the underline */
}
.underline {
	text-decoration: underline;
}
.overline {
	text-decoration: overline;
}
.line {
	text-decoration: line-through;
}
.blink {
	text-decoration:blink;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;article&gt;
&lt;h1&gt;Text decoration&lt;/h1&gt;
&lt;p&gt;Using the text-decoration property, you can add special effects or formatting options to text. This can help you control whether text is underlined, strike throughed, or even... whether it blinks. That's right, blinks.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="http://www.lynda.com" title="no underline please" class="none"&gt;Undecorate me.&lt;/a&gt;&lt;/li&gt;
  &lt;li class="underline"&gt;Underline me.&lt;/li&gt;
  &lt;li class="overline"&gt;Overline me.&lt;/li&gt;
  &lt;li class="line"&gt;Line-through me.&lt;/li&gt;
  &lt;li class="blink"&gt;I want to BLINK!!!!!!!!!!&lt;/li&gt;
&lt;/ul&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Color</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>parts_Of_an_Element_RGBa_HSLa</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Color</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>parts_Of_an_Element_RGBa_HSLa</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>can't apply this to background images, just to foreground





&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;rgba &amp;amp; hsla&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
div, p {
	margin: 0;
	padding:0;
}
html {
	background: #ccc;
}
body {
	background: #ccc;
	padding: 2em;
	font: 100% Arial, Helvetica, sans-serif;
}
.wrapper {
	position:relative;
	width: 600px;
	background: #9cf url(_images/tweet_90.png);
	margin: 0 auto;
	padding: 25px 0;
}
/*add styles here*/
.banner1, .banner2 {
	width: 470px;
	height: 40px;
	margin: 0 auto 2em;
	background: #666;
	font-size: 1.6em;
	line-height: 40px;
	padding: 175px 0 0 15px;
	position: relative;
	left: 100px;
	border: 4px solid rgb(60, 60, 60);
}
.banner1 {
	background: rgba(102,0,0, .2);    /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; */
	color: rgb(255, 255, 255);
}
.banner2 {
	background: hsla(65, 80%, 50%, .6);    /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; */;
	color: hsl(65, 100%, 100%);
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class="wrapper"&gt;
&lt;div class="banner1"&gt;RGBA transparency&lt;/div&gt;
&lt;div class="banner2"&gt;HSLA transparency&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Misc</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Important_overRideOtherRules</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Misc</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Important_overRideOtherRules</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;specificity&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
body {
	font-family: Georgia;
	font-size: 120%;
}
/*add styles here*/
p {
	color: red !important; 
}
#mainContent p {
	color: green;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;section id="mainContent"&gt;
&lt;p style="color:purple"&gt;I am a paragraph nested inside a section. I also have a &lt;strong&gt;strong tag&lt;/strong&gt; nested inside of me.&lt;/p&gt;
&lt;/section&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Text_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Text_Alignment</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Text_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Text_Alignment</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;text alignment&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html {
	background-color: white;
}
body {
	width: 40%;
	margin: 0 auto;
	font: 100%/1.5 Georgia, "Times New Roman", Times, serif;
	background-color: yellow;
	padding:50px;
}
h1 {
	font-size: 1.8em;
}
h2 {
	font-size: 1.4em;
}
p {
	font-size: 1em;
	-moz-hyphens: auto;		     /* for experimental features use the 'user-agent' code */	
	-webkit-hyphens: auto;	     /* for experimental features use the 'user-agent' code */
	hyphens: auto;
}
/*add styles here*/
.left {
	text-align: left;
}
.right {
	text-align:right;
}
.center {
	text-align: center;
}
.justify {
	text-align:justify;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;article&gt;
&lt;h1&gt;Text alignment&lt;/h1&gt;
&lt;p&gt;For the most part, text alignment is pretty straightforward. You set alignment through the text-align property, which accepts the left, right, center, justify, or inherit values.&lt;/p&gt;
&lt;p class="left"&gt;Left alignment is the default alignment for most user agents and will be used if no text-align property is specified.&lt;/p&gt;
&lt;p class="right"&gt;Right alignment aligns the text to the right-most edge of the parent element.&lt;/p&gt;
&lt;p class="center"&gt;Center alignment centers each line of text within parent elements. Line breaks are determined by how the line fits into the parent element. The spacing between words is never adjusted for center aligned text.&lt;/p&gt;
&lt;p class="justify"&gt;Justify specifies that inline-level boxes (such as individual lines of text) within each element box align equally respective to the boxes' left and right sides. To do this, user agents are allowed to expand or contract the contents of inline boxes, although no algorithm is specified, leaving it up to the user agents to determine how to implement it.&lt;/p&gt;
&lt;p&gt;You can also control hyphenation by using the hyphen property. Let's say I used a lot of long compound words that will likely need hyphenation like bookkeeper, prerequisite, lighthouse, and lycanthrope. By using hyphens I can control how the browser controls hyphenation. This property is still experimental, so if we use it we'll need to us vendor-prefixes.&lt;/p&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Text_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Letter_and_Word_Spacing</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Text_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Letter_and_Word_Spacing</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>letter spacing = Tracking





&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;word and letter spacing&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html {
	background-color: white;
}
body {
	width: 60%;
	margin: 0 auto;
	font: 100%/1.5 "Deja Vu Sans" Constantia, Times, serif;
	background-color: tan;
	padding:50px;
}
h1 {
	font-size: 1.8em;
}
h2 {
	font-size: 1.4em;
}
p {
	font-size: 1em;
}
a {
	color: white;
}
/*add styles here*/
.letter {
	letter-spacing: 5px;    /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; */
}
.word {
	word-spacing: 10px;    /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; */;
}
h2.render, h2.speed {
	font-size: 60px;
	margin: 0;
}
.render {
	text-rendering: optimizeLegibility;    /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; This is actually SVG not CSS */
}
.speed {
	text-rendering: optimizeSpeed;    /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; This is actually SVG not CSS */
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;article&gt;
&lt;h1&gt;Word and letter spacing&lt;/h1&gt;
&lt;p&gt;CSS gives you control over word and letter spacing through the word-spacing and letter-spacing properties.&lt;/p&gt;
&lt;h2 class="letter"&gt;Practice using letter-spacing&lt;/h2&gt;
&lt;h2 class="word"&gt;Practice using word-spacing&lt;/h2&gt;
&lt;h2 class="render"&gt;Text rendering matters&lt;/h2&gt;
&lt;h2 class="speed"&gt;Text rendering matters&lt;/h2&gt;
&lt;p class="render"&gt;The addition of support for OpenType and TrueType fonts will eventually lead to expanded kerning capabilities when formatting your text. Although not everything that has been added to them is currently implemented by browsers, you can learn more about how typographic capabilities are evolving by reading through the &lt;a href="http://www.w3.org/TR/css3-text/" title="Text level 3" target="_blank"&gt;CSS Text Level 3&lt;/a&gt; and the &lt;a href="http://dev.w3.org/csswg/css3-fonts/" title="Fonts level 3" target="_blank"&gt;CSS Fonts Level 3&lt;/a&gt; specifications.&lt;/p&gt;
&lt;p class="render"&gt;Although it is not part of either specification, the text-render property (actually found in the &lt;a href="http://www.w3.org/TR/SVG11/painting.html#TextRenderingProperty" title="text rendering" target="_blank"&gt;SVG specification&lt;/a&gt;) allows you to improve the legibility of type through browser rendering. This can effect kerning pairs and the use of ligatures. &lt;/p&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Text_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Indentation</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Text_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Indentation</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;Text indenting&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html {
	background-color: white;
}
body {
	width: 40%;
	margin: 0 auto;
	font: 100%/1.5 Georgia, "Times New Roman", Times, serif;
	background-color: beige;
	padding:50px;
}
h1 {
	font-size: 1.8em;
}
h2 {
	font-size: 1.4em;
}
p {
	font-size: 1em;
}
/*add styles here*/
p {
	text-indent: 1em;   /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;   */
}
.quote {
	text-indent: -.5em;   /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;   */
}
h2 {
	text-indent: -2000em;   /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  to hide it off to the left  */
	background: yellow;		/* this shows you were the element is, even though the text has been shoved into the other room */
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;article&gt;
&lt;h1&gt;Text indenting&lt;/h1&gt;
&lt;p&gt;CSS allows you to control the indenting of text through the text-indent property. This will indent the first line of text in any element that it is applied to. You can also apply negative values to the property as well.&lt;/p&gt;
&lt;p&gt;Negative values can often help you create what is known as hanging punctuation. For example, check out the following quote:&lt;/p&gt;
&lt;p class="quote"&gt;&amp;#8220;Far better is it to dare mighty things, to win  glorious triumphs, even though checkered by failure... than to rank with  those poor spirits who neither enjoy nor suffer much, because they live  in a gray twilight that knows not victory nor defeat.&amp;#8221;&lt;br&gt;-Theodore Roosevelt&lt;/p&gt;
&lt;p&gt;You could use negative text-indent values for the quote to move the punctuation outside the container box. You can also use negative text-indent values to hide certain elements. This is useful when you need text content for screen readers or other devices, but don't want the text to be visible. Let's try it:&lt;/p&gt;
&lt;h2&gt;Hide me please.&lt;/h2&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Text_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>LineHeight</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Text_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>LineHeight</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;line spacing&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html {
	background-color: white;
}
body {
	width: 50%;
	margin: 0 auto;
	font: 100% Georgia, "Times New Roman", Times, serif;
	padding:50px;
	line-height: 1.6;   /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; can use %, em, or no units, but when inheriting down do NOT use any unit that way
									the math will be done at the level of each element, rather
									than doing the math up here at the body element  */
}
h1 {
	font-size: 1.8em;
}
h2 {
	font-size: 1.4em;
}
p {
	font-size: 1em;
}
span {
	background: yellow;
	display: inline-block;
	line-height: 2;
}
.center {
	color: #fff;
	background: #666;
	line-height: 50px;
	padding-left: 25px;
}
/*add styles here*/

&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;article&gt;
&lt;h1&gt;Line height&lt;/h1&gt;
&lt;p&gt;Leading, or line spacing, is controlled in CSS through the line-height property. You can use any unit of measurement with line-height, and it is unique in that it allows you to use a &amp;quot;multiple&amp;quot; value as well. Multiples are a single number with no unit of measurement specified, the number simply acts as a multiple of the current element's font-size.&lt;/p&gt;
&lt;h2&gt;How it's calculated&lt;/h2&gt;
&lt;p&gt;The line-height value is used to specify the minimal height of line boxes within an element. If you want to visualize an element's line box, simply place a background color behind an element element with no padding. &lt;span&gt;Like this text, for example, which is in a span tag.&lt;/span&gt; The minimum height is determined by calculating the minimum height above the baseline and a minimum height below it.&lt;/p&gt;
&lt;h2 class="center"&gt;Other uses&lt;/h2&gt;
&lt;p&gt;Line-height is often used to center single line text vertically within a box. Take the above headline, by giving it a background color and a line-height to either match or set the element's height, and the text is vertically centered, as it &amp;quot;floats&amp;quot; in the middle of it's line-height. Try it!&lt;/p&gt;
&lt;h2&gt;Things to consider&lt;/h2&gt;
&lt;p&gt;If you use relative units of measurement with line-height, or a multiple, the value is calculated based on the font-size of the element it is applied to. If no font-size is explicitly set, the font-size of the parent element is used. In the case of element's inheriting line-height, they usually inherit the calculated value, meaning that if you set a parent element to 1em, that value will be calculated and passed down to all child elements. However, if you set line-height in multiples, the multiple itself is passed down, letting the children calculate  line-height values from their own font-size.&lt;/p&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Text_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Margin_spaceBetweenElements</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Text_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Margin_spaceBetweenElements</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;element spacing&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
body, h1, h2, h3, p {
	margin: 0;  /* reset the margins */
}
html {
	background-color: white;
}
body {
	width: 50%;
	margin: 0 auto;
	font: 100% Georgia, "Times New Roman", Times, serif;
	padding:50px;
	line-height: 1.6;
}
h1 {
	font-size: 1.8em;
	margin-bottom: 1em;      /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;   */
}
h2 {
	font-size: 1.4em;
	margin-bottom: .2em;      /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;   */
}
p {
	font-size: 1em;
	margin-bottom: 1em;      /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;   */
}
span {
	background: yellow;
	display: inline-block;
	line-height: 2;
}
.center {
	color: #fff;
	background: #666;
	line-height: 50px;
	padding-left: 25px;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;article&gt;
&lt;h1&gt;Line height&lt;/h1&gt;
&lt;p&gt;Leading, or line spacing, is controlled in CSS through the line-height property. You can use any unit of measurement with line-height, and it is unique in that it allows you to use a &amp;quot;multiple&amp;quot; value as well. Multiples are a single number with no unit of measurement specified, the number simply acts as a multiple of the current element's font-size.&lt;/p&gt;
&lt;h2&gt;How it's calculated&lt;/h2&gt;
&lt;p&gt;The line-height value is used to specify the minimal height of line boxes within an element. If you want to visualize an element's line box, simply place a background color behind an element element with no padding. &lt;span&gt;Like this text, for example, which is in a span tag.&lt;/span&gt; The minimum height is determined by calculating the minimum height above the baseline and a minimum height below it.&lt;/p&gt;
&lt;h2 class="center"&gt;Other uses&lt;/h2&gt;
&lt;p&gt;Line-height is often used to center single line text vertically within a box. Take the above headline, by giving it a background color and a line-height to either match or set the element's height, and the text is vertically centered, as it &amp;quot;floats&amp;quot; in the middle of it's line-height. Try it!&lt;/p&gt;
&lt;h2&gt;Things to consider&lt;/h2&gt;
&lt;p&gt;If you use relative units of measurement with line-height, or a multiple, the value is calculated based on the font-size of the element it is applied to. If no font-size is explicitly set, the font-size of the parent element is used. In the case of element's inheriting line-height, they usually inherit the calculated value, meaning that if you set a parent element to 1em, that value will be calculated and passed down to all child elements. However, if you set line-height in multiples, the multiple itself is passed down, letting the children calculate  line-height values from their own font-size.&lt;/p&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>ReadMe_CSS_Element_Formatting</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>ReadMe_CSS_Element_Formatting</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>ReadMe_CSS_Element_Formatting

good for testing: http://www.css3generator.com/


Box model for container elements

Note the User-agent may sacrifice the Margins when there is not enough room

Margin is outside the element
Padding is between the content of the element and the border of the element, keeps content away from edges
Border
Height and Width are of the elements content


vertical margin collapse =&gt; When margins touch, the Margins collapse to the larger of the two margin definitions
		Borders and Padding betweem margins prevent the collapse
		
		

/* The 'Containing' block includes the margin */
/* the 'content' block includes width/height, padding, and border */
/* 'OverConstrained' means it doesn't fit within it's parent element, 
        then it sacrifice margins and padding to make them fit
 */		
 
When the content block is greater than the parent then there is 'overflow'
overflow:hidden   {crops off the overflow }
overflow:scroll   {gives you scroll bars }
overflow:auto   {gives you scroll bars } </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Box_Model</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Box_Model</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;box-model&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
div, p {
	margin: 0;
	padding:0;
}
html {
	background: #ccc;
	overflow: hidden;  /*  &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  this can chop it off */
}
body {
	width: 600px;
	margin: 0 auto;
	background: #fff;
	overflow: auto;  /*  &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  this ends up putting scroll bars when it is bigger than it's container */
}
/*add styles here*/
div {
	margin: 10px;
	background: #3FF;
	padding: 10px;
	border: 1px solid #000;
	width: 600px;
}
p {
	background: #C90;
	padding: 10px;
	border: 1px solid #300;
}

&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div&gt;
&lt;p&gt;I'm a paragraph inside a div.&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;I'm another paragraph inside a second div.&lt;/p&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Example_usingMargins_Vertical_Horizontal</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Example_usingMargins_Vertical_Horizontal</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;element spacing&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
article, div, h1, p {
	margin: 0;
	padding:0;
}

/*This is pulling in a 'grid' background */
html {
	background: url(images/grid.gif);
}
body {
	width: 600px;
	margin: 0 auto;
}

/* These are creating the box look */
.one, .two {       
	background: rgba(227,208,123,.6);
	border: 1px solid #000;
	width: 98px;
	height: 98px;
	float: left;     /* b/c this is floated, a margin from an object below it does not accumulate additively with this margin */
	font-size: 1em;
	font-weight: normal;
	text-align: center;
	margin-right: 60px;
	margin-bottom: 20px;
}
.two {
	margin-left: 20px;
}
div {
	clear: both;
	background: rgba(178,143,166,.6)
}
p{
	margin-top: 20px;
	margin-bottom: 30px;
	background: rgba(136,180,187,.6);
	height: 50px;
	line-height: 50px;
}
.three {
	margin-top: 40px;
	margin-bottom: 20px;
	border: 1px solid #000;
}
.four {
	padding: 1px;
	margin-top: 20px;
}
.four p {
	width: 80%;            /* give the element 80% of parent objects width */
	margin-right: auto;    /* Since right and left auto calculate the remaining space */
	margin-left: auto;     /*   This resultes in centering the resulting child element inside the parent element */
}
/*add styles here*/
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;article&gt;
&lt;h1 class="one"&gt;I am object 1&lt;/h1&gt;
&lt;h1 class="two"&gt;I am object 2&lt;/h1&gt;
&lt;div class="three"&gt;
&lt;p&gt;I'm a paragraph inside a div.&lt;/p&gt;
&lt;p&gt;I am a second paragraph, inside the first div&lt;/p&gt;
&lt;/div&gt;
&lt;div class="four"&gt;
&lt;p&gt;I'm another paragraph inside a second div.&lt;/p&gt;
&lt;/div&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>GoodVisualExample_Padding_vs_Margin</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>GoodVisualExample_Padding_vs_Margin</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;margin and padding shorthand&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
div, p {
	margin: 0;
	padding:0;   /* one numbr for padding means use the same padding on all four sides */
}
html {
	background: #ccc;
}
body {
	width: 600px;
	margin: 0 auto;
	background: #fff;
}
/*add styles here*/
div {
	border: 1px solid black;
}
.margin {
	margin: 30px;
	background: #ccc;
}
.padding {
	padding: 30px;    /* one numbr for padding means use the same padding on all four sides */
	background: #ccc;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div&gt;
&lt;p class="margin"&gt;I will be controlled through margins&lt;/p&gt;
&lt;p class="padding"&gt;I will be controlled through padding&lt;/p&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>2_Columns</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>2_Columns</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;element sizing&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
article, div, h1, p {
	margin: 0;
	padding:0;
}

body {
	background: #ccc;
	font: 100% Georgia, "Times New Roman", Times, serif;
}
article {
	width: 600px;
	border: 2px solid #000;
	margin: 0 auto;
	background: #fff;
}
h1 {
	background: #333;
	padding: 25px;
	text-align: center;
	color: #fff;
	margin-bottom: 50px;
}
.one {
	float: left;     /* floating the two elements 'left' and 'right' will allow them to be side-by-side */
	width: 350px;   /* this is the content width, not the width of the container element */
	padding-left: 25px; /* This keeps the content from butting right up to the edge of the container */
	padding-right: 23px;  /*take out 2 pixels, to allow for the border */
	border-right: 2px solid black;
	height: 500px; /* height of the content, not the container */
	text-align: justify;
}
.two {
	float: right;     /* floating the two elements 'left' and 'right' will allow them to be side-by-side */
	width: 150px;   /* this is the content width, not the width of the container element */
	padding: 0 25px;
	height: 500px; /* height of the content, not the container */
	text-align: justify;
}
.last {
	padding: 25px;
	border-top: 1px solid black;
	clear: both;
}
/*add styles here*/
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;article&gt;
&lt;h1&gt;Defining element size&lt;/h1&gt;
&lt;div class="one"&gt;This text is inside a div tag. I'm creating two columns inside the parent article tag. I have 600px of space to work with, so I need to make sure that each of the div tags, and the space between them doesn't exceed 600px.&lt;/div&gt;
&lt;div class="two"&gt;This text is in another div tag. They're being positioned beside each other through the "float" property, which is a very common way of making elements appear beside each other. You'll learn more about the float property in the &lt;em&gt;CSS: Page Layout&lt;/em&gt; title.&lt;/div&gt;
&lt;p class="last"&gt;If no height is defined, the height of the elements will be calculated based on borders, padding, and content.&lt;/p&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Rounded_Corners</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Rounded_Corners</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>can use this site to generate and play with parms:
www.css3generator.com


&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;rounded corners&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
article, div, h1, p {
	margin: 0;
	padding:0;
}

body {
	background: #ccc;
	font: 100% Georgia, "Times New Roman", Times, serif;
}
article {
	width: 600px;
	border: 2px solid #000;
	margin: 0 auto;
	background: #fff;
}
h1 {
	background: #333;
	padding: 25px;
	text-align: center;
	color: #fff;
	margin-bottom: 50px;
}
p {
	background: #EDE2C5;
	color: #000;
	padding: 25px;
	font-size: .9em;
	margin: 1em;
	border-radius: 25px ;   /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  rounded corner: all the same*/	
	border-radius: 25px 15px;   /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  rounded corner Top Left &amp; Bottom Right, and the other two corners */
	border-top-left-radius: 25px;   /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  rounded corner verbose method */
	border-radius: 25px/15px;   /* &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;  rounded corner Horizontal and vertical side of the radius, in this case for all four corners */
}

/*add styles here*/
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;article&gt;
&lt;h1&gt;Creating rounded corners&lt;/h1&gt;
&lt;p&gt;You can create rounded corners by using the border-radius property. Although relatively new, this property enjoys widespread support among modern browsers. To ensure support as far back as possible, you may want to add the vendor prefixes to the syntax. As browsers adopt experimental properties, they usually support them with vendor prefixes first, before they settle on an official implementation.&lt;/p&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>INFOPATH_Buttons</Category>
        <Language>VB</Language>
        <Public>false</Public>
        <Name>btn_RemoveAllDigitalSignatures_Clicked</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>INFOPATH_Buttons</Category>
          <Language>VB</Language>
          <Public>false</Public>
          <Name>btn_RemoveAllDigitalSignatures_Clicked</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>        Public Sub btn_RemoveAllDigitalSignatures_Clicked(ByVal sender As Object, ByVal e As ClickedEventArgs)
            RemoveAllDigitalSignatures()
            MessageBox.Show("You must Save, and Close this form BEFORE you can use it again")
        End Sub
        
        
        Sub RemoveAllDigitalSignatures()
            Try


                If Me.Signed Then
                    Dim blocks As SignedDataBlockCollection = Me.SignedDataBlocks

                    For Each block As SignedDataBlock In blocks
                        Dim signs As SignatureCollection = block.Signatures

                        If signs.Count &gt; 0 Then

                            For Each sign As Signature In signs

                                Dim nav As XPathNavigator = sign.SignatureBlockXmlNode
                                nav.DeleteSelf()
                                Me.CurrentView.ForceUpdate()
                                'MessageBox.Show("Signature removed")

                            Next

                        End If

                    Next
                End If
            Catch ex As Exception
                MessageBox.Show("Sub: RemoveAllDigitalSignatures " &amp; ex.ToString)
            End Try
        End Sub
        </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>BackGround_color_and_Images</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>BackGround_color_and_Images</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;background position&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
div, p {
	margin: 0;
	padding:0;
}
html {
	background: #ccc;
}
body {
	width: 600px;
	margin: 0 auto;
	background: #fff;
	padding: 2em;
}
/*add styles here*/
div {
	width: 300px;
	height: 300px;
	margin: 0 auto 2em;
	border: 1px solid #000;
}
.position {
	background-color: #9cf;
	background-image: url(_images/tweet_90.png);
    background-repeat: no-repeat;
		background-position: center;
	background-attachment: fixed;   		/*&lt;&lt;&lt;&lt;  relative to the window frame */
}
.parent {
	background-color: #ffc;
	background-image: url(_images/300grid.png);
	background-repeat: no-repeat;
}
.percentage {
	margin: 0;
	border: none;
	background-image: url(_images/100grid.png);
	background-repeat: no-repeat;
	background-position: 25% 50%;	/* puts this image's 25%,50% point ligned up with the image behind it's	25%,50% point*/
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class="position"&gt;&lt;/div&gt;
&lt;div class="parent"&gt;
&lt;div class="percentage"&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Multiple_Images_inThe_Padding_OfTheWordContent</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Multiple_Images_inThe_Padding_OfTheWordContent</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;multiple backgrounds&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
div, p {
	margin: 0;
	padding:0;
}
html {
	background: #ccc;
}
body {
	width: 600px;
	margin: 0 auto;
	background: #fff;
	padding: 2em;
	font: 100% Arial, Helvetica, sans-serif;
}
/*=================================================================================*/
div { /* So the words "Visit our New York Gallery" are the content of this div element 
         The words end up in a grey area below the padding, b/c the padding is very large
        The images (defined in ".banner1 " end up sitting up in the padding of the letters
        The div element has height=40px, and padding = 175px
        The Line height is 40px, so it fits below the padding, and there is 15px to the left of the words

    */
	width: 470px;
	height: 40px;
	margin: 0 auto 2em;
	background: #666;
	font-size: 1.6em;
	line-height: 40px;
	color: #fff;
	padding: 175px 0 0 15px;    


}

/* These are then classes inside the div tags for controlling the images */
.banner1 
{
    /* 
    	multiple images seperated by commas ',' end up in the padding of the div element with the words content 
    	Note First image in the list is the one that is closest to the viewer, likewise last one in the list if furthest in the background
    */
	background-image: url(_images/new.png), url(_images/featured.png), url(_images/sm_nyc_banner.jpg);
	background-repeat: no-repeat;
	background-position: right top, 0 25px, left top; /* &lt;&lt; These apply to each image respectively */
}
.banner2 {
	background-image: url(_images/new.png), url(_images/sm_philly_banner.jpg);
	background-repeat: no-repeat;
	background-position: right top, left top;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class="banner1"&gt;Visit our New York Gallery&lt;/div&gt;
&lt;div class="banner2"&gt;Visit our Philadelphia Gallery&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>BackGround_ShortHand_NASTY</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>BackGround_ShortHand_NASTY</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;background shorthand&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
div, p {
	margin: 0;
	padding:0;
}
html {
	background: #ccc;
}
body {
	width: 600px;
	margin: 0 auto;
	background: #fff;
	padding: 2em;
	font: 100% Arial, Helvetica, sans-serif;
}
/*add styles here*/
div {
	width: 470px;
	height: 40px;
	margin: 0 auto 2em;
	background: #666;
	font-size: 1.6em;
	line-height: 40px;
	color: #fff;
	padding: 175px 0 0 15px;
}
.banner1 {
	background: #666 url(_images/sm_nyc_banner.jpg) no-repeat left top;
}
.banner2 {
	background: url(_images/featured.png) no-repeat 0 25px, url(_images/sm_philly_banner.jpg) no-repeat left top, #666;
}
.banner3 {
	background: #600;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class="banner1"&gt;Visit our New York Gallery&lt;/div&gt;
&lt;div class="banner2"&gt;Visit our Philadelphia Gallery&lt;/div&gt;
&lt;div class="banner3"&gt;Thank you.&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>DropShadows_box_and_text</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>DropShadows_box_and_text</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Box shadows are applied to the containing box of the elemnt
Text Shadows apploy to just the text


&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;drop shadows&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
div, p {
	margin: 0;
	padding:0;
}
html {
	background: #ccc;
}
body {
	background: #ccc;
	padding: 2em;
	font: 100% Arial, Helvetica, sans-serif;
}
.wrapper {
	position:relative;
	width: 600px;
	background: #D1B479;
	margin: 0 auto;
	padding: 25px 25px;
}
/*add styles here*/
.banner1 {
	width: 470px;
	height: 40px;
	margin: 0 auto 2em;
	background: #666;
	font-size: 1.6em;
	line-height: 40px;
	color: #fff;
	padding: 175px 0 0 15px;
	background-image: url(_images/new.png), url(_images/featured.png), url(_images/sm_nyc_banner.jpg);
	background-repeat: no-repeat;
	background-position: right top, 0 25px, left top;
	-webkit-box-shadow: 10px 10px 5px 5px rgba(0, 0, 0, .7);
  	-moz-box-shadow: 10px 10px 5px 5px rgba(0, 0, 0, .7);
	box-shadow: 10px 10px 5px 5px rgba(0, 0, 0, .7);  
	/* BOX - PARMS: 
        horizontal, 
        vertical, 
        blur-radius (how blurry do you want this), 
        spread (at how far do you want it to fade out) 
        color - this one is black and has a transparency of .7
        
   */         
}
h1 {
	font-size: 2em;
	color: #fff;
	font-weight: normal;
	text-shadow: 10px 10px 5px rgba(0, 0, 0, .7);
	/* TEXT - PARMS: 
        horizontal, 
        vertical, 
        blur-radius (how blurry do you want this), 
        spread (at how far do you want it to fade out) 
        color - this one is black and has a transparency of .7
        
   */   
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class="wrapper"&gt;
&lt;h1&gt;Text Shadows&lt;/h1&gt;
&lt;div class="banner1"&gt;Visit our New York Gallery&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Gradients</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Gradients</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Still experimental

http://www.colorzilla.com/gradient-editor/
generates syntax for old and new versions






&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;gradients&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
div, p {
	margin: 0;
	padding:0;
}
html {
	background: #ccc;
}
body {
	background: #ccc;
	padding: 2em;
	font: 100% Arial, Helvetica, sans-serif;
}
.wrapper {
	position:relative;
	width: 600px;
	background: #D1B479;
	margin: 0 auto;
	padding: 25px 25px;
	background: #f7f0b7;        /* this comes first, and is the backup if the browser has problems with the gradients */
	background: -moz-linear-gradient(top,  #f7f0b7 0%, #b57c12 100%);
	background:-webkit-linear-gradient(top,  #f7f0b7 0%, #b57c12 100%);
	background: linear-gradient(top,  #f7f0b7 0%, #b57c12 100%);
	/* Start from the 'top', then give the first color, in this case uses the background color
        0% is the start of the top, %100 is the end of the top (i.e. the bottom)
        in this case it is the experimental sytax that is doing it.


    */
}
/*add styles here*/
.banner1 {
	width: 470px;
	height: 40px;
	margin: 0 auto 2em;
	background: #666;
	font-size: 1.6em;
	line-height: 40px;
	color: #fff;
	padding: 175px 0 0 15px;
	background-image: url(_images/new.png), url(_images/featured.png), url(_images/sm_nyc_banner.jpg);
	background-repeat: no-repeat;
	background-position: right top, 0 25px, left top;
	-webkit-box-shadow: 10px 10px 5px 5px rgba(0, 0, 0, .7);
  	-moz-box-shadow: 10px 10px 5px 5px rgba(0, 0, 0, .7);
	box-shadow: 10px 10px 5px 5px rgba(0, 0, 0, .7); 
}
h1 {
	font-size: 2em;
	color: #fff;
	font-weight: normal;
	text-shadow: 10px 10px 5px rgba(0, 0, 0, .7);
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class="wrapper"&gt;
&lt;h1&gt;Text Shadows&lt;/h1&gt;
&lt;div class="banner1"&gt;Visit our New York Gallery&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Misc</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Reset</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Misc</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Reset</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>from: http://meyerweb.com/eric/thoughts/2011/01/03/reset-revisited/
also: http://www.cssreset.com

* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0b1 | 201101 
   NOTE: WORK IN PROGRESS
   USE WITH CAUTION AND TEST WITH ABANDON */

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	outline: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}

/* remember to define visible focus styles! 
:focus {
	outline: ?????;
} */

/* remember to highlight inserts somehow! */
ins {
	text-decoration: none;
}
del {
	text-decoration: line-through;
}

table {
	border-collapse: collapse;
	border-spacing: 0;
}
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Box_Model_AnotherExample</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Box_Model_AnotherExample</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>There are two examples hare

///////////////////////////////////////////////////////


&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;box-model&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
div, p {
	margin: 0;
	padding:0;
}
html {
	background: #ccc;
}
.outer {
	width: 400px;
	margin: 0 auto;
	background: #9CF;
	padding: 1px;
}
p {
	background: #EEA458; /* this will be the color of the paragraph */
	height: 100%;
}
/*add styles here*/
.box{   /* and the total area of the 'box' is: (300 + 25 + 2 ) x (300 + 25 + 2), i.e width/height + padding + border, but margin can collapse so not sure about that */
	background: #B7D19C;
	width: 300px;
	height: 300px;
	padding: 25px;      /* Since there is padding the color of this will show around the paragraph,  */
	border: 2px solid black;
	margin: 25px;   /* the margin is outside the border, and picks up the color of the parent */
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class="outer"&gt;
&lt;div class="box"&gt;
&lt;p&gt;The box model describes the physical properties of each element on your page. Margins, borders, padding, and content all make up an element's box. In this case, the inner div tag's margins can be seen with the blue color, the border is black, the padding is represented by orange, and the element's width and height are yellow.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;


//////////////////////////////////////////////////////////////////


&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;calculating element dimensions&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
div, p {
	margin: 0;
	padding:0;
}
html {
	background: #ccc;
}
.outer {
	width: 600px;
	margin: 0 auto; /* Top and Bottom are zero, left and right are 'auto' which will center it from left to right */
	                /* The 'Containing' block includes the margin */
	                /* the 'content' block includes width/height, padding, and border */
	                /* 'OverConstrained' means it doesn't fit within it's parent, 
                        then it sacrifice margins and padding to make them fit
                    */
	
	background: #9CF;
	height: 600px;
	padding: 50px;  /* this 50 px on all four sides */
}
.box{
	background: #B7D19C;
	width: 450px;
	padding: 98px;  /* this 98 px on all four sides */
	border: 2px solid black;    /* Border shows up outside the padding */
}
p {
	background: #EEA458;
	height: 100%;

}
	
/*add styles here*/

&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class="outer"&gt;
&lt;div class="box"&gt;
&lt;p&gt;Here we'll need to calculate the width of this interior div element. This may seem simple at first, but as we begin to add box model properties, and as the overall width of the parent element and the div conflict with one another, we'll need to understand how each of the properties combine to effect the overall width (and height) of page elements.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Misc</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>em_Percent_Sizes</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Misc</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>em_Percent_Sizes</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>em is relative unit of measurement 
	For a Font's size property that is equal to the default font size of the parent element
	For a non-font element, like 'margin-bottom' that is equal to the element's own font size
	
Percentages	
	these are as a Percent of the parent element.
	Percentages should not be used for Border width, if use the browser will just use the default	

	
///////em//////////////////////////////////////////////////	
	
&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;calculating unit values&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
article, div, h1, h2, p {
	margin: 0;
	padding:0;
}
html {
	background: url(images/grid.gif) 5px 5px;
}
body {
	width: 960px;
	margin: 0 auto;
	font: 10px Arial, Arial, Helvetica, sans-serif; /* This is the parent size for all the children elements */
}
.em {
	float: left;
	width: 520px;
	margin-bottom: 50px;
	background: rgba(237,198,75,.6);
}
.percentages {
	float: right;
	width: 380px;
	background: rgba(109,154,197,.4);
	margin-bottom: 50px;
}
footer {
	clear: both;
}
/*add styles here*/
h1 {
	font-size: 3em;
	margin-bottom: 1em;
}
h2 {
	font-size: 2em;
	margin-bottom: 1em;
}
p {
	font-size: 1.5em;
	margin-bottom: 1em;
}
.em {
	font-size: 1.5em;
	padding: 1em;
}
.percentages {
	padding: 1em;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;article&gt;
&lt;h1&gt;How browsers calculate unit values&lt;/h1&gt;
&lt;section class="em"&gt;
&lt;h2&gt;Using ems&lt;/h2&gt;
&lt;p&gt;If ems are used in the font-size property, their value is calculated as a multiple of the parent element's font size. This eventually leads back to the device's default font size, set by either the device or the user.&lt;/p&gt;
&lt;p&gt;This can make it very difficult to accurately predict what the calculated value will be for multiply nested elements. While this is generally not a problem regarding fonts (after all, the goal is to make elements relative to each other, not to know exactly what their calculated size will be), it can make it difficult to know which value to set for box model properties if you're approximating values based on default document font size.&lt;/p&gt;
&lt;p&gt;If, on the other hand, ems are used for any other property, their value is calculated as a multiple of that element's font size, NOT the parent.&lt;/p&gt;
&lt;/section&gt;
&lt;section class="percentages"&gt;
&lt;h2&gt;Using percentages&lt;/h2&gt;
&lt;p&gt;For the most part, percentages are pretty straightforward. Values are calculated based on the overall value of the parent element. For example, if you gave a block-level element a width of 100%, it would stretch as wide as possible, and only be restricted by the parent element.&lt;/p&gt;
&lt;p&gt;For nested elements, you need to remember that a percentage is calculated relative to the parent, no matter how deep the element is. This can actually be very tricky in complicated layouts, as it is sometimes difficult to remember exactly which element the percentage is based on.&lt;/p&gt;
&lt;p&gt;It's even more difficult when you mix percentages and other values. For example, if you set an element's width to 80% and set 20px worth of padding you need to remember that those values are cumulative. The total width of the element would be 80% of its parent, plus the 40px worth of horizontal padding.&lt;/p&gt;
&lt;/section&gt;
&lt;footer&gt;
&lt;p&gt;One day soon, we'll be able to use root ems ("rem"). Root ems will allow you to set a value that is calculated based on the document's default font size, not the parent elements. This will give you additional flexibility when using ems within layout values, and make it easier to create em-based layouts.
&lt;/p&gt;
&lt;/footer&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>display</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>display</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>block, inherit, inline, inline-block, inline-table, list-item, none, run-in, table

Can use these to change the default display</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Fixed</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Fixed</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Starting in the &lt;bocy&gt; it is set to a fixed size, so if user or user-agent changes the window size, 
	the appearance does not change
The &lt;article&gt; float, but have a fixed size		

960px is probably acceptable for contemporary monitors
	b/c most monitors are 1024 wide


&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;fixed layout&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
aside, article, section, header, footer, nav, html, body, p, h1, h2, h3, div {
	margin: 0;
	padding: 0;
}
html {
	background: #D2B78F;
}
body {
	width: 960px;   /* &lt;&lt;&lt; Fixed size */
	margin: 0 auto;
	background: #fff;
	font: 90%/1.6 baskerville, palatino, 'palatino linotype', georgia,serif;
}

/*layout styles*/
article {
	float: left;
	width: 615px;
	padding-left: 25px;
}
aside {
	float: right;
	width: 243px;
	padding: 0 25px;
	border-left: 1px solid #aaa;
}
footer {
	clear: both;
	padding: 25px 0 15px;
}

/*content styling*/
header {
	background: #4F483E;
	padding: 50px 25px 10px 0;
	color: #fff;
	margin-bottom: 2em;
}
h1 {
	text-align: right;
	font-size: 3em;
	font-weight: normal;
	font-variant: small-caps;
	letter-spacing: .1em;
}
p {
	margin-bottom: 1em;
}
article {
	text-align: justify;
}
article h2 {
	font-size: 2em;
	font-weight: normal;
	margin-bottom: .2em;
}
article p {
	font-size: 1.2em;
	margin-bottom: 1em;
}
aside {
	font: .9em "Lucida Sans Unicode", "Lucida Grande", sans-serif;
}
aside h2 {
	font-size: 1.2em;
	margin-bottom: 1em;
}
.author {
	font-weight: bold;
	text-align: right;
}
footer {
	background: #686D7B;
	font: 1.2em "Lucida Sans Unicode", "Lucida Grande", sans-serif;
	text-transform: uppercase;
	letter-spacing: .2em;
	text-align: center;
	color: #fff;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header&gt;
&lt;h1&gt;Alice in Wonderland&lt;/h1&gt;
&lt;/header&gt;
&lt;article class="chapterOne"&gt;
&lt;h2&gt;Down the Rabbit Hole&lt;/h2&gt;
&lt;section class="secOne"&gt;
&lt;p&gt;Alice was beginning to get very tired of sitting by her sister on the bank, and of having nothing to do: once or twice she had peeped into the book her sister was reading, but it had no pictures or conversations in it, `and what is the use of a book,' thought Alice `without pictures or conversation?'&lt;/p&gt;
&lt;p&gt;So she was considering in her own mind (as well as she could, for the hot day made her feel very sleepy and stupid), whether the pleasure of making a daisy-chain would be worth the trouble of getting up and picking the daisies, when suddenly a White Rabbit with pink eyes ran close by her.&lt;/p&gt;
&lt;p&gt;There was nothing so very remarkable in that; nor did Alice think it so very much out of the way to hear the Rabbit say to itself, `Oh dear! Oh dear! I shall be late!' (when she thought it over afterwards, it occurred to her that she ought to have wondered at this, but at the time it all seemed quite natural); but when the Rabbit actually took a watch out of its waistcoat-pocket, and looked at it, and then hurried on, Alice started to her feet, for it flashed across her mind that she had never before seen a rabbit with either a waistcoat-pocket, or a watch to take out of it, and burning with curiosity, she ran across the field after it, and fortunately was just in time to see it pop down a large rabbit-hole under the hedge. &lt;/p&gt;
&lt;p&gt;In another moment down went Alice after it, never once considering how in the world she was to get out again.&lt;/p&gt;
&lt;p&gt;The rabbit-hole went straight on like a tunnel for some way, and then dipped suddenly down, so suddenly that Alice had not a moment to think about stopping herself before she found herself falling down a very deep well.&lt;/p&gt;
&lt;/section&gt;
&lt;h2&gt;The Fall Continues&lt;/h2&gt;
&lt;section class="secTwo"&gt;
&lt;p&gt;Either the well was very deep, or she fell very slowly, for she had plenty of time as she went down to look about her and to wonder what was going to happen next. First, she tried to look down and make out what she was coming to, but it was too dark to see anything; then she looked at the sides of the well, and noticed that they were filled with cupboards and book-shelves; here and there she saw maps and pictures hung upon pegs. She took down a jar from one of the shelves as she passed; it was labelled `ORANGE MARMALADE', but to her great disappointment it was empty: she did not like to drop the jar for fear of killing somebody, so managed to put it into one of the cupboards as she fell past it.&lt;/p&gt;
&lt;p&gt;`Well!' thought Alice to herself, `after such a fall as this, I shall think nothing of tumbling down stairs! How brave they'll all think me at home! Why, I wouldn't say anything about it, even if I fell off the top of the house!' (Which was very likely true.) &lt;/p&gt;
&lt;p&gt;Down, down, down. Would the fall NEVER come to an end! `I wonder how many miles I've fallen by this time?' she said aloud. `I must be getting somewhere near the centre of the earth. Let me see: that would be four thousand miles down, I think--' (for, you see, Alice had learnt several things of this sort in her lessons in the schoolroom, and though this was not a VERY good opportunity for showing off her knowledge, as there was no one to listen to her, still it was good practice to say it over) `--yes, that's about the right distance--but then I wonder what Latitude or Longitude I've got to?' (Alice had no idea what Latitude was, or Longitude either, but thought they were nice grand words to say.)&lt;/p&gt;
&lt;p&gt;Presently she began again. `I wonder if I shall fall right THROUGH the earth! How funny it'll seem to come out among the people that walk with their heads downward! The Antipathies, I think--' (she was rather glad there WAS no one listening, this time, as it didn't sound at all the right word) `--but I shall have to ask them what the name of the country is, you know. Please, Ma'am, is this New Zealand or Australia?' (and she tried to curtsey as she spoke--fancy CURTSEYING as you're falling through the air! Do you think you could manage it?) `And what an ignorant little girl she'll think me for asking! No, it'll never do to ask: perhaps I shall see it written up somewhere.'&lt;/p&gt;
&lt;p&gt;Down, down, down. There was nothing else to do, so Alice soon began talking again. `Dinah'll miss me very much to-night, I should think!' (Dinah was the cat.) `I hope they'll remember her saucer of milk at tea-time. Dinah my dear! I wish you were down here with me! There are no mice in the air, I'm afraid, but you might catch a bat, and that's very like a mouse, you know. But do cats eat bats, I wonder?' And here Alice began to get rather sleepy, and went on saying to herself, in a dreamy sort of way, `Do cats eat bats? Do cats eat bats?' and sometimes, `Do bats eat cats?' for, you see, as she couldn't answer either question, it didn't much matter which way she put it. She felt that she was dozing off, and had just begun to dream that she was walking hand in hand with Dinah, and saying to her very earnestly, `Now, Dinah, tell me the truth: did you ever eat a bat?' when suddenly, thump! thump! down she came upon a heap of sticks and dry leaves, and the fall was over. &lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;aside&gt;
&lt;h2&gt;'Who will Riddle me the How and the Why?'&lt;/h2&gt;
&lt;p&gt;So questions one of England's sweetest singers. The `How?' has already been told, after a fashion, in the verses prefixed to Alice in Wonderland ; and some other memories of that happy summer day are set down, for those who care to see them, in this little book--the germ that was to grow into the published volume. But the `Why?' cannot, and need not, be put into words. Those for whom a child's mind is a sealed book, and who see no divinity in a child's smile, would read such words in vain: while for any one that has ever loved one true child, no words are needed. For he will have known the awe that falls on one in the presence of a spirit fresh from GOD's hands, on whom no shadow of sin, and but the outermost fringe of the shadow of sorrow, has yet fallen: he will have felt the bitter contrast between the haunting selfishness that spoils his best deeds and the life that is but an overflowing love--for I think a child's first attitude to the world is a simple love for all living things: and he will have learned that the best work a man can do is when he works for love's sake only, with no thought of name, or gain, or earthly reward. No deed of ours, I suppose, on this side the grave, is really unselfish: yet if one can put forth all one's powers in a task where nothing of reward is hoped for but a little child's whispered thanks, and the airy touch of a little child's pure lips, one seems to come somewhere near to this.&lt;/p&gt;
&lt;p&gt;There was no idea of publication in my mind when I wrote this little book: that was wholly an afterthought, pressed on me by the `perhaps too partial friends' who always have to bear the blame when a writer rushes into print: and I can truly say that no praise of theirs has ever given me one hundredth part of the pleasure it has been to think of the sick children in hospitals (where it has been a delight to me to send copies) forgetting, for a few bright hours, their pain and weariness--perhaps thinking lovingly of the unknown writer of the tale--perhaps even putting up a childish prayer (and oh, how much it needs!) for one who can but dimly hope to stand, some day, not quite out of sight of those pure young faces, before the great white throne. `I am very sure,' writes a lady-visitor at a Home for Sick Children, `that there will be many loving earnest prayers for you on Easter morning from the children.' . &lt;/p&gt;
&lt;p&gt;Let me add--for I feel I have drifted into far too serious a vein for a preface to a fairy-tale--the deliciously naive remark of a very dear child-friend, whom I asked, after an acquaintance of two or three days, if she had read `Alice' and the `Looking-Glass'. `Oh yes,' she replied readily, `I've read both of them! And I think' (this more slowly and thoughtfully) `I think "Through the Looking-Glass" is more stupid than "Alice's Adventures". Don't you think so?' But this was a question I felt it would be hardly discreet for me to enter upon.&lt;/p&gt;
&lt;p class="author"&gt;Lewis Carroll December, 1886&lt;/p&gt;
&lt;/aside&gt;
&lt;footer&gt;
&lt;p&gt;`Oh, I've had such a curious dream!' said Alice&lt;/p&gt;
&lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>FLOAT</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>FLOAT</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Float moves the object out of the normal flow. 
    Potentially everything below it can rise up =&gt; Container Collapse
    even if they are in a parent, the parent won't see them, and will rise up
Normal flow is left side, and stacking from top to bottom

a) So without float three objects would be one above the other.
b) Floating the first object :right, would put it on the right side, 
	 then the other two objects would come up one row, and stack up on the left side, top to bottom
c) So floating three objects :left, would make them come up to the same row, 
	and then stack up left to right on that row
d) So floating three objects :right, would make them come up to the same row, 
	and then stack up right to left on that row	
	
	
	
	
&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;The float property&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: #ccc;
}
body {
	width: 600px;
	background: #fff;
	margin: 2em auto 2em;
}
div {
	margin-bottom: 1em;
	width: 200px;
	height: 100px;
}
/*add styles here*/
.element1 {
	background: rgb(211, 206, 61);
	float: left;
	margin-right: 2em;
}
.element2 {
	background: rgb(85, 66, 54);
	float: left;
	margin-right: 2em;
}
.element3 {
	background: rgb(247,120,37);
	float: left;
	margin-right: 2em;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;The float property has four possible values: left | right | inherit | none&lt;p&gt;
&lt;p&gt;Floating an element to the left or to the right will cause it to move to the left-most or right-most edge of its parent container. Floating removes the element from normal flow, and will cause elements below it to shift accordingly.&lt;/p&gt;
&lt;div class="element1"&gt;&lt;/div&gt;
&lt;div class="element2"&gt;&lt;/div&gt;
&lt;div class="element3"&gt;&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
	</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Clear_Float</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Clear_Float</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>

Clear left  =&gt; means nothing can float to my left
clear right =&gt; means nothing can float to my right
clear both  =&gt; means nothing can float to my right nor left

So if you have 6 objects, and they are all set to: "float:left",
and space for just 4 on a row they would pile in on the first row from left to right and when 
	it gets to the fifth object they would start piling in again from left to right on the next row.
	
	
If you set "clear:left" on the fourth object, it would break from normal flow and go down to the second row
	on the fourth object, then object five and six will follow it from left to right on the second row	
	
	
&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;The float property&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: #ccc;
}
body {
	width: 600px;
	background: #fff;
	margin: 2em auto 2em;
	font: 100% Arial, Helvetica, sans-serif;
}
div {
	margin-bottom: 1em;
	margin-right: 2em;
	width: 150px;
	height: 50px;
	border: 1px solid #000;
	padding: 25px;
}
/*add styles here*/
.element1 {
	background: rgb(211, 206, 61);
	float: right;
	width: 50px;
	height: 200px;
}
.element2 {
	background: rgb(85, 66, 54);
	float: left;
	width: 50px;
	height: 100px;
}
.element3 {
	background: rgb(247,120,37);
	clear: both;                /* &lt;===== */
}
.element4 {
	background: rgb(26, 78, 175);
}
.element5 {
	background: rgb(195, 156, 61);
}
.element6 {
	background: rgb(225,68,37);
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;The clear property has five possible values: left | right | both | inherit | none&lt;p&gt;
&lt;p&gt;By clearing an element, you can ensure the element does not appear to the left or the right of any floated element. This has the result of turning a float "off" and restoring normal document flow to the remaining elements.&lt;/p&gt;
&lt;div class="element1"&gt;one&lt;/div&gt;
&lt;div class="element2"&gt;two&lt;/div&gt;
&lt;div class="element3"&gt;three&lt;/div&gt;
&lt;div class="element4"&gt;four&lt;/div&gt;
&lt;div class="element5"&gt;five&lt;/div&gt;
&lt;div class="element6"&gt;six&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;
	</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Containing_Floats</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Containing_Floats</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>How to keep the parent object from collapsing when the interior objects are floated


For this situation:
					&lt;section&gt;
					&lt;div class="one"&gt;One&lt;/div&gt;
					&lt;div class="two"&gt;Two&lt;/div&gt;
					&lt;div class="three"&gt;Three&lt;/div&gt;
					&lt;/section&gt;
1] If all three &lt;div&gt; are floated the parent object will collapse up b/c it doesn't sense the children objects

2] If you put a fourth object under the third &lt;div&gt; and do not float that then that will keep the 
	parent object from collapsing all the way up.

3] You could put "overflow:hidden" into the CCSS property of the &lt;section&gt; that would prevent the 
	parent from collapsing 

	overflow tells the user-agent what to do when the contents won't fit inside it.
	hidden =&gt; clip off overflowing content
	auto =&gt; would create scroll bars for overflow
	scroll =&gt; forces scroll bars
	
4] You can float the parent object, and when you do then even if all the children 
	objects are floated, it will not collapse, of coarse the parent object of  that parent
	object may collapse if there is nothing preventing it from collapsing.
	
&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;containing floats&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: rgb(108,135,178);
}
body {
	width: 600px;
	background: #fff;
	margin: 0 auto;
	font: 90% Georgia, "Times New Roman", Times, serif;
}
div {
	width: 50px;
	height: 50px;
	padding: 50px;
}
section {
	background: rgb(178,155,107);
	border: 1px solid black;
	padding: 10px;
	float: left;
	width: 580px;
}
.one {
	background: rgb(207, 255, 245);
	float: left; 
}
.two {
	background: rgb(101,209,255);
	float: left;
}
.three {
	background: rgb(255, 231, 181);
	float: left;
}

&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;section&gt;
&lt;div class="one"&gt;One&lt;/div&gt;
&lt;div class="two"&gt;Two&lt;/div&gt;
&lt;div class="three"&gt;Three&lt;/div&gt;
&lt;/section&gt;
&lt;/body&gt;
&lt;/html&gt;
	</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>ClearFix_Floats</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>ClearFix_Floats</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>This is a newer way to clear the floats without having to add html after the objects

reference: http://tjkdesign.com/articles/clearfix_block-formatting-context_and_haslayout.asp
			http://www.goo.gl/WQD4i
			http://www.nicolasgallagher.com/micro-clearfix-hack/

&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;clearfix&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
body {
	width: 600px;
	margin: 0 auto;
	font: 90% Georgia, "Times New Roman", Times, serif;
}
div {
	width: 50px;
	height: 50px;
	padding: 50px;
	margin-right: 25px;
}
section {
	background: rgb(178,155,107);
	border: 1px solid black;
	padding: 25px 0 25px 50px;
	margin-top: 50px;
}
.one {
	background: rgb(207, 255, 245);
	float: left; 
}
.two {
	background: rgb(101,209,255);
	float: left;
}
.three {
	background: rgb(255, 231, 181);
	float: left;
}

/* Old version ===========================================*/
.clearfix:before,
.clearfix:after 
{
    
   /* whatever object that this class is applied to, 
    go ahead and generate some content 'after' it */
    
    
    content:"";     /* &lt;=== put an empty literal string */
    display:block;  /* &lt;== This was the original way to do it */
    clear:both;

}


/* New version, don't need to clear the floats=============*/
.clearfix:before,
.clearfix:after 
{
    
   /* whatever object that this class is applied to, 
    go ahead and generate some content 'after' it */
    

    display:table; */  /* &lt;== This was the new way to do it */
}
.clearfix:after        
{
    /* for the new version, add this in for just the .after class */
    clear:both; 
}
&lt;/style&gt;

&lt;!--[if lt IE 8]&gt;
&lt;style&gt;
/* For IE &lt; 8 (trigger hasLayout) */
.clearfix {
    zoom:1;                 /* This triggers 'hasLayout' in IE */
}
&lt;/style&gt;
&lt;![endif]--&gt;

&lt;/head&gt;
&lt;body&gt;
&lt;section class="clearfix"&gt;
&lt;div class="one"&gt;One&lt;/div&gt;
&lt;div class="two"&gt;Two&lt;/div&gt;
&lt;div class="three"&gt;Three&lt;/div&gt;
&lt;/section&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Wrap_Text_Around_Image</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Wrap_Text_Around_Image</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>
.textWrap img {         /* &lt;== img child of .textwrap class */
	float: left;
	border: 1px solid #333;
	margin: 0 1em 1em 0;      /* without this the text would be right up against the image */
                              /* Top, right, bottom, left */
}
.textWrap h3 {     /* this causes the h3 to not shift around the image, so it resumes normal flow and goes below the image */
	clear: both;
}

//////////////////////////////////////////////////////////////


&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;floating inline elements&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
h1, h2, h3, h4, p, ul, li, address, blockquote {
	margin: 0;
	padding: 0;
}
html {
	background: #542733;
	margin: 0;
	padding: 0;
}
body {
	width: 720px;
	margin: 0 auto;
	font: 90%/1.6 Arial, Helvetica, sans-serif;
	background: #fff;
	padding: 25px;
}
.clearfix:before,
.clearfix:after {
    content:"";
    display:table;
}
.clearfix:after {
    clear:both;
}
article {
	clear: both;
}
header h1 {
	font-size: 3em;
	text-transform: uppercase;
	margin-bottom: 0;
	font-weight: normal;
	line-height: 1.2;
}
article h1, article h2, article h3, article h4 {
	font-family: Georgia, Times, serif;
	font-weight: normal;
}
article h1{
	font-size: 2.8em;
	margin: 1em 0 .6em;
}
article h2 {
	font-size: 1.8em;
	margin: 1em 0 .4em;
}
article h3 {
	font-size: 1.4em;
	margin: 1.2em 0 .2em;
}
article p {
	margin-bottom: 1em;
}
/* wrap text around an image ======================================*/
/*float image styles here*/

/* Note most elements rise up behind a floated element
    but text has  a 'line box' around each line, and
    those line boxes shorten themselves and shift the around floated images
*/



.textWrap img {         /* &lt;== img child of .textwrap class */
	float: left;
	border: 1px solid #333;
	margin: 0 1em 1em 0;      /* without this the text would be right up against the image */
                              /* Top, right, bottom, left */
}
.textWrap h3 {     /* this causes the h3 to not shift around the image, so it resumes normal flow and goes below the image */
	clear: both;
}
/*dropcap styles here ===============================================*/
/* first-of-type is the first paragraph in the class .dropcap
   then the first-letter in the first paragraph

   you could also wrap the first letter in &lt;span&gt; but this way 
   avoids additional markup
*/

.dropcap p:first-of-type:first-letter {
	float: left;
	font-family: Georgia, Times, serif;
	font-size: 4em;
	margin: 0 5px 0 0;
	line-height: .7;      /* you need to do this to adjust the look in FireFox */
}
/*complex styes here*/
.complex {
	border: 1px solid #333;
	padding: 1em;
	background: #d4beaa;
	font-size: 110%;
	overflow: hidden;
}
.complex img {
	float: left;
	margin-right: 1em;
}
.more {
	float: left;
	margin: 0;
	margin-left: 14em;
	line-height: 1.6em;
	padding: 0 5px;
	background: #3b2f24;
	color: white;
}
.price {
	float: right;
	margin: 0;
	font-size: 1.6em;
	font-weight: bold;
	margin-top: -.3em;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header&gt;
&lt;h1&gt;Floating inline elements&lt;/h1&gt;
&lt;/header&gt;
&lt;article&gt;
&lt;h2&gt;How can floating help inline flow?&lt;/h2&gt;
&lt;section class="textWrap"&gt;
&lt;p&gt;&lt;img src="_images/tall.jpg" width="268" height="367" alt="Tall image"&gt;Floating inline elements can help us wrap text around images, isolate emphasized content, and style complex regions like quotes, product descriptions, and blog comments.&lt;/p&gt;
&lt;p&gt;When floated next to a block level element line boxes (such as lines of text) will shorten to make room for the margin box of the float. That means that while text will wrap around floated elements, the container of the text still behaves as if the floated element is removed from normal flow. Floated elements are always stacked on top of elements in normal flow when any overlapping occurs. This means that if an image is floated next to a paragraph, the lines of text will wrap around the image, but the paragraphs background color (if there is one) will appear behind the image.&lt;/p&gt;
&lt;h3&gt;Not all headlines should float.&lt;/h3&gt;
&lt;p&gt;Nothing is better than the world, you say. Nor is there, indeed, anything on earth better than the city of Rome; do you think, therefore, that our city has a mind; that it thinks and reasons; or that this most beautiful city, being void of sense, is not preferable to an ant, because an ant has sense, understanding, reason, and memory? You should consider, Balbus, what ought to be allowed you, and not advance things because they please you.&lt;/p&gt;
&lt;/section&gt;
&lt;section class="dropcap"&gt;
&lt;h2&gt;Creating drop caps&lt;/h2&gt;
&lt;p&gt;You can use floats to create dropcaps as well. Simply float the first letter of the desired paragraph and set the margins of the float to control spacing. If you want to drop cap a range of letters, simply use a span tag around the letters you want to drop. You can use relative positioning or top margins to help position the cap relative to the paragraph. Because the construct for float elements is a little different in earlier versions of Internet Explorer, if you're targeting versions prior to IE 8 you may need to feed slightly different margin values through conditional comments to have consistent styling. Firefox does NOT allow the dropcap to calculate its own line-height, forcing it to inherit it from the parent paragraph. WebKit based browsers will. This means that in order to have dropcaps line up consistently in WebKit based browsers and Firefox, you'll need to apply a line-height equal to the height of the cap (start at around .8, although you'll need to experiment  with it based on the font you're using).&lt;/p&gt;
&lt;/section&gt;
&lt;section class="complex"&gt;
&lt;p&gt;&lt;img src="_images/nyc.jpg" width="150" height="150" alt="New York New York"&gt;Floating can help style complex regions like product descriptions, widgets, or other detailed regions that normal flow won't accomodate. Often, deciding how these regions should be styled is up to the designer, as there may be several different ways to arrive at the same layout.&lt;/p&gt;
&lt;p class="more"&gt;More information&lt;/p&gt;
&lt;p class="price"&gt;$19.95&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Drop_Cap_FirstLetterOfParagraphBIG</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Drop_Cap_FirstLetterOfParagraphBIG</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>.dropcap p:first-of-type:first-letter {
	float: left;
	font-family: Georgia, Times, serif;
	font-size: 4em;
	margin: 0 5px 0 0;
	line-height: .7;      /* you need to do this to adjust the look in FireFox */
}

//////////////////////////////////////////////////////////////





&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;floating inline elements&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
h1, h2, h3, h4, p, ul, li, address, blockquote {
	margin: 0;
	padding: 0;
}
html {
	background: #542733;
	margin: 0;
	padding: 0;
}
body {
	width: 720px;
	margin: 0 auto;
	font: 90%/1.6 Arial, Helvetica, sans-serif;
	background: #fff;
	padding: 25px;
}
.clearfix:before,
.clearfix:after {
    content:"";
    display:table;
}
.clearfix:after {
    clear:both;
}
article {
	clear: both;
}
header h1 {
	font-size: 3em;
	text-transform: uppercase;
	margin-bottom: 0;
	font-weight: normal;
	line-height: 1.2;
}
article h1, article h2, article h3, article h4 {
	font-family: Georgia, Times, serif;
	font-weight: normal;
}
article h1{
	font-size: 2.8em;
	margin: 1em 0 .6em;
}
article h2 {
	font-size: 1.8em;
	margin: 1em 0 .4em;
}
article h3 {
	font-size: 1.4em;
	margin: 1.2em 0 .2em;
}
article p {
	margin-bottom: 1em;
}
/* wrap text around an image ======================================*/
/*float image styles here*/

/* Note most elements rise up behind a floated element
    but text has  a 'line box' around each line, and
    those line boxes shorten themselves and shift the around floated images
*/



.textWrap img {         /* &lt;== img child of .textwrap class */
	float: left;
	border: 1px solid #333;
	margin: 0 1em 1em 0;      /* without this the text would be right up against the image */
                              /* Top, right, bottom, left */
}
.textWrap h3 {     /* this causes the h3 to not shift around the image, so it resumes normal flow and goes below the image */
	clear: both;
}
/*dropcap styles here ===============================================*/
/* first-of-type is the first paragraph in the class .dropcap
   then the first-letter in the first paragraph

   you could also wrap the first letter in &lt;span&gt; but this way 
   avoids additional markup
*/

.dropcap p:first-of-type:first-letter {
	float: left;
	font-family: Georgia, Times, serif;
	font-size: 4em;
	margin: 0 5px 0 0;
	line-height: .7;      /* you need to do this to adjust the look in FireFox */
}
/*complex styes here*/
.complex {
	border: 1px solid #333;
	padding: 1em;
	background: #d4beaa;
	font-size: 110%;
	overflow: hidden;
}
.complex img {
	float: left;
	margin-right: 1em;
}
.more {
	float: left;
	margin: 0;
	margin-left: 14em;
	line-height: 1.6em;
	padding: 0 5px;
	background: #3b2f24;
	color: white;
}
.price {
	float: right;
	margin: 0;
	font-size: 1.6em;
	font-weight: bold;
	margin-top: -.3em;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header&gt;
&lt;h1&gt;Floating inline elements&lt;/h1&gt;
&lt;/header&gt;
&lt;article&gt;
&lt;h2&gt;How can floating help inline flow?&lt;/h2&gt;
&lt;section class="textWrap"&gt;
&lt;p&gt;&lt;img src="_images/tall.jpg" width="268" height="367" alt="Tall image"&gt;Floating inline elements can help us wrap text around images, isolate emphasized content, and style complex regions like quotes, product descriptions, and blog comments.&lt;/p&gt;
&lt;p&gt;When floated next to a block level element line boxes (such as lines of text) will shorten to make room for the margin box of the float. That means that while text will wrap around floated elements, the container of the text still behaves as if the floated element is removed from normal flow. Floated elements are always stacked on top of elements in normal flow when any overlapping occurs. This means that if an image is floated next to a paragraph, the lines of text will wrap around the image, but the paragraphs background color (if there is one) will appear behind the image.&lt;/p&gt;
&lt;h3&gt;Not all headlines should float.&lt;/h3&gt;
&lt;p&gt;Nothing is better than the world, you say. Nor is there, indeed, anything on earth better than the city of Rome; do you think, therefore, that our city has a mind; that it thinks and reasons; or that this most beautiful city, being void of sense, is not preferable to an ant, because an ant has sense, understanding, reason, and memory? You should consider, Balbus, what ought to be allowed you, and not advance things because they please you.&lt;/p&gt;
&lt;/section&gt;
&lt;section class="dropcap"&gt;
&lt;h2&gt;Creating drop caps&lt;/h2&gt;
&lt;p&gt;You can use floats to create dropcaps as well. Simply float the first letter of the desired paragraph and set the margins of the float to control spacing. If you want to drop cap a range of letters, simply use a span tag around the letters you want to drop. You can use relative positioning or top margins to help position the cap relative to the paragraph. Because the construct for float elements is a little different in earlier versions of Internet Explorer, if you're targeting versions prior to IE 8 you may need to feed slightly different margin values through conditional comments to have consistent styling. Firefox does NOT allow the dropcap to calculate its own line-height, forcing it to inherit it from the parent paragraph. WebKit based browsers will. This means that in order to have dropcaps line up consistently in WebKit based browsers and Firefox, you'll need to apply a line-height equal to the height of the cap (start at around .8, although you'll need to experiment  with it based on the font you're using).&lt;/p&gt;
&lt;/section&gt;
&lt;section class="complex"&gt;
&lt;p&gt;&lt;img src="_images/nyc.jpg" width="150" height="150" alt="New York New York"&gt;Floating can help style complex regions like product descriptions, widgets, or other detailed regions that normal flow won't accomodate. Often, deciding how these regions should be styled is up to the designer, as there may be several different ways to arrive at the same layout.&lt;/p&gt;
&lt;p class="more"&gt;More information&lt;/p&gt;
&lt;p class="price"&gt;$19.95&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>complex_Example_float</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>complex_Example_float</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>The complex float:
	a) wraps the text around the image
	b) then gives two different formats to the other two classes in the parent of the image
	c) stops the collapse of the parent w/ "overflow: hidden;"



&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;floating inline elements&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
h1, h2, h3, h4, p, ul, li, address, blockquote {
	margin: 0;
	padding: 0;
}
html {
	background: #542733;
	margin: 0;
	padding: 0;
}
body {
	width: 720px;
	margin: 0 auto;
	font: 90%/1.6 Arial, Helvetica, sans-serif;
	background: #fff;
	padding: 25px;
}
.clearfix:before,
.clearfix:after {
    content:"";
    display:table;
}
.clearfix:after {
    clear:both;
}
article {
	clear: both;
}
header h1 {
	font-size: 3em;
	text-transform: uppercase;
	margin-bottom: 0;
	font-weight: normal;
	line-height: 1.2;
}
article h1, article h2, article h3, article h4 {
	font-family: Georgia, Times, serif;
	font-weight: normal;
}
article h1{
	font-size: 2.8em;
	margin: 1em 0 .6em;
}
article h2 {
	font-size: 1.8em;
	margin: 1em 0 .4em;
}
article h3 {
	font-size: 1.4em;
	margin: 1.2em 0 .2em;
}
article p {
	margin-bottom: 1em;
}
/* wrap text around an image ======================================*/
/*float image styles here*/

/* Note most elements rise up behind a floated element
    but text has  a 'line box' around each line, and
    those line boxes shorten themselves and shift the around floated images
*/



.textWrap img {         /* &lt;== img child of .textwrap class */
	float: left;
	border: 1px solid #333;
	margin: 0 1em 1em 0;      /* without this the text would be right up against the image */
                              /* Top, right, bottom, left */
}
.textWrap h3 {     /* this causes the h3 to not shift around the image, so it resumes normal flow and goes below the image */
	clear: both;
}
/*dropcap styles here ===============================================*/
/* first-of-type is the first paragraph in the class .dropcap
   then the first-letter in the first paragraph

   you could also wrap the first letter in &lt;span&gt; but this way 
   avoids additional markup
*/

.dropcap p:first-of-type:first-letter {
	float: left;
	font-family: Georgia, Times, serif;
	font-size: 4em;
	margin: 0 5px 0 0;
	line-height: .7;      /* you need to do this to adjust the look in FireFox */
}
/*complex styes here====================================================*/
.complex {
	border: 1px solid #333;
	padding: 1em;
	background: #d4beaa;
	font-size: 110%;
	overflow: hidden;   /* &lt;=== this prevents the container collapse 
                                b/c all three child elements are floating
                            */
}
.complex img {      /* target images in class: .complex */
	float: left;
	margin-right: 1em;
}
.more {
	float: left;
	margin: 0;
	margin-left: 14em;  /* to make it shift way over */
	line-height: 1.6em;
	padding: 0 5px;
	background: #3b2f24; /* needed the padding to show this background */
	color: white;
}
.price {
	float: right;
	margin: 0;
	font-size: 1.6em;
	font-weight: bold;
	margin-top: -.3em;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header&gt;
&lt;h1&gt;Floating inline elements&lt;/h1&gt;
&lt;/header&gt;
&lt;article&gt;
&lt;h2&gt;How can floating help inline flow?&lt;/h2&gt;
&lt;section class="textWrap"&gt;
&lt;p&gt;&lt;img src="_images/tall.jpg" width="268" height="367" alt="Tall image"&gt;Floating inline elements can help us wrap text around images, isolate emphasized content, and style complex regions like quotes, product descriptions, and blog comments.&lt;/p&gt;
&lt;p&gt;When floated next to a block level element line boxes (such as lines of text) will shorten to make room for the margin box of the float. That means that while text will wrap around floated elements, the container of the text still behaves as if the floated element is removed from normal flow. Floated elements are always stacked on top of elements in normal flow when any overlapping occurs. This means that if an image is floated next to a paragraph, the lines of text will wrap around the image, but the paragraphs background color (if there is one) will appear behind the image.&lt;/p&gt;
&lt;h3&gt;Not all headlines should float.&lt;/h3&gt;
&lt;p&gt;Nothing is better than the world, you say. Nor is there, indeed, anything on earth better than the city of Rome; do you think, therefore, that our city has a mind; that it thinks and reasons; or that this most beautiful city, being void of sense, is not preferable to an ant, because an ant has sense, understanding, reason, and memory? You should consider, Balbus, what ought to be allowed you, and not advance things because they please you.&lt;/p&gt;
&lt;/section&gt;
&lt;section class="dropcap"&gt;
&lt;h2&gt;Creating drop caps&lt;/h2&gt;
&lt;p&gt;You can use floats to create dropcaps as well. Simply float the first letter of the desired paragraph and set the margins of the float to control spacing. If you want to drop cap a range of letters, simply use a span tag around the letters you want to drop. You can use relative positioning or top margins to help position the cap relative to the paragraph. Because the construct for float elements is a little different in earlier versions of Internet Explorer, if you're targeting versions prior to IE 8 you may need to feed slightly different margin values through conditional comments to have consistent styling. Firefox does NOT allow the dropcap to calculate its own line-height, forcing it to inherit it from the parent paragraph. WebKit based browsers will. This means that in order to have dropcaps line up consistently in WebKit based browsers and Firefox, you'll need to apply a line-height equal to the height of the cap (start at around .8, although you'll need to experiment  with it based on the font you're using).&lt;/p&gt;
&lt;/section&gt;
&lt;section class="complex"&gt;
&lt;p&gt;&lt;img src="_images/nyc.jpg" width="150" height="150" alt="New York New York"&gt;Floating can help style complex regions like product descriptions, widgets, or other detailed regions that normal flow won't accomodate. Often, deciding how these regions should be styled is up to the designer, as there may be several different ways to arrive at the same layout.&lt;/p&gt;
&lt;p class="more"&gt;More information&lt;/p&gt;
&lt;p class="price"&gt;$19.95&lt;/p&gt;
&lt;/section&gt;
&lt;/article&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Two_Column_v1</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Two_Column_v1</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Float first column, give second column a huge left margin to push it out from behind 
the first column





&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;2 column layout&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: rgb(123, 121, 143);
}
body {
	width: 960px;
	background: #fff;
	margin: 0 auto 2em;
	font: 100% Georgia, "Times New Roman", Times, serif;
}
header {
	background: rgb(76, 67, 65);
	margin-bottom: 20px;
}
header h1 {
	font: normal 2em Arial, Helvetica, sans-serif;
	color: white;
	text-align: center;
	line-height: 4em;
	text-transform: uppercase;
	letter-spacing:.1em;
	margin: 0;
}
.col1 {
	background: rgb(237, 228, 214);
	height: 500px;			/* float left */
	float: left;
	padding: 20px;
	width: 600px;
}
.col2 {
	background: rgb(173, 169, 130);
	height: 500px;
	padding: 20px;  /* gutter space between the columns */
	margin-left: 660px; /* huge margin, inorder to slide it out from under the left column */
	
}
footer {
	background: rgb(100, 98, 102);
	line-height: 3em;
	font-size: .6em;
	color: white;
	padding: 0 2em;
	clear: both;        /* to stop footer from sliding up under the floating sections */
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header&gt;
&lt;h1&gt;Cool company header&lt;/h1&gt;
&lt;/header&gt;
&lt;section class="col1"&gt;
This is where the really important stuff goes.
&lt;/section&gt;
&lt;aside class="col2"&gt;
This is where the related content goes.
&lt;/aside&gt;
&lt;footer&gt;Copyright stuff....&lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Tow_Column_v2</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Tow_Column_v2</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Float both columns left
This runs the risk of some miscalculation that pushes the second column down to the next 'row'
and it shows up below the first column


&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;2 column layout&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: rgb(123, 121, 143);
}
body {
	width: 960px;
	background: #fff;
	margin: 0 auto 2em;
	font: 100% Georgia, "Times New Roman", Times, serif;
}
header {
	background: rgb(76, 67, 65);
	margin-bottom: 20px;
}
header h1 {
	font: normal 2em Arial, Helvetica, sans-serif;
	color: white;
	text-align: center;
	line-height: 4em;
	text-transform: uppercase;
	letter-spacing:.1em;
	margin: 0;
}
.col1 {
	background: rgb(237, 228, 214);
	height: 500px;
	float: left;        /* to the left */
	padding: 20px;
	width: 600px;
	 margin-right: 20px;   /* gutter */
}
.col2 {
	background: rgb(173, 169, 130);
	height: 500px;
	float: left;       /* to the left */
	padding: 20px;     /* this is around the content */
	width: 260px;      /* to add up to the bigger width of the page */
}
footer {
	background: rgb(100, 98, 102);
	line-height: 3em;
	font-size: .6em;
	color: white;
	padding: 0 2em;
	clear: both;        /* to stop footer from sliding up under the floating sections */    
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header&gt;
&lt;h1&gt;Cool company header&lt;/h1&gt;
&lt;/header&gt;
&lt;section class="col1"&gt;
This is where the really important stuff goes.
&lt;/section&gt;
&lt;aside class="col2"&gt;
This is where the related content goes.
&lt;/aside&gt;
&lt;footer&gt;Copyright stuff....&lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Two_Column_v3</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Two_Column_v3</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Float first one left, second column right
don't have to worry about gutter, b/c the column dimensions will take care of that
so don't have to set a margin, just padding for content


&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;2 column layout&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: rgb(123, 121, 143);
}
body {
	width: 960px;
	background: #fff;
	margin: 0 auto 2em;
	font: 100% Georgia, "Times New Roman", Times, serif;
}
header {
	background: rgb(76, 67, 65);
	margin-bottom: 20px;
}
header h1 {
	font: normal 2em Arial, Helvetica, sans-serif;
	color: white;
	text-align: center;
	line-height: 4em;
	text-transform: uppercase;
	letter-spacing:.1em;
	margin: 0;
}
.col1 {
	background: rgb(237, 228, 214);
	height: 500px;
	float: left;        /* Float first one left */
	padding: 20px;      /* for the content */
	width: 600px;
	margin-bottom: 20px;
}
.col2 {
	background: rgb(173, 169, 130);
	height: 500px;
	float: right;        /* Float first one right */
	padding: 20px;      /* for the content */
	width: 260px;
	margin-bottom: 20px;
}
footer {
	background: rgb(100, 98, 102);
	line-height: 3em;
	font-size: .6em;
	color: white;
	padding: 0 2em;
	clear: both;        /* to stop footer from sliding up under the floating sections */
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header&gt;
&lt;h1&gt;Cool company header&lt;/h1&gt;
&lt;/header&gt;
&lt;section class="col1"&gt;
This is where the really important stuff goes.
&lt;/section&gt;
&lt;aside class="col2"&gt;
This is where the related content goes.
&lt;/aside&gt;
&lt;footer&gt;Copyright stuff....&lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Three_Column_v1</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Three_Column_v1</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Float first two columns to the left
Float the third column to the right
Gap between column 1 and column 2 is controlled by margin
Gap between column 2 and column 3 is controlled by width of column



&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;3 column layout&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: rgb(123, 121, 143);
}
body 
{
    /* Total width = 960
        want gap of 20 between columns
        That leaves 940 for the three columns
        Divide by three = 306.666666 per column
        and have 20 as padding on left and right of each column
        that leaves us with 266.6666 per column content
    */

	width: 960px; 
	background: #fff;
	margin: 0 auto 2em;
	font: 100% Georgia, "Times New Roman", Times, serif;
}
header {
	background: rgb(76, 67, 65);
	margin-bottom: 20px;
}
header h1 {
	font: normal 2em Arial, Helvetica, sans-serif;
	color: white;
	text-align: center;
	line-height: 4em;
	text-transform: uppercase;
	letter-spacing:.1em;
	margin: 0;
}
.col1 {
	background: rgb(237, 228, 214);
	height: 500px;
	float: left;
	padding: 20px;
	width: 266.6px;     /* this content plus padding */
	margin-right: 20px; /* &lt;== margin  */
}
.col2 {
	background: rgb(219,126,64);
	height: 500px;
	float: left;
	padding: 20px;
	width: 266.6px;     /* this content plus padding */
	                    /* no need for margin, b/c next column is float right */
}
.col3 {
	background: rgb(173, 169, 130);
	height: 500px;
	float: right;       /* to get rid of any micro-gap on the right side 8?
	padding: 20px;
	width: 266.6px;     /* this content plus padding */
}
footer {
	background: rgb(100, 98, 102);
	line-height: 3em;
	font-size: .6em;
	color: white;
	padding: 0 2em;
	clear: both;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header&gt;
&lt;h1&gt;Cool company header&lt;/h1&gt;
&lt;/header&gt;
&lt;section class="col1"&gt;
This is where the really important stuff goes.
&lt;/section&gt;
&lt;section class="col2"&gt;
This is where equally important stuff goes.
&lt;/section&gt;
&lt;aside class="col3"&gt;
This is where the related content goes.
&lt;/aside&gt;
&lt;footer&gt;Copyright stuff....&lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Three_Column_v2</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Three_Column_v2</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Float Column 1 to the left
Float Column 2 to the right
Left Column 3 float up between them
Control the width of Column 3 with margins

&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;3 column layout&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: rgb(123, 121, 143);
}
body {
	width: 960px;
	background: #fff;
	margin: 0 auto 2em;
	font: 100% Georgia, "Times New Roman", Times, serif;
}
header {
	background: rgb(76, 67, 65);
	margin-bottom: 20px;
}
header h1 {
	font: normal 2em Arial, Helvetica, sans-serif;
	color: white;
	text-align: center;
	line-height: 4em;
	text-transform: uppercase;
	letter-spacing:.1em;
	margin: 0;
}
.col1 {
	background: rgb(237, 228, 214);
	height: 500px;
	float: left;    /* Float Left */
	padding: 20px;
	width: 266px;
}
.col2 {
	background: rgb(219,126,64);
	height: 500px;
	float: right;    /* Float right */
	padding: 20px;
	width: 266px;
}
.col3 {
	background: rgb(173, 169, 130);
	height: 500px;
	padding: 20px;
	width: 266px;
	 margin: 0 auto;  /* centers it between the other two, but actually the 
                         margin looks like it is all the way to the edge of the
                         body. Remember it does not sense the floating columns 
                         on either side, so there is a lot of margin.
                       */
}
footer {
	background: rgb(100, 98, 102);
	line-height: 3em;
	font-size: .6em;
	color: white;
	padding: 0 2em;
	clear: both;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header&gt;
&lt;h1&gt;Cool company header&lt;/h1&gt;
&lt;/header&gt;
&lt;section class="col1"&gt;
This is where the really important stuff goes.
&lt;/section&gt;
&lt;section class="col2"&gt;
I have to be the far right column.
&lt;/section&gt;
&lt;section class="col3"&gt;
I have to be the middle column.
&lt;/section&gt;
&lt;footer&gt;Copyright stuff....&lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Three_Column_v3</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Three_Column_v3</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>More complex, the first two columns are children of an &lt;article&gt;

NESTED:
So create a 2 column layout for the a) &lt;article&gt;, and b) &lt;aside&gt;
then two additional column layout inside the article section for .col1 and .col2



&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;3 column layout&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: rgb(123, 121, 143);
}
body {
	width: 960px;
	background: #fff;
	margin: 0 auto 2em;
	font: 100% Georgia, "Times New Roman", Times, serif;
}
header {
	background: rgb(76, 67, 65);
	margin-bottom: 20px;
}
header h1 {
	font: normal 2em Arial, Helvetica, sans-serif;
	color: white;
	text-align: center;
	line-height: 4em;
	text-transform: uppercase;
	letter-spacing:.1em;
	margin: 0;
}
article {       /* the article has 2 columns inside it */
	float: left;
	width: 634px;
}
aside {
	float: right;
	width: 266px;
	height: 500px;      /* would normally let the content create the height */
	padding: 20px;
	background: rgb(173, 169, 130);
}
.col1 {
	background: rgb(237, 228, 214);
	height: 500px;
	float: left;    /* float left inside the article */
	padding: 20px;
	width: 266px;
}
.col2 {
	background: rgb(219,126,64);
	height: 500px;
	float: right;    /* float right inside the article */
	padding: 20px;
	width: 266px;
}
footer {
	background: rgb(100, 98, 102);
	line-height: 3em;
	font-size: .6em;
	color: white;
	padding: 0 2em;
	clear: both;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header&gt;
&lt;h1&gt;Cool company header&lt;/h1&gt;
&lt;/header&gt;
&lt;article&gt;
&lt;section class="col1"&gt;
This is where the really important stuff goes.
&lt;/section&gt;
&lt;section class="col2"&gt;
This is equally important stuff.
&lt;/section&gt;
&lt;/article&gt;
&lt;aside&gt;
I am related content.
&lt;/aside&gt;
&lt;footer&gt;Copyright stuff....&lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Column_Height_particularlyWithTwoColumnsWithDifferentContentHeight</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Column_Height_particularlyWithTwoColumnsWithDifferentContentHeight</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Big negative of this one that I noticed, it may have to do with fixed column widths
but when I made the window narrow, second column went below the first column



&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;equal height columns&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: rgb(123, 121, 143);
}
body {
	width: 80%;
	background: #fff;
	margin: 0 auto 2em;
	font: 100% Georgia, "Times New Roman", Times, serif;
}
p {
	font-size: 1em;
	line-height: 1.8;
	margin: 0 0 1em;
}
header {
	background: rgb(76, 67, 65);
	line-height: 5em;
	padding: 0 2em;
	color: white;
}
header h1 {
	font-family: Arial;
	font-variant: small-caps;
	font-size: 1.4em;
	font-weight: normal;
	letter-spacing: .2em;
}
footer {
	background: rgb(76, 67, 65);
	line-height: 3em;
	padding: 0 2em;
	color: white;
	font-size: .8em;
	text-align: center;
	font-family: Arial, Helvetica, sans-serif;
	clear: both;
}
article h2 {
	font-family: Arial, Helvetica, sans-serif;
	font-size: 1.6em;
	margin: .4em 0;
	font-weight: normal;
}
section {
	float: left;
	width: 55%;
	background: rgb(237, 228, 214);
	padding: 0 20px;
}
aside {
	float: right;
	width: 35%;
	background: rgb(173, 169, 130);
	padding: 0 20px;
}
/*styles go here*/
article {
	overflow: hidden;           /* this is the parent of the section */
	background: rgb(219,126,64); /* this is there so you can see the parent */
}
section, aside {
	padding-bottom: 1000em;         /* goes way down with padding */
	margin-bottom: -1000em;         /* comes right back up with negative margin */
	                                /* clips it off at the bottom of the longer one */
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header&gt;
&lt;h1&gt;Dialogs | Aristotle &amp; Socrates&lt;/h1&gt;
&lt;/header&gt;
    &lt;article&gt;

        &lt;section&gt;
            &lt;h2&gt;Aristotle&lt;/h2&gt;
            &lt;p&gt;All men by nature desire to know. An indication of this is the delight we take in our senses; for even apart from their usefulness they are loved for themselves; and above all others the sense of sight. For not only with a view to action, but even when we are not going to do anything, we prefer seeing (one might say) to everything else. The reason is that this, most of all the senses, makes us know and brings to light many differences between things.&lt;p&gt;
            &lt;p&gt;By nature animals are born with the faculty of sensation, and from sensation memory is produced in some of them, though not in others. And therefore the former are more intelligent and apt at learning than those which cannot remember; those which are incapable of hearing sounds are intelligent though they cannot be taught, e.g. the bee, and any other race of animals that may be like it; and those which besides memory have this sense of hearing can be taught.&lt;/p&gt;
            &lt;p&gt;The animals other than man live by appearances and memories, and have but little of connected experience; but the human race lives also by art and reasonings. Now from memory experience is produced in men; for the several memories of the same thing produce finally the capacity for a single experience. And experience seems pretty much like science and art, but really science and art come to men through experience; for 'experience made art', as Polus says, 'but inexperience luck.' Now art arises when from many notions gained by experience one universal judgement about a class of objects is produced. For to have a judgement that when Callias was ill of this disease this did him good, and similarly in the case of Socrates and in many individual cases, is a matter of experience; but to judge that it has done good to all persons of a certain constitution, marked off in one class, when they were ill of this disease, e.g. to phlegmatic or bilious people when burning with fevers-this is a matter of art.&lt;/p&gt;
            &lt;p&gt;With a view to action experience seems in no respect inferior to art, and men of experience succeed even better than those who have theory without experience. (The reason is that experience is knowledge of individuals, art of universals, and actions and productions are all concerned with the individual; for the physician does not cure man, except in an incidental way, but Callias or Socrates or some other called by some such individual name, who happens to be a man. If, then, a man has the theory without the experience, and recognizes the universal but does not know the individual included in this, he will often fail to cure; for it is the individual that is to be cured.) But yet we think that knowledge and understanding belong to art rather than to experience, and we suppose artists to be wiser than men of experience (which implies that Wisdom depends in all cases rather on knowledge); and this because the former know the cause, but the latter do not. For men of experience know that the thing is so, but do not know why, while the others know the 'why' and the cause. Hence we think also that the masterworkers in each craft are more honourable and know in a truer sense and are wiser than the manual workers, because they know the causes of the things that are done (we think the manual workers are like certain lifeless things which act indeed, but act without knowing what they do, as fire burns,-but while the lifeless things perform each of their functions by a natural tendency, the labourers perform them through habit); thus we view them as being wiser not in virtue of being able to act, but of having the theory for themselves and knowing the causes. And in general it is a sign of the man who knows and of the man who does not know, that the former can teach, and therefore we think art more truly knowledge than experience is; for artists can teach, and men of mere experience cannot. &lt;/p&gt;
        &lt;/section&gt;

        &lt;aside&gt;
            &lt;h2&gt;Socrates&lt;/h2&gt;
            &lt;p&gt;It is useful to have examined the number of meanings of a term both for clearness' sake (for a man is more likely to know what it is he asserts, if it bas been made clear to him how many meanings it may have), and also with a view to ensuring that our reasonings shall be in accordance with the actual facts and not addressed merely to the term used. For as long as it is not clear in how many senses a term is used, it is possible that the answerer and the questioner are not directing their minds upon the same thing: whereas when once it has been made clear how many meanings there are, and also upon which of them the former directs his mind when he makes his assertion, the questioner would then look ridiculous if he failed to address his argument to this. It helps us also both to avoid being misled and to mislead by false reasoning: for if we know the number of meanings of a term, we shall certainly never be misled by false reasoning, but shall know if the questioner fails to address his argument to the same point; and when we ourselves put the questions we shall be able to mislead him, if our answerer happens not to know the number of meanings of our terms. This, however, is not possible in all cases, but only when of the many senses some are true and others are false. This manner of argument, however, does not belong properly to dialectic; dialecticians should therefore by all means beware of this kind of verbal discussion, unless any one is absolutely unable to discuss the subject before him in any other way.&lt;/p&gt;
            &lt;p&gt;The discovery of the differences of things helps us both in reasonings about sameness and difference, and also in recognizing what any particular thing is. That it helps us in reasoning about sameness and difference is clear: for when we have discovered a difference of any kind whatever between the objects before us, we shall already have shown that they are not the same: while it helps us in recognizing what a thing is, because we usually distinguish the expression that is proper to the essence of each particular thing by means of the differentiae that are proper to it.&lt;/p&gt;
            &lt;p&gt;The examination of likeness is useful with a view both to inductive arguments and to hypothetical reasonings, and also with a view to the rendering of definitions. It is useful for inductive arguments, because it is by means of an induction of individuals in cases that are alike that we claim to bring the universal in evidence: for it is not easy to do this if we do not know the points of likeness. It is useful for hypothetical reasonings because it is a general opinion that among similars what is true of one is true also of the rest. If, then, with regard to any of them we are well supplied with matter for a discussion, we shall secure a preliminary admission that however it is in these cases, so it is also in the case before us: then when we have shown the former we shall have shown, on the strength of the hypothesis, the matter before us as well: for we have first made the hypothesis that however it is in these cases, so it is also in the case before us, and have then proved the point as regards these cases. It is useful for the rendering of definitions because, if we are able to see in one glance what is the same in each individual case of it, we shall be at no loss into what genus we ought to put the object before us when we define it: for of the common predicates that which is most definitely in the category of essence is likely to be the genus.&lt;/p&gt;
        &lt;/aside&gt;
    &lt;/article&gt;
&lt;footer&gt;
&lt;p&gt;footer content&lt;/p&gt;
&lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Layout</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Column_faux</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Layout</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Column_faux</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Article wrapping around (i.e. parent) of the section and aside
The two columns are different height, but the color of the faux columns
comes from the parent object that has a horizontal gradient, such that
there is one color behind one 'column' and a gutter, and then another color behind the 
other 'column'



&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;equal height columns&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
.clearfix:before,
.clearfix:after {
    content:"";
    display:table;
}
.clearfix:after {           /*clear fix used for &lt;article&gt;*/
    clear:both;
}
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: rgb(123, 121, 143);
}
body {
	width: 80%;
	background: #fff;
	margin: 0 auto 2em;
	font: 100% Georgia, "Times New Roman", Times, serif;
}
p {
	font-size: 1em;
	line-height: 1.8;
	margin: 0 0 1em;
	padding: 0 20px;
}
header {
	background: rgb(76, 67, 65);
	line-height: 5em;
	padding: 0 2em;
	color: white;
}
header h1 {
	font-family: Arial;
	font-variant: small-caps;
	font-size: 1.4em;
	font-weight: normal;
	letter-spacing: .2em;
}
footer {
	background: rgb(76, 67, 65);
	line-height: 3em;
	padding: 0 2em;
	color: white;
	font-size: .8em;
	text-align: center;
	font-family: Arial, Helvetica, sans-serif;
	clear: both;
}
article h2 {
	font-family: Arial, Helvetica, sans-serif;
	font-size: 1.6em;
	margin: .4em 0;
	font-weight: normal;
	padding: 0 20px;
}
section {
	float: left;
	width: 62%;
	/*  background-color:red;    &lt;=== This would show you where the real columns are */
}
aside {
	float: right;
	width: 35%;
	/*  background-color:blue;    &lt;=== This would show you where the real columns are */
}
/*using the wrapper to create the background color, and illusion of equal height columns w/ a sideways gradient */
article {  /* one color on the left, gap of white, then another color on the right as percentages */
	background: -moz-linear-gradient(left, rgb(237,228,214) 0%, rgb(237,228,214) 62%, rgb(255,255,255) 62%, rgb(255,255,255) 65%, rgb(173,169,130) 65%, rgb(173,169,130) 100%);
	background: -webkit-linear-gradient(left, rgb(237,228,214) 0%,rgb(237,228,214) 62%,rgb(255,255,255) 62%,rgb(255,255,255) 65%,rgb(173,169,130) 65%,rgb(173,169,130) 100%);
	background: linear-gradient(left, rgb(237,228,214) 0%,rgb(237,228,214) 62%,rgb(255,255,255) 62%,rgb(255,255,255) 65%,rgb(173,169,130) 65%,rgb(173,169,130) 100%);
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;header&gt;
&lt;h1&gt;Dialogs | Aristotle &amp; Socrates&lt;/h1&gt;
&lt;/header&gt;
&lt;article class="clearfix"&gt;
&lt;section&gt;
&lt;h2&gt;Aristotle&lt;/h2&gt;
&lt;p&gt;All men by nature desire to know. An indication of this is the delight we take in our senses; for even apart from their usefulness they are loved for themselves; and above all others the sense of sight. For not only with a view to action, but even when we are not going to do anything, we prefer seeing (one might say) to everything else. The reason is that this, most of all the senses, makes us know and brings to light many differences between things.&lt;p&gt;
&lt;p&gt;By nature animals are born with the faculty of sensation, and from sensation memory is produced in some of them, though not in others. And therefore the former are more intelligent and apt at learning than those which cannot remember; those which are incapable of hearing sounds are intelligent though they cannot be taught, e.g. the bee, and any other race of animals that may be like it; and those which besides memory have this sense of hearing can be taught.&lt;/p&gt;
&lt;p&gt;The animals other than man live by appearances and memories, and have but little of connected experience; but the human race lives also by art and reasonings. Now from memory experience is produced in men; for the several memories of the same thing produce finally the capacity for a single experience. And experience seems pretty much like science and art, but really science and art come to men through experience; for 'experience made art', as Polus says, 'but inexperience luck.' Now art arises when from many notions gained by experience one universal judgement about a class of objects is produced. For to have a judgement that when Callias was ill of this disease this did him good, and similarly in the case of Socrates and in many individual cases, is a matter of experience; but to judge that it has done good to all persons of a certain constitution, marked off in one class, when they were ill of this disease, e.g. to phlegmatic or bilious people when burning with fevers-this is a matter of art.&lt;/p&gt;
&lt;p&gt;With a view to action experience seems in no respect inferior to art, and men of experience succeed even better than those who have theory without experience. (The reason is that experience is knowledge of individuals, art of universals, and actions and productions are all concerned with the individual; for the physician does not cure man, except in an incidental way, but Callias or Socrates or some other called by some such individual name, who happens to be a man. If, then, a man has the theory without the experience, and recognizes the universal but does not know the individual included in this, he will often fail to cure; for it is the individual that is to be cured.) But yet we think that knowledge and understanding belong to art rather than to experience, and we suppose artists to be wiser than men of experience (which implies that Wisdom depends in all cases rather on knowledge); and this because the former know the cause, but the latter do not. For men of experience know that the thing is so, but do not know why, while the others know the 'why' and the cause. Hence we think also that the masterworkers in each craft are more honourable and know in a truer sense and are wiser than the manual workers, because they know the causes of the things that are done (we think the manual workers are like certain lifeless things which act indeed, but act without knowing what they do, as fire burns,-but while the lifeless things perform each of their functions by a natural tendency, the labourers perform them through habit); thus we view them as being wiser not in virtue of being able to act, but of having the theory for themselves and knowing the causes. And in general it is a sign of the man who knows and of the man who does not know, that the former can teach, and therefore we think art more truly knowledge than experience is; for artists can teach, and men of mere experience cannot. &lt;/p&gt;
&lt;/section&gt;
&lt;aside&gt;
&lt;h2&gt;Socrates&lt;/h2&gt;
&lt;p&gt;It is useful to have examined the number of meanings of a term both for clearness' sake (for a man is more likely to know what it is he asserts, if it bas been made clear to him how many meanings it may have), and also with a view to ensuring that our reasonings shall be in accordance with the actual facts and not addressed merely to the term used. For as long as it is not clear in how many senses a term is used, it is possible that the answerer and the questioner are not directing their minds upon the same thing: whereas when once it has been made clear how many meanings there are, and also upon which of them the former directs his mind when he makes his assertion, the questioner would then look ridiculous if he failed to address his argument to this. It helps us also both to avoid being misled and to mislead by false reasoning: for if we know the number of meanings of a term, we shall certainly never be misled by false reasoning, but shall know if the questioner fails to address his argument to the same point; and when we ourselves put the questions we shall be able to mislead him, if our answerer happens not to know the number of meanings of our terms. This, however, is not possible in all cases, but only when of the many senses some are true and others are false. This manner of argument, however, does not belong properly to dialectic; dialecticians should therefore by all means beware of this kind of verbal discussion, unless any one is absolutely unable to discuss the subject before him in any other way.&lt;/p&gt;
&lt;p&gt;The discovery of the differences of things helps us both in reasonings about sameness and difference, and also in recognizing what any particular thing is. That it helps us in reasoning about sameness and difference is clear: for when we have discovered a difference of any kind whatever between the objects before us, we shall already have shown that they are not the same: while it helps us in recognizing what a thing is, because we usually distinguish the expression that is proper to the essence of each particular thing by means of the differentiae that are proper to it.&lt;/p&gt;
&lt;p&gt;The examination of likeness is useful with a view both to inductive arguments and to hypothetical reasonings, and also with a view to the rendering of definitions. It is useful for inductive arguments, because it is by means of an induction of individuals in cases that are alike that we claim to bring the universal in evidence: for it is not easy to do this if we do not know the points of likeness. It is useful for hypothetical reasonings because it is a general opinion that among similars what is true of one is true also of the rest. If, then, with regard to any of them we are well supplied with matter for a discussion, we shall secure a preliminary admission that however it is in these cases, so it is also in the case before us: then when we have shown the former we shall have shown, on the strength of the hypothesis, the matter before us as well: for we have first made the hypothesis that however it is in these cases, so it is also in the case before us, and have then proved the point as regards these cases. It is useful for the rendering of definitions because, if we are able to see in one glance what is the same in each individual case of it, we shall be at no loss into what genus we ought to put the object before us when we define it: for of the common predicates that which is most definitely in the category of essence is likely to be the genus.&lt;/p&gt;
&lt;/aside&gt;
&lt;/article&gt;
&lt;footer&gt;
&lt;p&gt;footer content&lt;/p&gt;
&lt;/footer&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Positioning</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Z-Index</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Positioning</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Z-Index</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Z-index: higher number is closer to the viewer's eye
if two elements have the same z-order, then source order is used

Negative z-order is behind normal document flow elements, but will still
be above the 'initial stacking context' i.e. &lt;html&gt;

If a containing element has a z-order, then it becomes the stacking context
	for it's children elements


If you don't specify Z-order then these three elements would 'Stack'
	or overlap in the order that they occur in the code:

Within each stacking context, elements are stacked in this order:	
•	The background and borders of the element forming the stacking context
•	Any child stacked elements with a negative z-index
•	Elements in normal flow
•	Non-positioned floats
•	Any child stacked elements with a z-index of zero or auto
•	Any child stacked elements with a positive z-index value, lowest to highest
	
	
	
&lt;style&gt;	
	.element1 {
		background: rgb(211, 206, 61);
		position: absolute;
		left: -50px;
		top: -10px;
	}
	.element2 {
		background: rgb(85, 66, 54);
		position: absolute;
		left: 25px;
		top: 50px;
	}
	.element3 {
		background: rgb(247,120,37);
		position: absolute;
		left: 100px;
		top: 100px;
	}
&lt;/style&gt;	
&lt;body&gt;
	&lt;section class="container"&gt;
		&lt;div class="element1"&gt;One&lt;/div&gt;	&lt;!-- this order would affect stacking --&gt;
		&lt;div class="element2"&gt;Two&lt;/div&gt;
		&lt;div class="element3"&gt;Three&lt;/div&gt;
	&lt;/section&gt;
&lt;/body&gt;



////////////////////////////////////////////////
In this next example the .container element has a z-order
so the stacking context for the three &lt;div&gt; elements is reset to that of
the .container element rather than the &lt;html&gt; element

///////////////////////////////////////////////

&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;Controlling element stacking&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: #ccc;
}
body {
	width: 700px;
	background: #fff;
	margin: 2em auto 2em;
	font: 100% Arial, Helvetica, sans-serif;
	padding: 25px;
}
div {
	margin-bottom: 25px;
	width: 50px;
	height: 50px;
	padding: 25px;
}
li {
	font-size: 90%;
}
/*add styles here*/
.container {
	background: rgb(237,228,214);
	padding: 25px;
	height: 100px;
	position: relative;
	margin-top: 25px;
	border: 1px solid black;
	z-index: 1;
}
.element1 {
	background: rgb(211, 206, 61);
	position: absolute;
	left: -50px;
	top: -10px;
	z-index: -1;
}
.element2 {
	background: rgb(85, 66, 54);
	position: absolute;
	left: 25px;
	top: 50px;
	z-index: 3;
}
.element3 {
	background: rgb(247,120,37);
	position: absolute;
	left: 100px;
	top: 100px;
	z-index: 2;
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Z-index&lt;/h1&gt;
&lt;p&gt;Z-index can be set on any positioned element and has three possible values: &lt;strong&gt;auto&lt;/strong&gt; | &lt;strong&gt;&amp;lt;integer&amp;gt;&lt;/strong&gt; |  &lt;strong&gt;inherit&lt;/strong&gt; &lt;p&gt;
&lt;p&gt;By default, positioned elements are stacked on top of each other based on where they are encountered in the source order, with the last object on top. By setting the z-index property you can control the stacking order of positioned elements. Items are ordered based on "stacking context." The root element forms the initial stacking context, with other stacking contexts being created by applying a z-index value other than "auto."&lt;/p&gt;
&lt;p&gt;Within each stacking context, elements are stacked in this order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The background and borders of the element forming the stacking context&lt;/li&gt;
&lt;li&gt;Any child stacked elements with a negative z-index&lt;/li&gt;
&lt;li&gt;Elements in normal flow&lt;/li&gt;
&lt;li&gt;Non-positioned floats&lt;/li&gt;
&lt;li&gt;Any child stacked elements with a z-index of zero or auto&lt;/li&gt;
&lt;li&gt;Any child stacked elements with a positive z-index value, lowest to highest&lt;/li&gt;
&lt;/ul&gt;
&lt;section class="container"&gt;
&lt;div class="element1"&gt;One&lt;/div&gt;
&lt;div class="element2"&gt;Two&lt;/div&gt;
&lt;div class="element3"&gt;Three&lt;/div&gt;
&lt;/section&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>CSS_Element_Formatting</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Clipping</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>CSS_Element_Formatting</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Clipping</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>Clipping is for 'absolute' positioned elements

Top, right, bottom, left
From top, from left, from top, from left

example:
&lt;style&gt;
.element1 {

	position: absolute;	/* can also use with 'fixed' */
	clip:rect(50px 200px 150px 50px);	/* this is the OLD syntax, new syntax is with comma seperation */
}
&lt;/style&gt;

////////////////////////////////

&lt;!DOCTYPE HTML&gt;
&lt;html&gt;
&lt;head&gt;
&lt;meta charset="UTF-8"&gt;
&lt;title&gt;clipping positined elements&lt;/title&gt;
&lt;!--[if lt IE 9]&gt;
&lt;script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"&gt;&lt;/script&gt;
&lt;![endif]--&gt;
&lt;style&gt;
aside, article, section, header, footer, nav {
	display: block;
}
html, body {
	margin: 0;
	padding: 0;
}
html {
	background: #ccc;
}
body {
	width: 700px;
	background: #fff;
	margin: 2em auto 2em;
	font: 100% Arial, Helvetica, sans-serif;
	padding: 25px;
}
div {
	margin-bottom: 25px;
	width: 400px;
	height: 150px;
	padding: 25px;
	border: 2px solid red;
}
/*add styles here*/
.container {
	background: rgb(237,228,214);
	padding: 25px;
	height: 100px;
	position: relative;
	margin-top: 25px;
	border: 1px solid black;
}
.element1 {
	background: rgb(211, 206, 61);
	position: fixed;
	left: 25px;
	top: 25px;
	clip:rect(2px 452px 200px 2px);
}
&lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Clip&lt;/h1&gt;
&lt;p&gt;The Clip property can be set to define the visible part of absolutely positioned elements. You can set clipping values through the use of a rectangular shape. Values: &lt;strong&gt;&amp;lt;shape&amp;gt;&lt;/strong&gt; | &lt;strong&gt;auto&lt;/strong&gt; | &lt;strong&gt;inherit&lt;/strong&gt; &lt;p&gt;
&lt;p&gt;When defined, an element's clipping region hides any part of the element that is outside of the clipping region. Clipping is defined as a series of offset that tell the browser how far away from each side of the element to clip. Currently, the only supported shape for clipping is rectangular. The syntax is defined as a series of offsets that looks like this: &lt;strong&gt;rect(10px,10px, 25px, 10px)&lt;/strong&gt;&lt;/p&gt;
&lt;section class="container"&gt;
&lt;div class="element1"&gt;&lt;p&gt;This content will eventually be clipped based on the offsets passed into the clip property. The syntax of the property starts at the top and moves clockwise, so the offsets are: top, right, bottom, and left. Top and bottom offsets start at the top edge of the box while left and right offsets start from the left edge of the element's box.&lt;/p&gt;&lt;/div&gt;
&lt;/section&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>HTML_FORMs</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Form_With_JavaScript</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>HTML_FORMs</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Form_With_JavaScript</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>This is a complex example with Validation in the Javascript



&lt;!DOCTYPE html&gt;
&lt;!-- form.html by Bill Weinman http://bw.org/ --&gt;

&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8" /&gt; 
    &lt;title&gt;
        HTML Forms
    &lt;/title&gt;
    &lt;link rel="stylesheet" type="text/css" href="forms.css" /&gt;
    &lt;script type="text/javascript" src="forms.js"&gt;&lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;div id="outer"&gt;
&lt;div id="form"&gt;
&lt;h1&gt;
    HTML Forms
&lt;/h1&gt;

&lt;form id="f1" onsubmit="return display()" method="post"&gt;
    &lt;p&gt; Text: &lt;input type="text" name="text1" autofocus /&gt; &lt;/p&gt;
    &lt;p&gt; Password: &lt;input type="password" name="password1" /&gt; &lt;/p&gt;
    &lt;p&gt; Checkboxes: &lt;/p&gt;
    &lt;p&gt; Red: &lt;input type="checkbox" name="red" /&gt; &amp;nbsp;
        Blue: &lt;input type="checkbox" name="blue" checked /&gt; &amp;nbsp;
        Green: &lt;input type="checkbox" name="green" /&gt; 
    &lt;/p&gt;
    &lt;p&gt; Radio buttons: &lt;/p&gt;
    &lt;p&gt; Tall: &lt;input type="radio" name="size" value="tall" /&gt; &amp;nbsp;
        Grande: &lt;input type="radio" name="size" value="grande" /&gt; &amp;nbsp;
        Venti: &lt;input type="radio" name="size" value="venti" checked /&gt; 
    &lt;/p&gt;
    &lt;p&gt; &lt;input type="submit" name="submit1" value="Big Red Button" onclick="return display()" /&gt; &lt;/p&gt;
&lt;/form&gt;

&lt;/div&gt; &lt;!-- form --&gt;

&lt;div id="results"&gt;
    &lt;p&gt; Results go here. &lt;/p&gt;
&lt;/div&gt; &lt;!-- results --&gt;
&lt;/div&gt; &lt;!-- outer --&gt;

&lt;/body&gt;
&lt;/html&gt;

===============JavaScript file==================================


// forms.js by Bill Weinman  http://bw.org/

var eResults;
var eForm;
var resultsContent = "";
var haveValidation = false;
var validOkay = true;

// display a string in the output div
function output( s ) {
    eResults.innerHTML += '&lt;p&gt;' + s + '&lt;/p&gt;';
}

// display an error message in the output div
function errorOutput( s ) {
    eResults.innerHTML += '&lt;p class="error"&gt;' + s + '&lt;/p&gt;';
}

// clear the output div
function clearOutput() {
    eResults.innerHTML = '';
}

// check a form element with the validity API
function isValid( e ) {
    if(e.validity.valid === true) {
        return true;
    } else {
        m = e.validationMessage;
        errorOutput(e.name + ': ' + m);
        validOkay = false;
        return false;
    }
}

// return the display value of a form element
function dispValue( e ) {
    v = function(s) { return e.name + ': ' + s }

    if(e.type == "radio") {
        if(e.checked) return v(e.value);
        else return ""  ;
    }

    // for select-multiple display a comma-separated list
    if(e.type == "select-multiple") {
        a = [];
        for( var i = 0; i &lt; e.length; ++i ) {
            if(e[i].selected) a.push(e[i].value);
        }
        return v(a.join(', '));
    }

    if(e.type == "checkbox") return v( e.checked ? "on" : "off" );

    else return v(e.value);
}

// display all the form elements
function display() {
    clearOutput();
    if(!haveValidation) {
        errorOutput('This platform does not support the HTML5 validation API.');
    }
    validOkay = true;
    for( var i = 0; i &lt; eForm.length; ++i ) {
        var e = eForm.elements[i];
        var name = e.name;
        if(!haveValidation) output(dispValue(e));
        if(haveValidation &amp;&amp; isValid(e)) {
            output(dispValue(e));
        }
    }
    return false;
}

function submitDisplay() {
    display();
    return validOkay;
}

function init() {
    // initialize elements
    eResults = document.getElementById('results');
    eForm = document.getElementById('f1');

    // check to see if the validation API is implemented
    haveValidation = (typeof eForm.elements[0].validity === 'object');
}

window.onload = init;


==================CSS =======================================
/* main.css by Bill Weinman http://bw.org/contact
  v 1.0 - 2012-05-20
*/

/* reset margins */
html, body, div, span, h1, h2, h3, h4, h5, h6, p, ol, ul, li,
blockquote, pre, form, label, legend, table, caption, tbody, tfoot, thead,
tr, th, td, article, aside, canvas, details, embed, figure, figcaption,
footer, header, hgroup, menu, nav, output, section, summary, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
}

/* setup body */
body{
    background-color: #9ab;
}

body, p, input {
    line-height: 1.2;
    font-family: Tahoma, sans-serif;
    font-size: 16pt;
}

/* reasonable starting margins */
h1, h2, h3, h4, h5, h6, ol, ul, li { margin: .5ex 12pt; }
p { margin: 1ex 12pt; }
li { margin-left: 2em; }

/* setup headings */
h1, h2, h3, h4, h5, h6 {
    line-height: 1;
    font-family: Tahoma, Verdana, sans-serif;
    font-weight: bold;
}

h1 { font-size: 120%; }
h2 { font-size: 110%; }
h3 { font-size: 100%; }
h4 { font-size: 100%; }
h5 { font-size: 100%; }
h6 { font-size: 100%; }

/* setup pre */
pre { font-family: consolas, monospace; }

/* style the forms */

#outer {
    width: 800px;
    margin: 5px auto;
}

#form, #results {
    width: 396px;
    float: left;
    padding: 0;
    margin: 0 2px;
    background-color: #def;
}

#results p {
    font-family: monospace;
    margin: .5ex 1ex;
}

#results p.error {
    color: #c66;
}

textarea {
    width: 300px;
    height: 150px;
    font-size: 16pt;
}

</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>LOOPS</Category>
        <Language>JAVASCRIPT</Language>
        <Public>false</Public>
        <Name>Loops</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>LOOPS</Category>
          <Language>JAVASCRIPT</Language>
          <Public>false</Public>
          <Name>Loops</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>==========while=============
//have to initialize i before the loop;
var i = 1;
while (i&lt;5)
  {
  x=x + "The number is " + i + "&lt;br&gt;";
  i++;
  }
  
  
cars=["BMW","Volvo","Saab","Ford"];
var i=0;
while (cars[i])
{
document.write(cars[i] + "&lt;br&gt;");
i++;
}  
==========do while ===========
//The block will always execute at least once
do
  {
  x=x + "The number is " + i + "&lt;br&gt;";
  i++;
  }
while (i&lt;5);

===========For====================
//combines all the feautures of the while into the first line

for (var i=0;i&lt;cars.length;i++)
{
document.write(cars[i] + "&lt;br&gt;");
}
====
for (var i=0; i&lt;5; i++)
  {
  x=x + "The number is " + i + "&lt;br&gt;";
  }
====  
 for (var i=0,len=cars.length; i&lt;len; i++)
{
document.write(cars[i] + "&lt;br&gt;");
} 
====
var i=2,len=cars.length;
for (; i&lt;len; i++)
{
document.write(cars[i] + "&lt;br&gt;");
}
====
var i=0,len=cars.length;
for (; i&lt;len; )
{
document.write(cars[i] + "&lt;br&gt;");
i++;
}
===========For/In======================
//The JavaScript for/in statement loops through the properties of an object:
var person={fname:"John",lname:"Doe",age:25};

for (x in person)
  {
  txt=txt + person[x];
  }



</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ASPNET</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>readMe_ASPNET</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ASPNET</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>readMe_ASPNET</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>readMe_ASPNET


The difference is that client-side comments are ignored by the browser, 
	but they are still sent down the pipe. 
With server-side comments, the compiler ignores everything inside this block.

Visual Studio’s Text Editor toolbar also puts comments as server-side ones.
	If you want to give it a shot, go to your design page and press Ctrl+K, Ctrl+C 
	on some selected text and you’ll see it commented in the server-side commenting style.


Server Side comments: &lt;%--   --%&gt;

Client side comments: &lt;!-- This is a comment. --&gt;

</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ASPNET_MasterPage</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>1_Site.Master_default</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ASPNET_MasterPage</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>1_Site.Master_default</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>&lt;%@ Master Language="VB" AutoEventWireup="false" CodeBehind="Site.master.vb" Inherits="Membership_Roles.Site" %&gt;

&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"&gt;
&lt;head runat="server"&gt;
    &lt;title&gt;&lt;/title&gt;
    &lt;link href="~/Styles/Site.css" rel="stylesheet" type="text/css" /&gt;
    &lt;asp:ContentPlaceHolder ID="HeadContent" runat="server"&gt;
    &lt;/asp:ContentPlaceHolder&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;form runat="server"&gt;
    &lt;div class="page"&gt;
        &lt;div class="header"&gt;
            &lt;div class="title"&gt;
                &lt;h1&gt;
                    My ASP.NET Application
                &lt;/h1&gt;
            &lt;/div&gt;
            &lt;div class="loginDisplay"&gt;
                &lt;asp:LoginView ID="HeadLoginView" runat="server" EnableViewState="false"&gt;
                    &lt;AnonymousTemplate&gt;
                        [ &lt;a href="~/Account/Login.aspx" ID="HeadLoginStatus" runat="server"&gt;Log In&lt;/a&gt; ]
                    &lt;/AnonymousTemplate&gt;
                    &lt;LoggedInTemplate&gt;
                        Welcome &lt;span class="bold"&gt;&lt;asp:LoginName ID="HeadLoginName" runat="server" /&gt;&lt;/span&gt;!
                        [ &lt;asp:LoginStatus ID="HeadLoginStatus" runat="server" LogoutAction="Redirect" LogoutText="Log Out" LogoutPageUrl="~/"/&gt; ]
                    &lt;/LoggedInTemplate&gt;
                &lt;/asp:LoginView&gt;
            &lt;/div&gt;
            &lt;div class="clear hideSkiplink"&gt;
                &lt;asp:Menu ID="NavigationMenu" runat="server" CssClass="menu" EnableViewState="false" IncludeStyleBlock="false" Orientation="Horizontal"&gt;
                    &lt;Items&gt;
                        &lt;asp:MenuItem NavigateUrl="~/Default.aspx" Text="Home"/&gt;
                        &lt;asp:MenuItem NavigateUrl="~/About.aspx" Text="About"/&gt;
                    &lt;/Items&gt;
                &lt;/asp:Menu&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="main"&gt;
            &lt;asp:ContentPlaceHolder ID="MainContent" runat="server"/&gt;
        &lt;/div&gt;
        &lt;div class="clear"&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;div class="footer"&gt;
        
    &lt;/div&gt;
    &lt;/form&gt;
&lt;/body&gt;
&lt;/html&gt;
</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ASPNET_MasterPage</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>1_css_ForSiteMaster</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ASPNET_MasterPage</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>1_css_ForSiteMaster</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>/* DEFAULTS
----------------------------------------------------------*/

body   
{
    background: #b6b7bc;
    font-size: .80em;
    font-family: "Helvetica Neue", "Lucida Grande", "Segoe UI", Arial, Helvetica, Verdana, sans-serif;
    margin: 0px;
    padding: 0px;
    color: #696969;
}

a:link, a:visited
{
    color: #034af3;
}

a:hover
{
    color: #1d60ff;
    text-decoration: none;
}

a:active
{
    color: #034af3;
}

p
{
    margin-bottom: 10px;
    line-height: 1.6em;
}


/* HEADINGS   
----------------------------------------------------------*/

h1, h2, h3, h4, h5, h6
{
    font-size: 1.5em;
    color: #666666;
    font-variant: small-caps;
    text-transform: none;
    font-weight: 200;
    margin-bottom: 0px;
}

h1
{
    font-size: 1.6em;
    padding-bottom: 0px;
    margin-bottom: 0px;
}

h2
{
    font-size: 1.5em;
    font-weight: 600;
}

h3
{
    font-size: 1.2em;
}

h4
{
    font-size: 1.1em;
}

h5, h6
{
    font-size: 1em;
}

/* this rule styles &lt;h1&gt; and &lt;h2&gt; tags that are the 
first child of the left and right table columns */
.rightColumn &gt; h1, .rightColumn &gt; h2, .leftColumn &gt; h1, .leftColumn &gt; h2
{
    margin-top: 0px;
}


/* PRIMARY LAYOUT ELEMENTS   
----------------------------------------------------------*/

.page
{
    width: 960px;
    background-color: #fff;
    margin: 20px auto 0px auto;
    border: 1px solid #496077;
}

.header
{
    position: relative;
    margin: 0px;
    padding: 0px;
    background: #4b6c9e;
    width: 100%;
}

.header h1
{
    font-weight: 700;
    margin: 0px;
    padding: 0px 0px 0px 20px;
    color: #f9f9f9;
    border: none;
    line-height: 2em;
    font-size: 2em;
}

.main
{
    padding: 0px 12px;
    margin: 12px 8px 8px 8px;
    min-height: 420px;
}

.leftCol
{
    padding: 6px 0px;
    margin: 12px 8px 8px 8px;
    width: 200px;
    min-height: 200px;
}

.footer
{
    color: #4e5766;
    padding: 8px 0px 0px 0px;
    margin: 0px auto;
    text-align: center;
    line-height: normal;
}


/* TAB MENU   
----------------------------------------------------------*/

div.hideSkiplink
{
    background-color:#3a4f63;
    width:100%;
}

div.menu
{
    padding: 4px 0px 4px 8px;
}

div.menu ul
{
    list-style: none;
    margin: 0px;
    padding: 0px;
    width: auto;
}

div.menu ul li a, div.menu ul li a:visited
{
    background-color: #465c71;
    border: 1px #4e667d solid;
    color: #dde4ec;
    display: block;
    line-height: 1.35em;
    padding: 4px 20px;
    text-decoration: none;
    white-space: nowrap;
}

div.menu ul li a:hover
{
    background-color: #bfcbd6;
    color: #465c71;
    text-decoration: none;
}

div.menu ul li a:active
{
    background-color: #465c71;
    color: #cfdbe6;
    text-decoration: none;
}

/* FORM ELEMENTS   
----------------------------------------------------------*/

fieldset
{
    margin: 1em 0px;
    padding: 1em;
    border: 1px solid #ccc;
}

fieldset p 
{
    margin: 2px 12px 10px 10px;
}

fieldset.login label, fieldset.register label, fieldset.changePassword label
{
    display: block;
}

fieldset label.inline 
{
    display: inline;
}

legend 
{
    font-size: 1.1em;
    font-weight: 600;
    padding: 2px 4px 8px 4px;
}

input.textEntry 
{
    width: 320px;
    border: 1px solid #ccc;
}

input.passwordEntry 
{
    width: 320px;
    border: 1px solid #ccc;
}

div.accountInfo
{
    width: 42%;
}

/* MISC  
----------------------------------------------------------*/

.clear
{
    clear: both;
}

.title
{
    display: block;
    float: left;
    text-align: left;
    width: auto;
}

.loginDisplay
{
    font-size: 1.1em;
    display: block;
    text-align: right;
    padding: 10px;
    color: White;
}

.loginDisplay a:link
{
    color: white;
}

.loginDisplay a:visited
{
    color: white;
}

.loginDisplay a:hover
{
    color: white;
}

.failureNotification
{
    font-size: 1.2em;
    color: Red;
}

.bold
{
    font-weight: bold;
}

.submitButton
{
    text-align: right;
    padding-right: 10px;
}</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>ASPNET_Roles_Membership_web.config</Category>
        <Language>ASP</Language>
        <Public>false</Public>
        <Name>Password</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>ASPNET_Roles_Membership_web.config</Category>
          <Language>ASP</Language>
          <Public>false</Public>
          <Name>Password</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>from: http://stackoverflow.com/questions/3753226/create-password-and-passwordsalt
|||||||||||passwordFormat||||||||||||||||||||||||||||||||||||

Here in this setting section the attribute 
"passwordFormat" set the way your user password is stored.
Options are - 
	Clear (0), 
	Hashed (1), 
	Encrypted (2)
	
==========================================================
&lt;membership&gt;
  &lt;providers&gt;
    &lt;clear/&gt;
    &lt;add name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider" connectionStringName="ApplicationServices"
         enablePasswordRetrieval="false" passwordFormat="Encrypted" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false"
         maxInvalidPasswordAttempts="5" minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10"
         applicationName="/" /&gt;
  &lt;/providers&gt;
&lt;/membership&gt;

============================================================

By default it will be having hashed value - or if u have not specified passwordFormat.

In clear text the password will saved as it is - Text clear - readable.

In Hashed option the password will not be (Encrypted) only encoded using Hashing alogorithm

In Encrypted option the password will be stored with first Encrypting the password and then encoding it.

In Encrypted option u need to specify the a non-auto generated "machine key" and store in the machine config To get one refer : Get a non-autogenerated machine key 

=============================================================

and talking about the password salt - 
	its just randomly generated string which is used to Encrypt and encode the password along with the Validation &amp; Decryption Key.

If you want to overide the encrypting method of asp.net membership provider to encode youself (if using custome membership provider) 
you can do something like this:

private string EncodePassword(byte passFormat, string passtext, string passwordSalt)
{
    if(passFormat.Equals(0)) // passwordFormat="Clear" (0)
        return passtext;
    else{
        byte[] bytePASS = Encoding.Unicode.GetBytes(passtext);
        byte[] byteSALT = Convert.FromBase64String(passwordSalt);
        byte[] byteRESULT = new byte[byteSALT.Length + bytePASS.Length + 1];

        System.Buffer.BlockCopy(byteSALT, 0, byteRESULT, 0, byteSALT.Length);
        System.Buffer.BlockCopy(bytePASS, 0, byteRESULT, byteSALT.Length, bytePASS.Length);

        if(passFormat.Equals(1)) // passwordFormat="Hashed" (1)
        {
            HashAlgorithm ha = HashAlgorithm.Create(Membership.HashAlgorithmType);
            return (Convert.ToBase64String(ha.ComputeHash(byteRESULT)));
        }
        else // passwordFormat="Encrypted" (2)
        {
            MyCustomMembership myObj = new MyCustomMembership();
            return(Convert.ToBase64String(myObj.EncryptPassword(byteRESULT)));
        }
    }
}

and then call with something like this

    string passSalt = // Either generate a random salt for that user or retrieve the salt from database if the user is in edit and has a password salt
    EncodePassword(/* 0 or 1 or 2 */, passwordText, passSalt);

|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||</Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Table_Hints_LocksScanSeek_etc</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>readMe_Table_Hints_LocksScanSeek_etc</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Table_Hints_LocksScanSeek_etc</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>readMe_Table_Hints_LocksScanSeek_etc</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>readMe_Table_Hints_LocksScanSeek_etc

Because the SQL Server query optimizer typically selects the best execution plan for a query, 
we recommend that hints be used only as a last resort by experienced developers and database administrators.


WITH  ( &lt;table_hint&gt; [ [, ]...n ] )

&lt;table_hint&gt; ::= 
[ NOEXPAND ] { 
    INDEX ( index_value [ ,...n ] ) | INDEX =  ( index_value )
  | FASTFIRSTROW 
  | FORCESEEK [( index_value ( index_column_name  [ ,... ] ) ) ]
  | FORCESCAN
  | HOLDLOCK 
  | NOLOCK 
  | NOWAIT
  | PAGLOCK 
  | READCOMMITTED 
  | READCOMMITTEDLOCK 
  | READPAST 
  | READUNCOMMITTED 
  | REPEATABLEREAD 
  | ROWLOCK 
  | SERIALIZABLE 
  | TABLOCK 
  | TABLOCKX 
  | UPDLOCK 
  | XLOCK 
} 

&lt;table_hint_limited&gt; ::=
{
    KEEPIDENTITY 
  | KEEPDEFAULTS 
  | FASTFIRSTROW 
  | HOLDLOCK 
  | IGNORE_CONSTRAINTS 
  | IGNORE_TRIGGERS 
  | NOLOCK 
  | NOWAIT
  | PAGLOCK 
  | READCOMMITTED 
  | READCOMMITTEDLOCK 
  | READPAST 
  | REPEATABLEREAD 
  | ROWLOCK 
  | SERIALIZABLE 
  | TABLOCK 
  | TABLOCKX 
  | UPDLOCK 
  | XLOCK 
} </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Table_Hints_LocksScanSeek_etc</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>HOLDLOCK</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Table_Hints_LocksScanSeek_etc</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>HOLDLOCK</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>HOLDLOCK

    Is equivalent to SERIALIZABLE. For more information, 
   		 see SERIALIZABLE later in this topic. 
   	HOLDLOCK applies only to the table or view for which it is specified 
   		and only for the duration of the transaction defined by the statement that it is used in. 
   	HOLDLOCK cannot be used in a SELECT statement that includes the FOR BROWSE option.
   	
   	
SERIALIZABLE

    Is equivalent to HOLDLOCK. Makes shared locks more restrictive by holding them until a transaction is completed, 
    instead of releasing the shared lock as soon as the required table or data page is no longer needed, 
    whether the transaction has been completed or not. 
    The scan is performed with the same semantics as a transaction running at the SERIALIZABLE isolation level. 
    For more information about isolation levels, see SET TRANSACTION ISOLATION LEVEL (Transact-SQL).  
    
UPDLOCK

    Specifies that update locks are to be taken and held until the transaction completes. 
    UPDLOCK takes update locks for read operations only at the row-level or page-level. 
    If UPDLOCK is combined with TABLOCK, or a table-level lock is taken for some other reason, 
    an exclusive (X) lock will be taken instead.

    When UPDLOCK is specified, the READCOMMITTED and READCOMMITTEDLOCK isolation level hints are ignored. 
    For example, 
	    if the isolation level of the session is set to SERIALIZABLE and a query specifies 
	    (UPDLOCK, READCOMMITTED), the READCOMMITTED hint is ignored and the transaction is run using the 
	    SERIALIZABLE isolation level.   
	    
ROWLOCK

    Specifies that row locks are taken when page or table locks are ordinarily taken. 
    When specified in transactions operating at the SNAPSHOT isolation level, 
    row locks are not taken unless ROWLOCK is combined with other table hints that require locks, 
    such as UPDLOCK and HOLDLOCK.	      
	      
	      
====================================================================================================

USE [aspnetdb]
GO

/****** Object:  StoredProcedure [dbo].[aspnet_Membership_UpdateUser]    Script Date: 12/24/2013 08:19:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE PROCEDURE [dbo].[aspnet_Membership_UpdateUser]
    @ApplicationName      nvarchar(256),
    @UserName             nvarchar(256),
    @Email                nvarchar(256),
    @Comment              ntext,
    @IsApproved           bit,
    @LastLoginDate        datetime,
    @LastActivityDate     datetime,
    @UniqueEmail          int,
    @CurrentTimeUtc       datetime
AS
BEGIN
    DECLARE @UserId uniqueidentifier
    DECLARE @ApplicationId uniqueidentifier
    SELECT  @UserId = NULL
    SELECT  @UserId = u.UserId, @ApplicationId = a.ApplicationId
    FROM    dbo.aspnet_Users u, dbo.aspnet_Applications a, dbo.aspnet_Membership m
    WHERE   LoweredUserName = LOWER(@UserName) AND
            u.ApplicationId = a.ApplicationId  AND
            LOWER(@ApplicationName) = a.LoweredApplicationName AND
            u.UserId = m.UserId

    IF (@UserId IS NULL)
        RETURN(1)

    IF (@UniqueEmail = 1)
    BEGIN
        IF (EXISTS (SELECT *
                    FROM  dbo.aspnet_Membership WITH (UPDLOCK, HOLDLOCK)		-- &lt;==========================
                    WHERE ApplicationId = @ApplicationId  AND @UserId &lt;&gt; UserId AND LoweredEmail = LOWER(@Email)))
        BEGIN
            RETURN(7)
        END
    END

    DECLARE @TranStarted   bit
    SET @TranStarted = 0

    IF( @@TRANCOUNT = 0 )
    BEGIN
	    BEGIN TRANSACTION
	    SET @TranStarted = 1
    END
    ELSE
	SET @TranStarted = 0

    UPDATE dbo.aspnet_Users WITH (ROWLOCK)		-- &lt;==========================
    SET
         LastActivityDate = @LastActivityDate
    WHERE
       @UserId = UserId

    IF( @@ERROR &lt;&gt; 0 )
        GOTO Cleanup

    UPDATE dbo.aspnet_Membership WITH (ROWLOCK)		-- &lt;==========================
    SET
         Email            = @Email,
         LoweredEmail     = LOWER(@Email),
         Comment          = @Comment,
         IsApproved       = @IsApproved,
         LastLoginDate    = @LastLoginDate
    WHERE
       @UserId = UserId

    IF( @@ERROR &lt;&gt; 0 )
        GOTO Cleanup

    IF( @TranStarted = 1 )
    BEGIN
	SET @TranStarted = 0
	COMMIT TRANSACTION
    END

    RETURN 0

Cleanup:

    IF( @TranStarted = 1 )
    BEGIN
        SET @TranStarted = 0
    	ROLLBACK TRANSACTION
    END

    RETURN -1
END
GO


	      
	      
	      </Code>
      </SnippetValue>
    </value>
  </item>
  <item>
    <key>
      <SnippetKey xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Category>Table_Hints_LocksScanSeek_etc</Category>
        <Language>SQLSERVER2K SQL</Language>
        <Public>false</Public>
        <Name>Used_In_Transaction</Name>
        <Group>My Snippets</Group>
      </SnippetKey>
    </key>
    <value>
      <SnippetValue xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
        <Key>
          <Category>Table_Hints_LocksScanSeek_etc</Category>
          <Language>SQLSERVER2K SQL</Language>
          <Public>false</Public>
          <Name>Used_In_Transaction</Name>
          <Group>My Snippets</Group>
        </Key>
        <Keywords />
        <Imports />
        <Code>HOLDLOCK

    Is equivalent to SERIALIZABLE. For more information, 
   		 see SERIALIZABLE later in this topic. 
   	HOLDLOCK applies only to the table or view for which it is specified 
   		and only for the duration of the transaction defined by the statement that it is used in. 
   	HOLDLOCK cannot be used in a SELECT statement that includes the FOR BROWSE option.
   	
   	
SERIALIZABLE

    Is equivalent to HOLDLOCK. Makes shared locks more restrictive by holding them until a transaction is completed, 
    instead of releasing the shared lock as soon as the required table or data page is no longer needed, 
    whether the transaction has been completed or not. 
    The scan is performed with the same semantics as a transaction running at the SERIALIZABLE isolation level. 
    For more information about isolation levels, see SET TRANSACTION ISOLATION LEVEL (Transact-SQL).  
    
UPDLOCK

    Specifies that update locks are to be taken and held until the transaction completes. 
    UPDLOCK takes update locks for read operations only at the row-level or page-level. 
    If UPDLOCK is combined with TABLOCK, or a table-level lock is taken for some other reason, 
    an exclusive (X) lock will be taken instead.

    When UPDLOCK is specified, the READCOMMITTED and READCOMMITTEDLOCK isolation level hints are ignored. 
    For example, 
	    if the isolation level of the session is set to SERIALIZABLE and a query specifies 
	    (UPDLOCK, READCOMMITTED), the READCOMMITTED hint is ignored and the transaction is run using the 
	    SERIALIZABLE isolation level.   
	    
ROWLOCK

    Specifies that row locks are taken when page or table locks are ordinarily taken. 
    When specified in transactions operating at the SNAPSHOT isolation level, 
    row locks are not taken unless ROWLOCK is combined with other table hints that require locks, 
    such as UPDLOCK and HOLDLOCK.	      
	      
	      
====================================================================================================

USE [aspnetdb]
GO

/****** Object:  StoredProcedure [dbo].[aspnet_Membership_UpdateUser]    Script Date: 12/24/2013 08:19:40 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER OFF
GO

CREATE PROCEDURE [dbo].[aspnet_Membership_UpdateUser]
    @ApplicationName      nvarchar(256),
    @UserName             nvarchar(256),
    @Email                nvarchar(256),
    @Comment              ntext,
    @IsApproved           bit,
    @LastLoginDate        datetime,
    @LastActivityDate     datetime,
    @UniqueEmail          int,
    @CurrentTimeUtc       datetime
AS
BEGIN
    DECLARE @UserId uniqueidentifier
    DECLARE @ApplicationId uniqueidentifier
    SELECT  @UserId = NULL
    SELECT  @UserId = u.UserId, @ApplicationId = a.ApplicationId
    FROM    dbo.aspnet_Users u, dbo.aspnet_Applications a, dbo.aspnet_Membership m
    WHERE   LoweredUserName = LOWER(@UserName) AND
            u.ApplicationId = a.ApplicationId  AND
            LOWER(@ApplicationName) = a.LoweredApplicationName AND
            u.UserId = m.UserId

    IF (@UserId IS NULL)
        RETURN(1)

    IF (@UniqueEmail = 1)
    BEGIN
        IF (EXISTS (SELECT *
                    FROM  dbo.aspnet_Membership WITH (UPDLOCK, HOLDLOCK)		-- &lt;==========================
                    WHERE ApplicationId = @ApplicationId  AND @UserId &lt;&gt; UserId AND LoweredEmail = LOWER(@Email)))
        BEGIN
            RETURN(7)
        END
    END

    DECLARE @TranStarted   bit
    SET @TranStarted = 0

    IF( @@TRANCOUNT = 0 )
    BEGIN
	    BEGIN TRANSACTION
	    SET @TranStarted = 1
    END
    ELSE
	SET @TranStarted = 0

    UPDATE dbo.aspnet_Users WITH (ROWLOCK)		-- &lt;==========================
    SET
         LastActivityDate = @LastActivityDate
    WHERE
       @UserId = UserId

    IF( @@ERROR &lt;&gt; 0 )
        GOTO Cleanup

    UPDATE dbo.aspnet_Membership WITH (ROWLOCK)		-- &lt;==========================
    SET
         Email            = @Email,
         LoweredEmail     = LOWER(@Email),
         Comment          = @Comment,
         IsApproved       = @IsApproved,
         LastLoginDate    = @LastLoginDate
    WHERE
       @UserId = UserId

    IF( @@ERROR &lt;&gt; 0 )
        GOTO Cleanup

    IF( @TranStarted = 1 )
    BEGIN
	SET @TranStarted = 0
	COMMIT TRANSACTION
    END

    RETURN 0

Cleanup:

    IF( @TranStarted = 1 )
    BEGIN
        SET @TranStarted = 0
    	ROLLBACK TRANSACTION
    END

    RETURN -1
END
GO


	      
	      
	      </Code>
      </SnippetValue>
    </value>
  </item>
</dictionary>